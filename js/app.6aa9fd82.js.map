{"version":3,"file":"js/app.6aa9fd82.js","mappings":"2KACAA,EAAAA,EAAAA,IAIQC,EAAAA,EAAA,M,kBAHJ,IAES,EAFTC,EAAAA,EAAAA,IAESC,EAAAA,EAAA,M,kBADT,IAAc,EAAdD,EAAAA,EAAAA,IAAcE,M,eAOlB,OACAC,KAAM,MAENC,KAAM,KAAM,CAAN,I,QCRN,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,Q,mRCNIN,EAAAA,EAAAA,IAsBsBO,EAAAA,EAAA,C,WAtBQC,EAAAA,O,qCAAAA,EAAAA,OAAMC,GAAGC,KAAMF,EAAAA,KAAOG,QAAK,eAAEH,EAAAA,MAAI,GAAUI,UAAA,IAAzE,C,kBACI,IAWc,EAXdZ,EAAAA,EAAAA,IAWca,EAAAA,EAAA,CAVdC,MAAM,QACNC,IAAA,IAFA,CAIiBC,QAAM,SACnB,IAIS,EAJThB,EAAAA,EAAAA,IAISiB,EAAAA,EAAA,CAHTC,QAAQ,OACRC,KAAK,mBACJR,QAAK,yBAAOH,EAAAA,MAAQA,EAAAA,MAAI,gB,OAI7BR,EAAAA,EAAAA,IAAuBoB,EAAAA,IACvBpB,EAAAA,EAAAA,IAOSqB,EAAAA,EAAA,CAPDC,QAAQ,UAAUP,IAAA,IAA1B,C,kBACiB,IAA0C,gBAAvDQ,EAAAA,EAAAA,IAKcC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAL6BjB,EAAAA,aAAW,CAAjCkB,EAAYC,M,WAAjC7B,EAAAA,EAAAA,IAKce,EAAAA,EAAA,CAL2Ce,IAAKD,EACjDb,MAAOY,EAAWZ,MAClBe,MAAOH,EAAWI,MAClBnB,QAAK,GAAEH,EAAAA,cAAgBkB,EAAWI,OAH/C,gD,cAfR,yBAwBwB,KAAbtB,EAAAA,gBAAa,WAAxBe,EAAAA,EAAAA,IAGM,MAAAQ,EAAA,EAFF/B,EAAAA,EAAAA,IAAcgC,OADlB,eAIwB,iBAAbxB,EAAAA,gBAAa,WAAxBe,EAAAA,EAAAA,IAGM,MAAAU,EAAA,EAFFjC,EAAAA,EAAAA,IAAgBkC,OADpB,eAIwB,aAAb1B,EAAAA,gBAAa,WAAxBe,EAAAA,EAAAA,IAGM,MAAAY,EAAA,EAFFnC,EAAAA,EAAAA,IAAYoC,OADhB,eAIwB,gBAAb5B,EAAAA,gBAAa,WAAxBe,EAAAA,EAAAA,IAGM,MAAAc,EAAA,EAFFrC,EAAAA,EAAAA,IAAesC,OADnB,mB,0EC7BqBC,MAAM,Q,GACPC,EAAAA,EAAAA,GAA8B,UAA1B,yBAAqB,G,GAEzBA,EAAAA,EAAAA,GAAsC,UAAlC,iCAA6B,G,GAKhCD,MAAM,Q,GACPC,EAAAA,EAAAA,GAAyB,UAArB,oBAAgB,G,GAEpBA,EAAAA,EAAAA,GAAkB,UAAd,aAAS,G,GAKZD,MAAM,Q,GACPC,EAAAA,EAAAA,GAA0B,UAAtB,qBAAiB,G,GAErBA,EAAAA,EAAAA,GAAiC,UAA7B,4BAAwB,G,+IA1B3B,GAAVC,EAAAA,aAAU,WAArBlB,EAAAA,EAAAA,IAEM,MAAAQ,EAAA,EADF/B,EAAAA,EAAAA,IAAyD0C,EAAAA,EAAA,CAApCC,cAAA,UADzB,WAGApB,EAAAA,EAAAA,IA6BM,MAAAU,EAAA,EA5BFjC,EAAAA,EAAAA,IA2Bc4C,EAAAA,EAAA,CA3BDL,MAAM,aAAW,C,kBAC1B,IAyBQ,EAzBRvC,EAAAA,EAAAA,IAyBQ6C,EAAAA,EAAA,CAzBD,gBAAWN,MAAM,QAAxB,C,kBACI,IAOQ,EAPRvC,EAAAA,EAAAA,IAOQ8C,EAAAA,EAAA,CAPDP,MAAM,YAAYQ,KAAK,KAAKC,GAAG,IAAIC,GAAG,MAA7C,C,kBACI,IAKM,EALNT,EAAAA,EAAAA,GAKM,MALN,EAKM,CAJFH,GACArC,EAAAA,EAAAA,IAA4CkD,EAAA,CAA5BC,eAAgB,WAChCC,GACApD,EAAAA,EAAAA,IAAuCqD,EAAA,CAA1BC,aAAc,gB,OAGnCtD,EAAAA,EAAAA,IAOQ8C,EAAAA,EAAA,CAPDP,MAAM,YAAaQ,KAAK,KAAKC,GAAG,IAAIC,GAAG,MAA9C,C,kBACI,IAKM,EALNT,EAAAA,EAAAA,GAKM,MALN,EAKM,CAJFe,GACAvD,EAAAA,EAAAA,IAAawD,GACbC,GACAzD,EAAAA,EAAAA,IAAiB0D,Q,OAGzB1D,EAAAA,EAAAA,IAOQ8C,EAAAA,EAAA,CAPDP,MAAM,YAAaQ,KAAK,KAAKC,GAAG,IAAIC,GAAG,MAA9C,C,kBACI,IAKM,EALNT,EAAAA,EAAAA,GAKM,MALN,EAKM,CAJFmB,GACA3D,EAAAA,EAAAA,IAAyCkD,EAAA,CAAzBC,eAAgB,QAChCS,GACA5D,EAAAA,EAAAA,IAAoCqD,EAAA,CAAvBC,aAAc,a,2KCXN,0B,UAuDzCd,EAAAA,EAAAA,GAAiB,SAAd,cAAU,K,GACRD,MAAM,kBAAkBsB,MAAA,oC,GAQXtB,MAAM,Y,8DA/E5BC,EAAAA,EAAAA,GAOM,aANFxC,EAAAA,EAAAA,IAKuH8D,EAAAA,EAAA,CALzG5C,QAAQ,WACE,qBACK6C,UAAO,yBAAQtB,EAAAA,UAAUA,EAAAA,aAAY,MAAC,WAC3CuB,MAAM,oB,WACGxD,EAAAA,O,qCAAAA,EAAAA,OAAMC,GACfwD,KAAK,4EAL7B,0BAQJzB,EAAAA,EAAAA,GA0BM,aAzBFxC,EAAAA,EAAAA,IAwBQ6C,EAAAA,EAAA,M,kBAvBA,IAaQ,EAbR7C,EAAAA,EAAAA,IAaQ8C,EAAAA,EAAA,M,kBAZJ,IAG4D,EAH5D9C,EAAAA,EAAAA,IAG4DkE,EAAAA,EAAA,CAHlDvD,QAAK,eAAE8B,EAAAA,UAAUA,EAAAA,aAAa0B,KAAKC,GAAcA,EAAEC,OACrD9B,MAAM,YACNrB,QAAQ,WACPoD,MAAO9D,EAAAA,aAHhB,C,kBAG6B,IAAsB,M,KAHnD,cAKAR,EAAAA,EAAAA,IAMoDuE,EAAAA,EAAA,CAN1ChC,MAAM,OACJsB,MAAA,eACAG,MAAM,cACN1C,QAAQ,UACRkD,SAAA,GACCC,MAAOjE,EAAAA,W,WACCA,EAAAA,mB,qCAAAA,EAAAA,mBAAkBC,IANvC,kC,OASJT,EAAAA,EAAAA,IAOQ8C,EAAAA,EAAA,M,kBANJ,IAES,EAFT9C,EAAAA,EAAAA,IAESkE,EAAAA,EAAA,CAFAvD,QAAK,eAAE8B,EAAAA,UAAUA,EAAAA,aAAa0B,KAAKC,GAAcA,EAAEC,OAAO9B,MAAM,QAAzE,C,kBACI,IAAsE,EAAtEvC,EAAAA,EAAAA,IAAsE0E,EAAAA,GAAA,CAApD,cAAajC,EAAAA,YAAauB,MAAM,mBAAlD,2B,OAEJhE,EAAAA,EAAAA,IAESkE,EAAAA,EAAA,CAFAvD,QAAK,eAAE8B,EAAAA,SAASA,EAAAA,aAAa0B,KAAKC,GAAcA,EAAEC,OAAO9B,MAAM,QAAxE,C,kBACI,IAAsE,EAAtEvC,EAAAA,EAAAA,IAAsE0E,EAAAA,GAAA,CAArD,cAAajC,EAAAA,aAAcuB,MAAM,mBAAlD,2B,2BAMpBxB,EAAAA,EAAAA,GAEM,aADFA,EAAAA,EAAAA,GAA0G,aAAAmC,EAAAA,EAAAA,IAAAA,KAA7FC,OAAOC,MAAMC,kBAAkBC,kBAAkBC,EAAAA,gBAAgBC,QAAQ,gBAAa,MAGvGzC,EAAAA,EAAAA,GAsBM,aArBFxC,EAAAA,EAAAA,IAoBSqB,EAAAA,EAAA,CApBA6D,SAAQzC,EAAAA,kBAAmB,kBAAgB,WAAWnB,QAAQ,UAAUiB,MAAM,uBAAuBsB,MAAA,kCAAuCsB,KAAK,O,WAAgB1C,EAAAA,gB,qCAAAA,EAAAA,gBAAehC,IAAzL,C,kBAEgB,IAAoD,gBADhEc,EAAAA,EAAAA,IAkBcC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAjBwBgB,EAAAA,2BAAyB,CAA3C2C,EAAQzD,M,WAD5B7B,EAAAA,EAAAA,IAkBce,EAAAA,EAAA,CAlBAF,QAAK,IAAE8B,EAAAA,UAAU2C,EAAOf,IAAK5B,EAAAA,gBAAAA,EACuBb,IAAKD,EAC1D2C,MAAO9D,EAAAA,YACPqB,MAAOuD,EAAOf,GACf9B,MAAM,kBAJlB,C,kBAMI,IAQQ,EARRvC,EAAAA,EAAAA,IAQQ6C,EAAAA,EAAA,M,kBAPJ,IAMqB,EANrB7C,EAAAA,EAAAA,IAMqBqF,EAAAA,EAAA,CANDC,MAAA,GAAMzB,MAAA,gBAA1B,C,kBACI,IAI+B,EAJ/B7D,EAAAA,EAAAA,IAI+B0E,EAAAA,GAAA,CAJfa,SAAA,GACC1D,MAAOuD,EAAOf,GACdC,MAAO9D,EAAAA,Y,WACCiC,EAAAA,gB,qCAAAA,EAAAA,gBAAehC,GACxB8B,MAAM,QAJtB,0C,KADJ,S,KADJ,OAUAvC,EAAAA,EAAAA,IAA0FwF,EAAAA,EAAA,CAAvEjD,MAAM,YAAU,C,kBAAC,IAAa,mBAAX6C,EAAOf,IAAI,KAACM,EAAAA,EAAAA,IAAElC,EAAAA,SAAS2C,IAAM,M,KAAnE,S,KAhBJ,8C,KADJ,gCAuBJ5C,EAAAA,EAAAA,GAEM,aADFxC,EAAAA,EAAAA,IAAgF8D,EAAAA,EAAA,C,WAAzDtD,EAAAA,U,qCAAAA,EAAAA,UAASC,GAAOgF,QAAOhD,EAAAA,iCAA9C,oCAGJD,EAAAA,EAAAA,GAiBM,YAhBFP,GACAO,EAAAA,EAAAA,GAcM,MAdN,EAcM,EAbFxC,EAAAA,EAAAA,IAYSqB,EAAAA,EAAA,CAZD,kBAAgB,WAAWkB,MAAM,OAAOjB,QAAQ,WAAxD,C,kBACiB,IAAyD,gBAAtEC,EAAAA,EAAAA,IAQcC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IARyBjB,EAAAA,eAAewE,EAAAA,iBAAc,CAA/CI,EAAQzD,M,WAA7B7B,EAAAA,EAAAA,IAQce,EAAAA,EAAA,CAR0De,IAAKD,EAChE2C,MAAO9D,EAAAA,YACPqB,MAAOuD,EAAOf,GACd1D,QAAK,GAAE8B,EAAAA,UAAU2C,EAAOf,IACzB9B,MAAM,aAJlB,C,kBAMI,IAAgE,EAAhEC,EAAAA,EAAAA,GAAgE,OAAhE,GAAgEmC,EAAAA,EAAAA,IAAvCS,EAAOf,IAAI,KAACM,EAAAA,EAAAA,IAAElC,EAAAA,SAAS2C,IAAM,IACtDpF,EAAAA,EAAAA,IAAuBoB,EAAAA,M,KAP3B,8C,WAJZ,G,CAqBA,OACIjB,KAAM,aACNuF,MAAO,CACHvC,eAAgBwC,QAEpBvF,OACI,MAAO,CACHwF,eAAgB,CAAC,OAAU,GAAI,IAAO,IACtCC,OAAQ,GACRC,UAAW,GACXC,YAAa,GACbC,WAAY,CAAC,KAAM,WACnBC,mBAAoB,KACpBC,YAAa,UAGpB,EACDC,SAAU,CAENC,aACI,OAAOC,KAAKR,OAAOS,cAAcC,MAAM,IAC1C,EAGDC,iBACI,MAA2B,UAAvBH,KAAKlD,eACEsD,OAAOC,OAAOL,KAAKzB,OAAOC,MAAMC,kBAAkB6B,SAElC,OAAvBN,KAAKlD,eACEsD,OAAOC,OAAOL,KAAKzB,OAAOC,MAAMC,kBAAkB8B,WAD7D,CAGH,EAGDC,eACI,OAAOR,KAAKG,eAAepB,QAAQ0B,GACL,IAAtBT,KAAKD,WAAW,IAAmC,KAAvBC,KAAKD,YAAY,OAG7CC,KAAKD,WAAWW,MAAMC,GAAuBX,KAAKY,SAASH,GAAMR,cAAcY,SAASF,IAA8B,KAAfA,OAGvGX,KAAKD,WAAWW,MAAMC,GAAeF,EAAKzC,IAAM2C,MAK3D,EAGDG,qBACI,MAA+B,MAA3Bd,KAAKJ,mBACEI,KAAKQ,aAAaO,MAAK,CAACC,EAAGC,IAAMD,EAAEhD,GAAKiD,EAAEjD,KAEtB,WAA3BgC,KAAKJ,mBACEI,KAAKQ,aAAaO,MAAK,CAACC,EAAGC,KAC9B,MAAMC,EAAiC,UAAvBlB,KAAKlD,eAA6BkE,EAAErD,MAAQqD,EAAEG,cACxDC,EAAiC,UAAvBpB,KAAKlD,eAA6BmE,EAAEtD,MAAQsD,EAAEE,cAC9D,OAAKD,EAAUE,GACH,EAEPF,EAAUE,EACJ,EAEJ,CAAP,SAVR,CAaH,EAGDC,4BACI,OAAOrB,KAAKc,mBAAmBQ,MAAM,EAAGtB,KAAKN,YAChD,EAID6B,YAAa,CACTC,MAAO,OAAOxB,KAAKQ,aAAaiB,OAAOC,GAAkB1B,KAAKT,eAAeS,KAAKlD,gBAAgB+D,SAASa,IAAiB,EAC5HC,IAAIC,GAAK,GAIbC,aAAc,CACVL,MAAO,OAAOxB,KAAKQ,aAAaiB,OAAOC,IAAmB1B,KAAKT,eAAeS,KAAKlD,gBAAgB+D,SAASa,IAAiB,EAC7HC,IAAIC,GAAK,GAKbE,gBAAiB,CACbH,IAAInG,GAAOwE,KAAKzB,OAAOwD,OAAO,iCAAkC,CAACvG,MAAOA,EAAOwG,KAAMhC,KAAKlD,iBAAkBkD,KAAKiC,gBAAiB,EAClIT,MAAM,OAAOxB,KAAKzB,OAAOC,MAAMC,kBAAkBC,kBAAkBsB,KAAKlD,eAAe,GAI3FoF,qBAAsB,WAClB,OAAOlC,KAAKzB,OAAOC,MAAMC,kBAAkB0D,uBAAuBnC,KAAKlD,eAC1E,EAGDsF,cAAe,WACX,OAAOpC,KAAKzB,OAAO8D,QAAQD,aAC9B,GAELE,QAAS,CAGLL,iBACIjC,KAAKP,UAAYO,KAAKzB,OAAOC,MAAMC,kBAAkBC,kBAAkBsB,KAAKlD,eAC/E,EAEDyF,gCAAiC,WAC7BvC,KAAKzB,OAAOwD,OAAO,iCAAkC,CAACvG,MAAOwE,KAAKP,UAAUS,MAAM,KACxC8B,KAAMhC,KAAKlD,gBACxD,EAGD0F,UAAW,SAASC,GAChB,MAAMC,EAAe1C,KAAKuB,YACtBmB,EACA1C,KAAKzB,OAAOwD,OAAO,WAAY,CAAC,IAAMU,EAAK,KAAQzC,KAAKlD,iBAExDkD,KAAKzB,OAAOwD,OAAO,YAAa,CAAC,IAAMU,EAAK,KAAQzC,KAAKlD,gBAEhE,EAGD6F,UAAW,SAASF,GAChBzC,KAAKzB,OAAOwD,OAAO,YAAa,CAAC,IAAMU,EAAK,KAAQzC,KAAKlD,gBAC5D,EAGD8F,SAAU,SAASH,GACfzC,KAAKzB,OAAOwD,OAAO,WAAY,CAAC,IAAMU,EAAK,KAAQzC,KAAKlD,gBAC3D,EAGD+F,UAAW,SAAS7E,GAChBgC,KAAKzB,OAAOwD,OAAO,YAAa,CAAC/D,GAAIA,EAAIgE,KAAMhC,KAAKlD,gBACvD,EAGDgG,kBAAmB,UAAWC,QAAQ,UAAEC,EAAF,aAAaC,EAAb,aAA2BC,KACzDF,EAAYC,EAAe,IAAMC,GACjClD,KAAKmD,kBAEZ,EAGDA,iBAAkB,WACdnD,KAAKN,aAAe,EACvB,EAGDkB,SAAU,SAASH,GACf,MAA8B,UAAvBT,KAAKlD,eAA6B2D,EAAK9C,MAAQ8C,EAAKU,aAC9D,GAELiC,MAAO,CAEHlB,qBAAsBmB,EAAWC,GACzBtD,KAAKiC,iBACLjC,KAAKzB,OAAOwD,OAAO,0BAA2B,CAACvG,OAAO,EAAOwG,KAAKhC,KAAKlD,gBAC9E,EAEDsF,cAAeiB,EAAWC,GACtBtD,KAAKT,eAAiB8D,CAC1B,IC5PR,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,S,gBCAQvE,KAAK,U,IAOK5C,MAAM,iB,eASNA,MAAM,iB,6CAvBxBhB,EAAAA,EAAAA,IA0BMC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IA1B+BgB,EAAAA,mBAAiB,CAAzCmH,EAAcjI,M,WAA3BJ,EAAAA,EAAAA,IA0BM,OAzBDK,IAAKD,EACNkC,MAAA,gBACAsB,KAAK,UAHT,CAK2C,GAL3C,KAKqB0E,wBAAsD,WAAvBD,EAAaE,YAAU,KAAyCD,wBAAsB,GAAgC,iBAAvBD,EAAaE,aAAU,WAAtKvI,EAAAA,EAAAA,IAWM,MAXN,GAWM,EANFvB,EAAAA,EAAAA,IAKQiB,EAAAA,EAAA,CALA8I,QAASH,EAAaI,QACrBrJ,QAAK,GAAE8B,EAAAA,YAAYmH,GACpB1I,QAAQ,WACPoD,MAAO9D,EAAAA,aAHhB,C,kBAII,IAAyD,EAAzDgC,EAAAA,EAAAA,GAAyD,OAAzD,IAAyDmC,EAAAA,EAAAA,IAA3BiF,EAAa9I,OAAK,M,KAJpD,yCALJ,WAaAS,EAAAA,EAAAA,IAOM,MAAAY,GAAA,EANFnC,EAAAA,EAAAA,IAKQiB,EAAAA,EAAA,CALDgJ,SAAA,GACC/I,QAAQ,WACPoD,MAAO9D,EAAAA,YACR2E,KAAK,UAHb,C,kBAII,IAAyD,EAAzD3C,EAAAA,EAAAA,GAAyD,OAAzD,IAAyDmC,EAAAA,EAAAA,IAA3BiF,EAAa9I,OAAK,M,KAJpD,wBAnBR,I,CA8BA,QACIX,KAAM,aACNuF,MAAO,CACHpC,aAAcqC,QAElBvF,OACI,MAAO,CACH8F,YAAa,UAGpB,EACDC,SAAU,CAGN0D,yBACI,OAAOxD,KAAKzB,OAAOC,MAAMC,kBAAkBC,kBAAkBsB,KAAK/C,cAAc2B,MACnF,EAGDiF,oBACI,OAAO7D,KAAKzB,OAAOC,MAAMC,kBAAkBqF,cAAc/E,QAAQhB,GAAcA,EAAEgG,OAAS/D,KAAK/C,cAA2B,GAAXc,EAAEiG,OACpH,GAEL1B,QAAS,CAKL2B,YAAa,SAASV,GAClBvD,KAAKzB,OAAOwD,OAAO,eAAgB,CAAC,IAAMwB,EACN,KAAQ,QACR,MAASvD,KAAKzB,OAAOC,MAAMC,kBAAkBC,kBAAkBsB,KAAK/C,gBACxG+C,KAAKzB,OAAO2F,SAAS,YAAaX,EACrC,IC5DT,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,sDCDsBrH,MAAM,WAAWsB,MAAA,uC,8EALvC/D,EAAAA,EAAAA,IAiBSoE,EAAAA,EAAA,CAjBDL,MAAA,+DAA+D,C,kBAEnE,IAMU,EANV7D,EAAAA,EAAAA,IAMUkE,EAAAA,EAAA,CANFL,MAAA,iDAAiD,C,kBACrD,IAIS,EAJT7D,EAAAA,EAAAA,IAISwK,GAAAA,EAAA,C,WAJQhK,EAAAA,wB,qCAAAA,EAAAA,wBAAuBC,GAAEoD,MAAA,uBAA6B,iBAAY4G,SAAA,GAAS,oBAA5F,C,kBACY,IAA+C,gBAAvDlJ,EAAAA,EAAAA,IAEQC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAF6BgB,EAAAA,mBAAiB,CAAtCiI,EAAW/I,M,WAA3B7B,EAAAA,EAAAA,IAEQ6K,GAAAA,EAAA,CAFiD/I,IAAKD,EAAQE,MAAO6I,EAAUE,MAAvF,C,kBACI,IAA6F,EAA7FpI,EAAAA,EAAAA,GAA6F,OAA7F,IAA6FmC,EAAAA,EAAAA,IAAxB+F,EAAU5J,OAAK,M,KADxF,4B,KADJ,qB,OAOJd,EAAAA,EAAAA,IAMW6K,GAAAA,GAAA,C,WANQrK,EAAAA,wB,qCAAAA,EAAAA,wBAAuBC,GAAEoD,MAAA,mCAA5C,C,kBACS,IAA+C,gBAApDtC,EAAAA,EAAAA,IAIMC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAJ4BgB,EAAAA,mBAAiB,CAAtCiI,EAAW/I,M,WAAxBJ,EAAAA,EAAAA,IAIM,OAJgDK,IAAKD,GAAK,EAC5D3B,EAAAA,EAAAA,IAEgB8K,GAAAA,EAAA,CAFCjJ,MAAO6I,EAAUE,MAAlC,C,kBACI,IAAyC,EAAzC5K,EAAAA,EAAAA,IAAyC+K,EAAA,CAAxBL,UAAWA,GAAS,yB,KADzC,qBADJ,S,KADJ,qB,mFCDC,gB,0DA+B+C,Y,gIAtCpDlI,EAAAA,EAAAA,GAKM,YAHyB,GAAjBwC,EAAAA,UAAUgF,UAAO,WAA3BzI,EAAAA,EAAAA,IAAqD,IAAAQ,GAAf,gBACE,GAAzBiD,EAAAA,UAAUgG,SAAS/F,SAAM,WAAxC1D,EAAAA,EAAAA,IAAwE,IAAAU,GAAxB,2BAAhD,WACAV,EAAAA,EAAAA,IAAsB,IAAAY,GAAZ,gBAGdK,EAAAA,EAAAA,GAEM,gBADSA,EAAAA,EAAAA,GAA6C,SAArCX,MAAOmD,EAAAA,UAAUiG,SAAU1F,SAAA,IAAnC,cAGf/C,EAAAA,EAAAA,GA+BM,aA9BFxC,EAAAA,EAAAA,IAoBqBkL,GAAAA,EAAA,CApBD3I,MAAM,kBAAkBsB,MAAA,gBAAsB3C,QAAQ,YAAYiK,SAAA,IAAtF,C,kBACQ,IAkBM,CAlB+B,IAAzBnG,EAAAA,UAAUgG,SAAS/F,SAAM,WAArC1D,EAAAA,EAAAA,IAkBM,MAAA6J,GAAA,gBAfF7J,EAAAA,EAAAA,IAcMC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAd4BgB,EAAAA,WAAS,CAA9B4I,EAAW1J,M,WAAxBJ,EAAAA,EAAAA,IAcM,OAdwCK,IAAKD,GAAK,CACxB,gBAAjBqD,EAAAA,UAAUsG,SAA8C,WAAjBtG,EAAAA,UAAUsG,UAAO,WAAnE/J,EAAAA,EAAAA,IAKM,MAAAgC,GAAA,EAJFvD,EAAAA,EAAAA,IAGqBkL,GAAAA,EAAA,CAHAK,MAAM,QAAM,C,kBAC7B,IAAuD,EAAvDvL,EAAAA,EAAAA,IAAuDwL,EAAA,CAApCC,SAAUJ,EAAWlG,KAAK,SAA7C,wB,KADJ,UADJ,eAO4B,YAAjBH,EAAAA,UAAUsG,SAA0C,OAAjBtG,EAAAA,UAAUsG,UAAO,WAA/D/J,EAAAA,EAAAA,IAIM,MAAAkC,GAAA,EAHFzD,EAAAA,EAAAA,IAEqBkL,GAAAA,EAAA,CAFDK,MAAM,QAAM,C,kBAC5B,IAAoD,EAApDvL,EAAAA,EAAAA,IAAoD0L,EAAA,CAApCD,SAAUJ,EAAWlG,KAAK,SAA1C,wB,KADJ,UADJ,oBARJ,UAHJ,kB,OAoBRnF,EAAAA,EAAAA,IAQQ6C,EAAAA,EAAA,M,kBAPA,IAEU,EAFV7C,EAAAA,EAAAA,IAEU2L,GAAAA,EAAA,CAFDpJ,MAAM,iBAAiBgJ,MAAM,SAAtC,C,kBACI,IAA0G,EAA1GvL,EAAAA,EAAAA,IAA0G8D,EAAAA,EAAA,CAA5F,kBAAc,cAAarB,EAAAA,QAASvB,QAAQ,WAAWqE,SAAA,GAAShD,MAAM,QAApF,2B,OAEJvC,EAAAA,EAAAA,IAGU2L,GAAAA,EAAA,CAHDpJ,MAAM,aAAW,C,kBACtB,IAAoD,EAApDvC,EAAAA,EAAAA,IAAoDiB,EAAAA,EAAA,CAA5CN,QAAK,eAAE8B,EAAAA,SAASA,EAAAA,WAAxB,C,kBAAoC,IAAQ,O,2BA3B5D,G,2DCO4BD,EAAAA,EAAAA,GAAmB,SAAhB,gBAAY,G,IAGZD,MAAM,O,IAMTC,EAAAA,EAAAA,GAAgB,SAAb,aAAS,G,IAGTD,MAAM,O,IAMTC,EAAAA,EAAAA,GAAY,SAAT,SAAK,G,eAkBRA,EAAAA,EAAAA,GAAY,SAAT,SAAK,G,0BAQAA,EAAAA,EAAAA,GAA4C,QAAtCD,MAAM,aAAY,iBAAa,G,IAG/BA,MAAM,a,eAMZC,EAAAA,EAAAA,GAA2C,QAArCD,MAAM,aAAY,gBAAY,G,IAG9BA,MAAM,a,IASpBC,EAAAA,EAAAA,GAAa,SAAV,UAAM,G,IAWTA,EAAAA,EAAAA,GAAgB,SAAb,aAAS,G,IAIRA,EAAAA,EAAAA,GASQ,eARJA,EAAAA,EAAAA,GAOK,YANDA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAW,SAAR,WAEPA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAW,SAAR,cANf,G,6EApGhC1C,EAAAA,EAAAA,IA6HoB8L,GAAAA,EAAA,CA7HD/H,MAAA,gBAAmB,C,kBAClC,IAW0B,EAX1B7D,EAAAA,EAAAA,IAW0B6L,GAAAA,EAAA,M,kBAVtB,IAQQ,EARR7L,EAAAA,EAAAA,IAQQ6C,EAAAA,EAAA,M,kBAPJ,IAEQ,EAFR7C,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,IAAIR,MAAM,wBAAtB,C,kBACI,IAA+B,EAA/BC,EAAAA,EAAAA,GAA+B,cAAAmC,EAAAA,EAAAA,IAArBK,EAAAA,SAASX,IAAE,M,OAEzBrE,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,M,kBADJ,IAAkB,mBAAhBkC,EAAAA,SAAShB,OAAK,M,yBAM5BhE,EAAAA,EAAAA,IA+GyB8L,GAAAA,EAAA,M,kBA9GrB,IA6GU,EA7GVtJ,EAAAA,EAAAA,GA6GU,aA3GFxC,EAAAA,EAAAA,IAyGqBkL,GAAAA,EAAA,M,kBAvGjB,IAOoB,EAPpBlL,EAAAA,EAAAA,IAOoB4L,GAAAA,EAAA,M,kBANhB,IAE0B,EAF1B5L,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAmB,CAAnBR,M,OAEJ/B,EAAAA,EAAAA,IAEyB8L,GAAAA,EAAA,M,kBADrB,IAA4C,EAA5CtJ,EAAAA,EAAAA,GAA4C,IAA5C,IAA4CmC,EAAAA,EAAAA,IAA1BK,EAAAA,SAAS+G,aAAW,M,gBAI9C/L,EAAAA,EAAAA,IAOoB4L,GAAAA,EAAA,M,kBANhB,IAE0B,EAF1B5L,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAgB,CAAhBJ,M,OAEJnC,EAAAA,EAAAA,IAEyB8L,GAAAA,EAAA,M,kBADrB,IAAgD,EAAhDtJ,EAAAA,EAAAA,GAAgD,IAAhD,IAAgDmC,EAAAA,EAAAA,IAA9BK,EAAAA,SAAS4B,KAAKoF,YAAQ,M,eAIvBvF,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,gBAA9B,WAAzBpH,EAAAA,EAAAA,IAgBoB8L,GAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAfhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAY,CAAZa,M,OAEJpD,EAAAA,EAAAA,IAWyB8L,GAAAA,EAAA,M,kBAVrB,IASiC,EATjCtJ,EAAAA,EAAAA,GASiC,UATxB0J,IAAG,iCAAqClH,EAAAA,SAASmH,WAClDC,MAAM,0QAKNvI,MAAA,iCACA0H,MAAM,OAENc,gBAAA,IATR,c,iBALR,gBAkBArM,EAAAA,EAAAA,IA2BoB4L,GAAAA,EAAA,M,kBA1BhB,IAE0B,EAF1B5L,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAY,CAAZgB,M,OAEJvD,EAAAA,EAAAA,IAsByB8L,GAAAA,EAAA,M,kBArBrB,IAEM,CAFKrF,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,mBAA9B,WAAX3F,EAAAA,EAAAA,IAEM,MAAAkC,GAAA,EADFjB,EAAAA,EAAAA,GAAkE,OAA5D0J,IAAKlH,EAAAA,SAASsH,cAAeC,IAAI,eAAehB,MAAM,OAA5D,eADJ,eAGc9E,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,iBAA9B,WAAdpH,EAAAA,EAAAA,IAOQ+C,EAAAA,EAAA,CAAAjB,IAAAA,GAAA,C,kBANJ,IAEQ,EAFR5B,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,KAAG,C,kBACX,IAA4C,CAA5CY,M,OAEJ3D,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,MAAI,C,kBACZ,IAAuD,EAAvDP,EAAAA,EAAAA,GAAuD,OAAvD,IAAuDmC,EAAAA,EAAAA,IAA7BK,EAAAA,SAASwH,aAAW,M,iBALtD,eAQW/F,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,gBAAmBT,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,gBAA9B,WAA5D3F,EAAAA,EAAAA,IAA0G,KAAAkL,MAA1G,eACahG,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,gBAA9B,WAAbpH,EAAAA,EAAAA,IAOQ+C,EAAAA,EAAA,CAAAjB,IAAAA,GAAA,C,kBANJ,IAEQ,EAFR5B,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,KAAG,C,kBACX,IAA2C,CAA3C2J,M,OAEJ1M,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,MAAI,C,kBACZ,IAAsD,EAAtDP,EAAAA,EAAAA,GAAsD,OAAtD,IAAsDmC,EAAAA,EAAAA,IAA5BK,EAAAA,SAAS2H,YAAU,M,iBALrD,kB,eAYiBlG,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,UAA9B,WAAzBpH,EAAAA,EAAAA,IASoB8L,GAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBARhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAa,CAAbqK,M,OAEJ5M,EAAAA,EAAAA,IAIyB8L,GAAAA,EAAA,M,kBAHrB,IAEqB,EAFrB9L,EAAAA,EAAAA,IAEqBkL,GAAAA,EAAA,M,kBADF,IAA4B,gBAA3C3J,EAAAA,EAAAA,IAA6FC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAAvDgB,EAAAA,MAAI,CAAnBoK,EAAKlL,M,WAA5B7B,EAAAA,EAAAA,IAA6F4L,EAAA,CAAhD9J,IAAKD,EAAQ8J,SAAUoB,EAAMC,WAAW,GAArF,iC,0BANZ,eAWyBrG,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,UAA9B,WAAzBpH,EAAAA,EAAAA,IA0BoB8L,GAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAzBhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAgB,CAAhBwK,M,OAEJ/M,EAAAA,EAAAA,IAqByB8L,GAAAA,EAAA,M,kBApBrB,IAmBU,EAnBV9L,EAAAA,EAAAA,IAmBUgN,GAAAA,EAAA,M,kBAlBN,IASQ,CATRC,IAUAzK,EAAAA,EAAAA,GAOQ,6BALAjB,EAAAA,EAAAA,IAGKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAHsBgF,OAAOwF,KAAKxJ,EAAAA,YAAS,CAApCb,EAAKD,M,WAAjBJ,EAAAA,EAAAA,IAGK,MAH+CK,IAAKD,GAAK,EAC1Da,EAAAA,EAAAA,GAAgB,WAAAmC,EAAAA,EAAAA,IAAV/C,GAAG,IACTY,EAAAA,EAAAA,GAAmD,WAAAmC,EAAAA,EAAAA,IAA7CuI,WAAWzK,EAAAA,UAAUb,IAAMuL,QAAO,IAAK,IAAC,QAFlD,W,0BAlBpB,kB,oCC5EA3K,EAAAA,EAAAA,GAAmB,SAAhB,gBAAY,G,IAGZD,MAAM,O,IAMTC,EAAAA,EAAAA,GAAc,SAAX,WAAO,G,IAMEA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAY,OAEtB,G,IACAC,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAY,YAEtB,G,UACIA,MAAM,a,UAGNA,MAAM,a,0BAeIA,MAAM,c,IAWhCC,EAAAA,EAAAA,GAAgB,SAAb,aAAS,G,IAIRA,EAAAA,EAAAA,GASQ,eARJA,EAAAA,EAAAA,GAOK,YANDA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAW,SAAR,WAEPA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAW,SAAR,cANf,G,IAwBJA,EAAAA,EAAAA,GAAe,SAAZ,YAAQ,G,gFAhG/B1C,EAAAA,EAAAA,IA2GoB8L,GAAAA,EAAA,CA3GD/H,MAAA,gBAAmB,C,kBAClC,IAW0B,EAX1B7D,EAAAA,EAAAA,IAW0B6L,GAAAA,EAAA,M,kBAVtB,IAQQ,EARR7L,EAAAA,EAAAA,IAQQ6C,EAAAA,EAAA,M,kBAPJ,IAEQ,EAFR7C,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,IAAIR,MAAM,wBAAtB,C,kBACI,IAA+B,EAA/BC,EAAAA,EAAAA,GAA+B,cAAAmC,EAAAA,EAAAA,IAArBK,EAAAA,SAASX,IAAE,M,OAEzBrE,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,M,kBADJ,IAA0B,mBAAxBkC,EAAAA,SAASwC,eAAa,M,yBAMpCxH,EAAAA,EAAAA,IA6FyB8L,GAAAA,EAAA,M,kBA5FrB,IA0FqB,EA1FrB9L,EAAAA,EAAAA,IA0FqBkL,GAAAA,EAAA,M,kBAxFjB,IAOoB,EAPpBlL,EAAAA,EAAAA,IAOoB4L,GAAAA,EAAA,M,kBANhB,IAE0B,EAF1B5L,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAmB,CAAnBR,M,OAEJ/B,EAAAA,EAAAA,IAE0B8L,GAAAA,EAAA,M,kBADtB,IAAyC,EAAzCtJ,EAAAA,EAAAA,GAAyC,IAAzC,IAAyCmC,EAAAA,EAAAA,IAAxBK,EAAAA,SAASoI,WAAS,M,eAIlB3G,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,oBAA9B,WAAzBpH,EAAAA,EAAAA,IAuCoB8L,GAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAtChB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAc,CAAdJ,M,OAEJnC,EAAAA,EAAAA,IAkC0B8L,GAAAA,EAAA,M,kBAjCtB,IAgCU,EAhCV9L,EAAAA,EAAAA,IAgCUgN,GAAAA,EAAA,M,kBA/BN,IAeQ,EAfRxK,EAAAA,EAAAA,GAeQ,eAdJA,EAAAA,EAAAA,GAaK,WAZDH,GAGAe,GAG4BqD,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,yBAA9B,WAA5B3F,EAAAA,EAAAA,IAEK,KAFL,GAAmF,cAAnF,eAG4BkF,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,yBAA9B,WAA5B3F,EAAAA,EAAAA,IAEK,KAFL,GAAmF,SAAnF,oBAKRiB,EAAAA,EAAAA,GAcQ,6BAbJjB,EAAAA,EAAAA,IAWKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAXyBuD,EAAAA,SAASqI,gBAAc,CAAzCC,EAAQ3L,M,WAApBJ,EAAAA,EAAAA,IAWK,MAXmDK,IAAKD,EAAQkC,OAAK,4BAAuByJ,EAAOC,WAAU,qBAAlH,EACQ/K,EAAAA,EAAAA,GAEK,YADDA,EAAAA,EAAAA,GAA0B,aAAAmC,EAAAA,EAAAA,IAAlB2I,EAAOjJ,IAAE,MAErB7B,EAAAA,EAAAA,GAAwB,WAAAmC,EAAAA,EAAAA,IAAlB2I,EAAOE,MAAI,GACP/G,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,yBAA9B,WAAV3F,EAAAA,EAAAA,IAEK,KAAAkC,GAAA,EADDjB,EAAAA,EAAAA,GAAwD,aAAAmC,EAAAA,EAAAA,IAAhDK,EAAAA,SAASyI,oBAAoBH,EAAOjJ,KAAE,OADlD,eAGUoC,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,yBAA9B,WAAV3F,EAAAA,EAAAA,IAEK,KAAAmM,GAAA,EADDlL,EAAAA,EAAAA,GAAqJ,OAArJ,IAAqJmC,EAAAA,EAAAA,IAA1HgJ,KAAKC,MAAM5I,EAAAA,SAASyI,oBAAoBH,EAAOjJ,IAAM5B,EAAAA,wBAAwBuC,EAAAA,SAASyI,qBAAmB,aADxI,gBARR,iB,0BAvBhB,eAyCyBhH,OAAOwF,KAAKjH,EAAAA,UAAUkC,SAAQ,mBAA9B,WAAzBpH,EAAAA,EAAAA,IA0BoB8L,GAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAzBhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAgB,CAAhBqB,M,OAEJ5D,EAAAA,EAAAA,IAqByB8L,GAAAA,EAAA,M,kBApBrB,IAmBU,EAnBV9L,EAAAA,EAAAA,IAmBUgN,GAAAA,EAAA,M,kBAlBN,IASQ,CATRP,IAUAjK,EAAAA,EAAAA,GAOQ,6BALAjB,EAAAA,EAAAA,IAGKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAHsBgF,OAAOwF,KAAKjH,EAAAA,SAAS6I,gBAAa,CAAjDjM,EAAKD,M,WAAjBJ,EAAAA,EAAAA,IAGK,MAH4DK,IAAKD,GAAK,EACvEa,EAAAA,EAAAA,GAAgB,WAAAmC,EAAAA,EAAAA,IAAV/C,GAAG,IACTY,EAAAA,EAAAA,GAAgE,WAAAmC,EAAAA,EAAAA,IAA1DuI,WAAWlI,EAAAA,SAAS6I,cAAcjM,IAAMuL,QAAO,IAAK,IAAC,QAF/D,W,0BAlBpB,eA4B0BnI,EAAAA,WAA1B,iBAA0BA,EAAAA,EAAAA,OAA1BlF,EAAAA,EAAAA,IASoB8L,GAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBARhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAe,CAAfmK,M,OAEJ1M,EAAAA,EAAAA,IAI0B8L,GAAAA,EAAA,M,kBAHtB,IAEqB,EAFrB9L,EAAAA,EAAAA,IAEqBkL,GAAAA,EAAA,M,kBADjB,IAAyF,EAAzFlL,EAAAA,EAAAA,IAAyFwL,EAAA,CAAtEC,SAAQ,KAAO7G,OAAO8D,QAAQoF,iBAAiB9I,EAAAA,SAASoI,YAA3E,wB,oDAaxB,QACIjN,KAAM,gBACNuF,MAAO,CACH+F,SAAUhF,OACVqG,UAAW,CAACzE,KAAK0F,QAASC,SAAS,IAEvCC,WAAY,CACRC,iBAAgBA,IAEpB9N,OACI,MAAO,CAAC,CAEX,EACD+F,SAAU,CAAC,EAEXwC,QAAS,CACLwF,wBAAyB,SAASV,GAC9B,IAAIW,EAAQ,EAIZ,OAHA3H,OAAOC,OAAO+G,GAAqBY,SAASjK,IACxCgK,GAAgBE,OAAOlK,EAAvB,IAEGgK,CACX,ICjIR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,UF2HA,IACIjO,KAAM,mBACNuF,MAAO,CACH+F,SAAUhF,QAEdwH,WAAY,CACRM,cAAaA,IAEjBnO,OACI,MAAO,CACHoO,mBAAoB,CAAC,EACrBC,iBAAiB,EAExB,EACDtI,SAAU,CACNS,OACI,OAAOP,KAAKoF,SAAS7E,KAAKzC,KAAKC,GAAciC,KAAKzB,OAAO8D,QAAQgG,cAActK,IAClF,EACDuK,YACI,IAAIA,EAAY,CAAC,EAcjB,OAbAtI,KAAKO,KAAKyH,SAASjK,IACXqC,OAAOwF,KAAK7H,GAAG8C,SAAS,kBACxBT,OAAOwF,KAAK7H,EAAEyJ,eAAeQ,SAASO,IACjCnI,OAAOwF,KAAK0C,GAAWzH,SAAS0H,KACjCD,EAAUC,GAAY,GAG1BD,EAAUC,GAAYD,EAAUC,GAAYjB,KAAKC,MAAMxJ,EAAEyJ,cAAce,GAAvE,GAEJ,IAGJC,QAAQC,IAAIH,GACLA,CACX,GAEJhG,QAAS,CAAC,EAEVoG,UACIF,QAAQC,IAAI,OAAQzI,KAAKoF,SAAS7E,MAClCP,KAAKzB,OAAO2F,SAAS,sBAAuBlE,KAAKoF,SAAS7E,KAC7D,GGtKL,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,UJ2CA,IACIzG,KAAM,iBACN8N,WAAY,CACRC,iBADQ,GAERK,cAAaA,IAEjB7I,MAAO,CACHgF,UAAWjE,QAEfrG,OACI,MAAO,CAAC,CAGX,EACD+F,SAAU,CAEN6I,YACI,GAAsC,GAAlC3I,KAAKqE,UAAUM,SAAS/F,OAwBxB,MAAO,GAvBP,GAA8B,eAA1BoB,KAAKqE,UAAUY,QAA0B,CACzC,IAAI2D,EAAuB5I,KAAKqE,UAAUM,SAAS7G,KAAKC,GAAciC,KAAKzB,OAAO8D,QAAQoF,iBAAiB1J,KAC3G,OAAO6K,CACX,CACA,GAA8B,YAA1B5I,KAAKqE,UAAUY,QAAuB,CACtC,IAAI4D,EAAyB7I,KAAKqE,UAAUM,SAAS7G,KAAKC,GAAciC,KAAKzB,OAAO8D,QAAQgG,cAActK,KAE1G,OAAO8K,CACX,CACA,GAA8B,UAA1B7I,KAAKqE,UAAUY,QAAqB,CAEhC2D,EAAuB5I,KAAKzB,OAAO8D,QAAQoF,iBAAiBzH,KAAKqE,UAAUM,SAAS,IACxF,MAAO,CAACiE,EACZ,CACA,GAA8B,OAA1B5I,KAAKqE,UAAUY,QAAkB,CACjC,MAAM4D,EAAyB7I,KAAKzB,OAAO8D,QAAQgG,cAAcrI,KAAKqE,UAAUM,SAASmE,aAKzF,MAAO,CAACD,EACZ,CAIP,EACDE,UACI,OAAsC,GAAlC/I,KAAKqE,UAAUM,SAAS/F,OACjBoB,KAAK2I,UAAU7K,KAAKC,GAAcA,EAAEC,KAEpC,EAEd,GAELsE,QAAS,CAGL0G,SAAS7B,GACL,MAAM8B,EAAKC,SAASC,cAAc,YAClCF,EAAGzN,MAAQ2L,EACX8B,EAAGG,aAAa,WAAY,IAC5BH,EAAGzL,MAAM6L,SAAW,WACpBJ,EAAGzL,MAAM8L,KAAO,UAChBJ,SAASK,KAAKC,YAAYP,GAC1B,MAAMQ,EAAYP,SAASQ,eAAeC,WAAa,GAAKT,SAASQ,eAAeE,WAAW,GAC/FX,EAAGY,SACHX,SAASY,YAAY,QACrBZ,SAASK,KAAKQ,YAAYd,GACtBQ,IACJP,SAASQ,eAAeM,kBACxBd,SAASQ,eAAeO,SAASR,GAEpC,GAELrG,MAAO,CACH8G,kBAAkB7G,EAAWC,GACzBtD,KAAKmK,wBAA0B9G,CAClC,EACD8G,wBAAwB9G,EAAWC,GAC/BtD,KAAKzB,OAAOwD,OAAO,qBAAsBsB,EAC7C,IK3HR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,UNgBA,IACIvJ,KAAM,iBACN8N,WAAY,CACRwC,eAAcA,IAElBrQ,OACI,MAAO,CACHoQ,wBAAyB,kBACzBtK,YAAa,UAEpB,EACDC,SAAU,CAGN+D,oBACI,OAAO7D,KAAKzB,OAAOC,MAAMC,kBAAkBqF,cAAc/E,QAAQhB,GAAyB,GAAXA,EAAEiG,OACpF,EAGDqG,mBACI,MAAM/O,EAAQ0E,KAAKzB,OAAOC,MAAMC,kBAAkBqF,cAAchG,KAAKC,GAAcA,EAAEwG,OAAO+F,QAAQtK,KAAKmK,yBACzG,OAAc,GAAV7O,EACO0E,KAAKzB,OAAOC,MAAMC,kBAAkBqF,cAAcxI,QAGzD,CAEP,EAGD4O,oBACI,OAAOlK,KAAKzB,OAAOC,MAAMC,kBAAkB8L,8BAC9C,GAELjI,QAAS,CAAC,EAGVc,MAAO,CAGH8G,kBAAkB7G,EAAWC,GACzBtD,KAAKmK,wBAA0B9G,CAClC,EAGD8G,wBAAwB9G,EAAWC,GAC/BtD,KAAKzB,OAAOwD,OAAO,qBAAsBsB,EAC7C,IOnER,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,UCNKnH,MAAM,O,IAIKC,EAAAA,EAAAA,GAAiE,QAA3DD,MAAM,YAAW,uCAAmC,G,IAK1DC,EAAAA,EAAAA,GAAiE,QAA3DD,MAAM,YAAW,uCAAmC,G,IAKtEC,EAAAA,EAAAA,GAAmB,MAAfqO,QAAQ,QAAM,S,IAEdrO,EAAAA,EAAAA,GAAgD,QAA1CD,MAAM,YAAW,sBAAkB,G,2CAhBjDhB,EAAAA,EAAAA,IAkBM,MAlBN,GAkBM,EAjBFvB,EAAAA,EAAAA,IAWQ6C,EAAAA,EAAA,M,kBAVJ,IAIQ,EAJR7C,EAAAA,EAAAA,IAIQ8C,EAAAA,EAAA,M,kBAHJ,IAEQ,EAFR9C,EAAAA,EAAAA,IAEQiB,EAAAA,EAAA,CAFAN,QAAK,eAAE8B,EAAAA,8BAA8BF,MAAM,YAAYrB,QAAQ,WAAYoD,MAAO9D,EAAAA,YAAa2E,KAAK,UAA5G,C,kBACI,IAAiE,CAAjElD,M,KADJ,gB,OAIJjC,EAAAA,EAAAA,IAIQ8C,EAAAA,EAAA,M,kBAHJ,IAEQ,EAFR9C,EAAAA,EAAAA,IAEQiB,EAAAA,EAAA,CAFAN,QAAK,eAAE8B,EAAAA,8BAA8BF,MAAM,YAAYrB,QAAQ,WAAYoD,MAAO9D,EAAAA,YAAa2E,KAAK,UAA5G,C,kBACI,IAAiE,CAAjEhD,M,KADJ,gB,eAMRE,IACArC,EAAAA,EAAAA,IAEQiB,EAAAA,EAAA,CAFAN,QAAK,eAAE8B,EAAAA,sBAAsBF,MAAM,YAAYrB,QAAQ,WAAYoD,MAAO9D,EAAAA,YAAa2E,KAAK,UAApG,C,kBACI,IAAgD,CAAhD/B,M,KADJ,c,CAOJ,QACIjD,KAAM,YACNC,OACI,MAAO,CACH8F,YAAa,UACbN,eAAgB,CAAC,OAAU,GAAI,IAAO,IAE7C,EACDO,SAAU,CAGNsC,gBACI,OAAOpC,KAAKzB,OAAO8D,QAAQD,aAC9B,EAGDqI,0BAEI,OADAjC,QAAQC,IAAIzI,KAAKzB,OAAO8D,QAAQqI,oBAAoBzF,SACI,WAApDjF,KAAKzB,OAAO8D,QAAQqI,oBAAoBzF,SAA4E,gBAApDjF,KAAKzB,OAAO8D,QAAQqI,oBAAoBzF,QACjG,SAGA,KAEd,EAGD0F,yBAII,GAAI3K,KAAKzB,OAAO8D,QAAQqI,oBAAoB/F,oBAAoBiG,MAC5D,IAAIC,EAAe7K,KAAKzB,OAAO8D,QAAQqI,oBAAoB/F,cAEvDkG,EAAe,CAAC7K,KAAKzB,OAAO8D,QAAQqI,oBAAoB/F,UAKhE,OAFAkG,EAAeA,EAAaC,OAAO9K,KAAKzB,OAAOC,MAAMC,kBAAkBC,kBAAkBsB,KAAKyK,0BAEvFI,CAGX,GAGJvI,QAAS,CAGLyI,qBACQ/K,KAAKgL,eAAiB,IACtBhL,KAAKzB,OAAOwD,OAAO,qBAAsB,CAACvG,MAAOwE,KAAK2K,uBAAwB3I,KAAMhC,KAAKyK,yBAEhG,EACDQ,6BACI,GAA4C,GAAxCjL,KAAKT,eAAe,UAAUX,OAAY,CAC1C,MAAMsM,EAAe,GACrBlL,KAAKT,eAAe,UAAUyI,SAASjK,IAAO6M,MAAMO,UAAUC,KAAKC,MAAMH,EAAcnN,EAAEwC,KAA3C,IAC9CqK,MAAMO,UAAUC,KAAKC,MAAMH,EAAclL,KAAKzB,OAAOC,MAAMC,kBAAkBC,kBAAkB,QAE/FsB,KAAKzB,OAAOwD,OAAO,qBAAqB,CAACvG,MAAO0P,EAAclJ,KAAM,OACxE,CACH,EACDsJ,6BACI,GAAyC,GAArCtL,KAAKT,eAAe,OAAOX,OAAY,CACvC,MAAM2M,EAAa,GACnBvL,KAAKT,eAAe,OAAOyI,SAASjK,IAAWwN,EAAW1K,SAAS9C,EAAEgJ,YACLwE,EAAWH,KAAKrN,EAAEgJ,UACjB,IACjE/G,KAAKzB,OAAOwD,OAAO,qBAAqB,CAACvG,MAAO+P,EAAYvJ,KAAM,UACtE,CAEH,GAGLoB,MAAO,CACHhB,cAAeiB,GACXrD,KAAKT,eAAiBa,OAAOoL,OAAOnI,EACxC,IC/FR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,UdqCA,IACIvJ,KAAM,aACN8N,WAAY,CACR6D,cADQ,GAERC,WAFQ,GAGRC,UAHQ,GAIRC,eAAcA,IAElB7R,OACI,MAAO,CAAC,CAGX,EACD+F,SAAU,CAEN+L,aACI,MAAQ,CAAoE,GAAnEzL,OAAOwF,KAAK5F,KAAKzB,OAAOC,MAAMC,kBAAkB6B,SAAS1B,OACM,GAAhEwB,OAAOwF,KAAK5F,KAAKzB,OAAOC,MAAMC,kBAAkB8B,MAAM3B,QAAa6C,OAAM1D,IAAW,IAANA,GACzF,GAELuE,QAAS,CAAC,EAGVwJ,UACI9L,KAAKzB,OAAO2F,SAAS,eACrBlE,KAAKzB,OAAO2F,SAAS,WAExB,GehEL,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,KAEpE,U,oECyB6E1G,MAAA,iB,IAMrCrB,EAAAA,EAAAA,GAAqC,QAA/BD,MAAM,YAAW,WAAO,G,IAQ9BC,EAAAA,EAAAA,GAAwC,QAAlCD,MAAM,YAAW,cAAU,G,YAIiC,mB,YACA,kB,YAczC,Y,mIAlE7DzC,EAAAA,EAAAA,IAuEY8C,EAAAA,EAAA,CAvECL,MAAM,aAAW,C,kBAC9B,IAqEQ,EArERvC,EAAAA,EAAAA,IAqEQ6C,EAAAA,EAAA,M,kBApEJ,IAyBQ,EAzBR7C,EAAAA,EAAAA,IAyBQ8C,EAAAA,EAAA,CAzBDC,KAAK,KAAKC,GAAG,IAAIC,GAAG,MAA3B,C,kBACI,IAaQ,EAbRjD,EAAAA,EAAAA,IAaQ6C,EAAAA,EAAA,M,kBAZJ,IAQQ,EARR7C,EAAAA,EAAAA,IAQQ8C,EAAAA,EAAA,M,kBAPJ,IAKwB,EALxB9C,EAAAA,EAAAA,IAKwBuE,EAAAA,EAAA,CALbE,MAAOjE,EAAAA,W,WACLA,EAAAA,mB,qCAAAA,EAAAA,mBAAkBC,GAC3BoD,MAAA,GACAG,MAAM,kBACN1C,QAAQ,UACRkD,SAAA,IALJ,gCAMAxE,EAAAA,EAAAA,IAAuH0E,EAAAA,GAAA,CAAtG/D,QAAK,eAAE8B,EAAAA,cAAcA,EAAAA,gBAAgB0B,KAAKC,GAAcA,EAAEC,OAAOL,MAAM,kB,OAE5FhE,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,M,kBADJ,IAAoF,EAApF9C,EAAAA,EAAAA,IAAoF0E,EAAAA,GAAA,CAApEV,MAAM,kB,WAA2BxD,EAAAA,iB,qCAAAA,EAAAA,iBAAgBC,IAAjE,0B,eAIqB,UAAlBD,EAAAA,qBAAkB,WAA7Be,EAAAA,EAAAA,IAEM,MAAAQ,GAAA,EADF/B,EAAAA,EAAAA,IAA0CoS,EAAA,CAA5BC,QAAS5P,EAAAA,iBAAe,uBAER,UAAlBjC,EAAAA,qBAAkB,WAAlCe,EAAAA,EAAAA,IAEM,MAAAU,GAAA,EADFjC,EAAAA,EAAAA,IAA6CsS,EAAA,CAA5BD,QAAS5P,EAAAA,iBAAe,uBAEX,YAAlBjC,EAAAA,qBAAkB,WAAlCe,EAAAA,EAAAA,IAEM,MAAAY,GAAA,EADFnC,EAAAA,EAAAA,IAA2CuS,EAAA,CAA5BF,QAAS5P,EAAAA,iBAAe,wBAD3C,kB,OAIJzC,EAAAA,EAAAA,IAyCQ8C,EAAAA,EAAA,CAzCDC,KAAK,KAAKC,GAAG,IAAIC,GAAG,MAA3B,C,kBACI,IA+BS,EA/BTjD,EAAAA,EAAAA,IA+BSqB,EAAAA,EAAA,CA/BDwC,MAAA,iBAAsBtB,MAAM,wCAApC,C,kBACI,IA6BqB,EA7BrBvC,EAAAA,EAAAA,IA6BqBkL,GAAAA,EAAA,CA7BD5J,QAAQ,WAAS,C,kBACd,IAA0C,gBAA7DC,EAAAA,EAAAA,IA2BoBC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IA3ByBgB,EAAAA,iBAAe,CAAjC6K,EAAQ3L,M,WAAnC7B,EAAAA,EAAAA,IA2BoB8L,GAAAA,EAAA,CA3B2ChK,IAAKD,GAAK,C,kBACrE,IAE0B,EAF1B3B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,M,kBADtB,IAA0C,EAA1CrJ,EAAAA,EAAAA,GAA0C,aAAAmC,EAAAA,EAAAA,IAAlC2I,EAAOjJ,IAAI,KAACM,EAAAA,EAAAA,IAAE2I,EAAOE,MAAI,GAAS,IAAChL,EAAAA,EAAAA,GAAoD,OAApD,IAAoDmC,EAAAA,EAAAA,IAAtB2I,EAAOkF,QAAM,M,KAD1F,OAGAxS,EAAAA,EAAAA,IAqByB8L,GAAAA,EAAA,M,kBApBrB,IAmBM,EAnBNtJ,EAAAA,EAAAA,GAmBM,aAlBFxC,EAAAA,EAAAA,IAOQ6C,EAAAA,EAAA,M,kBANJ,IAEQ,EAFR7C,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,IAAIR,MAAM,QAAtB,C,kBACI,IAAqC,CAArC6I,M,OAEJpL,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,IAAIR,MAAM,QAAtB,C,kBACI,IAAiF,EAAjFC,EAAAA,EAAAA,GAAiF,aAAAmC,EAAAA,EAAAA,IAAAA,KAApEC,OAAO8D,QAAQ+J,mBAAmBnF,EAAOoF,aAAa1O,OAAK,M,KAD5E,S,KAJJ,OAQAhE,EAAAA,EAAAA,IASQ6C,EAAAA,EAAA,M,kBARJ,IAEQ,EAFR7C,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,IAAIR,MAAM,QAAtB,C,kBACI,IAAwC,CAAxCgB,M,OAEJvD,EAAAA,EAAAA,IAIQ8C,EAAAA,EAAA,CAJDC,KAAK,IAAIR,MAAM,QAAtB,C,kBACI,IAA8G,EAA9GvC,EAAAA,EAAAA,IAA8G2S,GAAAA,EAAA,CAAlGzR,QAAQ,WAAWI,QAAQ,UAAUsR,KAAK,I,WAAapS,EAAAA,SAAS8M,EAAOjJ,I,yBAAhB7D,EAAAA,SAAS8M,EAAOjJ,IAAE5D,EAAGwJ,SAAA,IAAxF,8CACAjK,EAAAA,EAAAA,IAAyFiB,EAAAA,EAAA,CAAlFC,QAAQ,WAAWI,QAAQ,UAAUiB,MAAM,OAAO0H,SAAA,IAAzD,C,kBAAkE,IAAe,O,OACjFjK,EAAAA,EAAAA,IAAwFiB,EAAAA,EAAA,CAAjFC,QAAQ,WAAWI,QAAQ,UAAUiB,MAAM,OAAO0H,SAAA,IAAzD,C,kBAAkE,IAAc,O,cAHpF,S,KAJJ,W,KAVR,S,KAJJ,kB,gBA8BRjK,EAAAA,EAAAA,IAOQ6C,EAAAA,EAAA,M,kBANJ,IAEU,EAFV7C,EAAAA,EAAAA,IAEU2L,GAAAA,EAAA,CAFDpJ,MAAM,iBAAiBgJ,MAAM,SAAtC,C,kBACI,IAAoH,EAApHvL,EAAAA,EAAAA,IAAoH8D,EAAAA,EAAA,CAAtG,kBAAc,cAAarB,EAAAA,kBAAmBvB,QAAQ,WAAWqE,SAAA,GAAShD,MAAM,QAA9F,2B,OAEJvC,EAAAA,EAAAA,IAEU2L,GAAAA,EAAA,CAFDpJ,MAAM,aAAW,C,kBACtB,IAA6D,EAA7DvC,EAAAA,EAAAA,IAA6DiB,EAAAA,EAAA,CAArDN,QAAK,eAAE8B,EAAAA,SAASA,EAAAA,qBAAxB,C,kBAA6C,IAAQ,O,uFC/DzDoB,MAAA,c,IAGJrB,EAAAA,EAAAA,GAEK,MAFDD,MAAM,YAAYsB,MAAA,cAAtB,EACIrB,EAAAA,EAAAA,GAAiC,QAA3BD,MAAM,YAAY,QAD5B,G,IAGAC,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAqC,QAA/BD,MAAM,YAAW,aAD3B,G,IAGAC,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAkF,QAA5ED,MAAM,WAAYsB,MAAA,sCAAwC,iBADpE,G,mBAUItB,MAAM,YAAasB,MAAA,c,IACbtB,MAAM,Y,IAEZA,MAAM,a,IACAA,MAAM,Y,IAEZA,MAAM,a,IACAA,MAAM,WAAWsB,MAAA,sC,2CA7BvC/D,EAAAA,EAAAA,IAiCUkN,GAAAA,EAAA,M,kBAhCN,IAeQ,EAfRxK,EAAAA,EAAAA,GAeQ,eAdJA,EAAAA,EAAAA,GAaK,YAZDA,EAAAA,EAAAA,GAEK,KAFL,GAEK,EADDxC,EAAAA,EAAAA,IAA0E0E,EAAAA,GAAA,C,WAAjDjC,EAAAA,Y,qCAAAA,EAAAA,YAAWhC,GAAGE,QAAO8B,EAAAA,WAA9C,mCAEJR,GAGAE,GAGAE,QAKRG,EAAAA,EAAAA,GAeQ,6BAdJjB,EAAAA,EAAAA,IAaKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAbuBuD,EAAAA,SAAO,CAAvB8B,EAAMnF,M,WAAlBJ,EAAAA,EAAAA,IAaK,MAbiCK,IAAKD,EAAQhB,QAAK,QAAOiE,OAAOwD,OAAM,cAAgBtB,EAAKzC,KAAjG,EACI7B,EAAAA,EAAAA,GAEK,YADDxC,EAAAA,EAAAA,IAAqF0E,EAAAA,GAAA,C,WAA5DjC,EAAAA,gB,qCAAAA,EAAAA,gBAAehC,GAAGoB,MAAOiF,EAAKzC,GAAIkB,SAAA,IAA3D,kCAEJ/C,EAAAA,EAAAA,GAEK,KAFL,GAEK,EADDA,EAAAA,EAAAA,GAAyC,OAAzC,IAAyCmC,EAAAA,EAAAA,IAAhBmC,EAAKzC,IAAE,MAEpC7B,EAAAA,EAAAA,GAEK,KAFL,GAEK,EADDA,EAAAA,EAAAA,GAA2C,OAA3C,IAA2CmC,EAAAA,EAAAA,IAAlBmC,EAAK0G,MAAI,MAEtChL,EAAAA,EAAAA,GAEK,KAFL,GAEK,EADDA,EAAAA,EAAAA,GAAsF,OAAtF,IAAsFmC,EAAAA,EAAAA,IAApBmC,EAAK0L,QAAM,MAXrF,oB,MAoBR,QACIrS,KAAM,cACNuF,MAAO,CACH2M,QAASpB,OAEb9K,SAAU,CACN0M,gBAAiB,CACb7K,IAAInG,GAAOwE,KAAKzB,OAAOwD,OAAO,qBAAsBvG,EAAO,EAC3DgG,MAAM,OAAOxB,KAAKzB,OAAOC,MAAMiO,aAAaC,iBAAiBjK,GAAG,GAEpElB,YAAY,CACRC,MAAM,OAAOxB,KAAKgM,QAAQvK,OAAO1D,GACtBiC,KAAKzB,OAAOC,MAAMiO,aAAaC,iBAAiBjK,IAAI5B,SAAS9C,EAAEC,KACvE,EACH2D,IAAInG,GAAO,IAGnB8G,QAAS,CACLE,YACI,GAAwB,GAApBxC,KAAKuB,YAAoB,CACzB,MAAMoL,EAAmB3M,KAAKzB,OAAOC,MAAMiO,aAAaC,iBAAiBjK,IACnEmK,EAAY5M,KAAKgM,QAAQlO,KAAKC,GAAcA,EAAEC,KACpDgC,KAAKzB,OAAOwD,OAAO,qBAAsB4K,EAAiB5N,QAAQhB,IACtD6O,EAAU/L,SAAS9C,KAEnC,KAAO,CACH,MAAM8O,EAAuB7M,KAAKzB,OAAOC,MAAMiO,aAAaC,iBAAiBjK,IAC7EzC,KAAKgM,QAAQhE,SAASjK,KACwD,GAAtEiC,KAAKzB,OAAOC,MAAMiO,aAAaC,iBAAiBjK,IAAI6H,QAAQvM,EAAEC,KAC9D6O,EAAqBzB,KAAKrN,EAAEC,GAChC,IAEJgC,KAAKzB,OAAOwD,OAAO,qBAAsB8K,EAC7C,CACJ,ICpER,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,UCHkB3Q,MAAM,WAAWsB,MAAA,e,IACjBtB,MAAM,WAAWsB,MAAA,e,IACjBtB,MAAM,WAAWsB,MAAA,6B,2EALnC/D,EAAAA,EAAAA,IAYqBoL,GAAAA,EAAA,CAZDhK,QAAQ,YAAYiK,SAAA,IAAxC,C,kBACuB,IAA+C,gBAAlE5J,EAAAA,EAAAA,IAUoBC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAV2BgB,EAAAA,oBAAkB,CAAtC0Q,EAAUxR,M,WAArC7B,EAAAA,EAAAA,IAUoB8L,GAAAA,EAAA,CAVgDhK,IAAKD,GAAK,C,kBAC1E,IAI0B,EAJ1B3B,EAAAA,EAAAA,IAI0B6L,GAAAA,EAAA,M,kBAHtB,IAAgE,EAAhErJ,EAAAA,EAAAA,GAAgE,OAAhE,IAAgEmC,EAAAA,EAAAA,IAApBwO,EAAS9O,IAAE,IACvD7B,EAAAA,EAAAA,GAAmE,OAAnE,IAAmEmC,EAAAA,EAAAA,IAAvBwO,EAASnP,OAAK,IAC1DxB,EAAAA,EAAAA,GAAwF,OAAxF,IAAwFmC,EAAAA,EAAAA,IAA7BwO,EAASC,aAAW,M,KAHnF,OAKApT,EAAAA,EAAAA,IAGyB8L,GAAAA,EAAA,M,kBADrB,IAA0D,EAA1D9L,EAAAA,EAAAA,IAA0DoS,EAAA,CAA5CC,QAAS5P,EAAAA,mBAAmB0Q,EAAS9O,KAAnD,uB,KAFJ,S,KANJ,kB,MAiBJ,QACIlE,KAAM,iBACN8N,WAAW,CACPoF,YAAWA,IAEf3N,MAAO,CACH2M,QAASpB,OAEb9K,SAAS,CACLmN,qBACI,IAAIC,EAAY,GAWhB,OAVAlN,KAAKgM,QAAQhE,SAASf,IAClB,IAAI6F,EAAW9M,KAAKzB,OAAO8D,QAAQ+J,mBAAmBnF,EAAOoF,aAC7D,GAAKa,EAAUrM,SAASiM,GAGjB,CACH,MAAMxR,EAAQ4R,EAAU5C,QAAQwC,GAChCI,EAAU5R,GAAOyR,aAAe9F,EAAOkF,MAC3C,MALIW,EAAS,eAAiB7F,EAAOkF,OACjCe,EAAU9B,KAAK0B,EAInB,IAEGI,EAAUnM,MACb,SAASC,EAAEC,GACP,OAAOA,EAAE8L,YAAc/L,EAAE+L,WAC7B,GAEP,GAELzK,QAAS,CACL6K,mBAAoB,SAASd,GACzB,OAAOrM,KAAKgM,QAAQjN,QAAQhB,GACjBA,EAAEsO,aAAeA,GAE/B,IC/CT,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,UCCkBnQ,MAAM,WAAWsB,MAAA,e,IACjBtB,MAAM,WAAWsB,MAAA,e,IACjBtB,MAAM,WAAWsB,MAAA,6B,IAWLtB,MAAM,WAAWsB,MAAA,e,IACjBtB,MAAM,WAAWsB,MAAA,e,IACjBtB,MAAM,WAAWsB,MAAA,6B,2EAtB/C/D,EAAAA,EAAAA,IAgCqBoL,GAAAA,EAAA,CAhCDhK,QAAQ,YAAYiK,SAAA,IAAxC,C,kBACuB,IAAkC,gBAArD5J,EAAAA,EAAAA,IA8BoBC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IA9BgBgB,EAAAA,kBAAV2G,K,WAA1BtJ,EAAAA,EAAAA,IA8BoB8L,GAAAA,EAAA,CA9BmChK,IAAKwH,EAAO/E,IAAnE,C,kBACI,IAQ0B,EAR1BrE,EAAAA,EAAAA,IAQ0B6L,GAAAA,EAAA,M,kBAPtB,IAG8C,EAH9C7L,EAAAA,EAAAA,IAG8C0E,EAAAA,GAAA,CAH7B,cAAajC,EAAAA,YAAYA,EAAAA,kBAAkB2G,EAAO/E,IAAIF,KAAKC,GAAcA,EAAEC,MAChE/C,QAAQ,UACPX,QAAK,GAAE8B,EAAAA,cAAcA,EAAAA,kBAAkB2G,EAAO/E,IAAIF,KAAKC,GAAcA,EAAEC,OAFpG,mCAIA7B,EAAAA,EAAAA,GAA8D,OAA9D,IAA8DmC,EAAAA,EAAAA,IAAlByE,EAAO/E,IAAE,IACrD7B,EAAAA,EAAAA,GAAiE,OAAjE,IAAiEmC,EAAAA,EAAAA,IAArByE,EAAOpF,OAAK,IACxDxB,EAAAA,EAAAA,GAAsF,OAAtF,IAAsFmC,EAAAA,EAAAA,IAA3ByE,EAAOgK,aAAW,M,KAPjF,OASApT,EAAAA,EAAAA,IAmByB8L,GAAAA,EAAA,M,kBAjBrB,IAeqB,EAfrB9L,EAAAA,EAAAA,IAeqBkL,GAAAA,EAAA,CAfDhK,QAAQ,aAAW,C,kBAChB,IAAyD,gBAA5EK,EAAAA,EAAAA,IAaoBC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAb2BgB,EAAAA,kBAAkB2G,EAAO/E,KAAE,CAA/C8O,EAAUxR,M,WAArC7B,EAAAA,EAAAA,IAaoB8L,GAAAA,EAAA,CAb0DhK,IAAKD,GAAK,C,kBACpF,IAQ0B,EAR1B3B,EAAAA,EAAAA,IAQ0B6L,GAAAA,EAAA,M,kBAPtB,IAGkC,EAHlC7L,EAAAA,EAAAA,IAGkC0E,EAAAA,GAAA,CAHjB,cAAajC,EAAAA,YAAYA,EAAAA,oBAAoB0Q,EAAS9O,IAAIF,KAAKC,IAAC,GAAUA,EAAC,OAAQA,EAAEC,EAAV,KAC5E/C,QAAQ,UACPX,QAAK,GAAE8B,EAAAA,cAAcA,EAAAA,oBAAoB0Q,EAAS9O,IAAIF,KAAKC,GAAcA,EAAEC,OAF5F,mCAIA7B,EAAAA,EAAAA,GAAgE,OAAhE,IAAgEmC,EAAAA,EAAAA,IAApBwO,EAAS9O,IAAE,IACvD7B,EAAAA,EAAAA,GAAmE,OAAnE,IAAmEmC,EAAAA,EAAAA,IAAvBwO,EAASnP,OAAK,IAC1DxB,EAAAA,EAAAA,GAAwF,OAAxF,IAAwFmC,EAAAA,EAAAA,IAA7BwO,EAASC,aAAW,M,KAPnF,OASApT,EAAAA,EAAAA,IAEyB8L,GAAAA,EAAA,M,kBADrB,IAA2D,EAA3D9L,EAAAA,EAAAA,IAA2DoS,EAAA,CAA7CC,QAAS5P,EAAAA,oBAAoB0Q,EAAS9O,KAApD,uB,KADJ,S,KAVJ,kB,KADJ,S,KAFJ,S,KAVJ,kB,MAqCJ,QACIlE,KAAM,eACN8N,WAAW,CACPoF,YAAWA,IAEf3N,MAAO,CACH2M,QAASpB,OAEb7Q,OACI,MAAO,CAAC,CAEX,EACD+F,SAAS,CACLmN,qBACI,IAAIC,EAAY,GAWhB,OAVAlN,KAAKgM,QAAQhE,SAASf,IAClB,IAAI6F,EAAW9M,KAAKzB,OAAO8D,QAAQ+J,mBAAmBnF,EAAOoF,aAC7D,GAAKa,EAAUrM,SAASiM,GAGjB,CACH,MAAMxR,EAAQ4R,EAAU5C,QAAQwC,GAChCI,EAAU5R,GAAOyR,aAAe9F,EAAOkF,MAC3C,MALIW,EAAS,eAAiB7F,EAAOkF,OACjCe,EAAU9B,KAAK0B,EAInB,IAEGI,EAAUnM,MACb,SAASC,EAAEC,GACP,OAAOA,EAAE8L,YAAc/L,EAAE+L,WAC7B,GAEP,EACDK,mBACI,MAAM9M,EAAU,GAYhB,OAXAN,KAAKgM,QAAQhE,SAASf,IAClB,IAAIlE,EAAS/C,KAAKzB,OAAO8D,QAAQoF,iBAAiBR,EAAOF,WAEzD,GAAKzG,EAAQO,SAASkC,GAGf,CACH,MAAMzH,EAAQgF,EAAQgK,QAAQvH,GAC9BzC,EAAQhF,GAAOyR,aAAe9F,EAAOkF,MACzC,MALIpJ,EAAO,eAAiBkE,EAAOkF,OAC/B7L,EAAQ8K,KAAKrI,EAIjB,IAEGzC,EAAQS,MACX,SAASC,EAAEC,GACP,OAAOA,EAAE8L,YAAc/L,EAAE+L,WAC7B,GAEP,GAGLzK,QAAS,CACL+K,kBAAkBtG,GACd,OAAO/G,KAAKiN,mBAAmBlO,QAAQhB,GAC5BA,EAAEgJ,WAAaA,GAE7B,EACDxF,YAAa,SAASkB,GAClB,OAAOA,EAAIhB,OAAO1D,GACPiC,KAAKzB,OAAOC,MAAMiO,aAAaC,iBAAiBjK,IAAI5B,SAAS9C,IAE3E,EACDuP,oBAAqB,SAASjB,GAC1B,OAAOrM,KAAKgM,QAAQjN,QAAQhB,GACjBA,EAAEsO,aAAeA,GAE/B,EACDkB,kBAAmB,SAASxG,GACxB,OAAO/G,KAAKgM,QAAQjN,QAAQhB,GACjBA,EAAEgJ,WAAaA,GAE7B,EACDyG,cAAc/K,GACV,GAA6B,GAAzBzC,KAAKuB,YAAYkB,GAAa,CAC9B,MAAMkK,EAAmB3M,KAAKzB,OAAOC,MAAMiO,aAAaC,iBAAiBjK,IACzEzC,KAAKzB,OAAOwD,OAAO,qBAAsB4K,EAAiB5N,QAAQhB,IACtD0E,EAAI5B,SAAS9C,KAE7B,KAAO,CACH,MAAM8O,EAAuB7M,KAAKzB,OAAOC,MAAMiO,aAAaC,iBAAiBjK,IAC7EA,EAAIuF,SAASjK,KAC8D,GAAnEiC,KAAKzB,OAAOC,MAAMiO,aAAaC,iBAAiBjK,IAAI6H,QAAQvM,IAC5D8O,EAAqBzB,KAAKrN,EAC9B,IAEJiC,KAAKzB,OAAOwD,OAAO,qBAAsB8K,EAC7C,CACJ,IC1HR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,UN0EA,IACI/S,KAAM,eACN8N,WAAY,CACZoF,YADY,GAEZS,eAFY,GAGZC,aAAYA,IAEZ3T,OACI,MAAO,CACH4F,WAAY,CAAE,SAAU,SAAU,YAClCC,mBAAoB,SACpB+N,kBAAkB,EAClBC,cAAe,CACX,cAAgB,GAChB,kBAAqB,IAEzBC,SAAS,CAAC,EAEjB,EACD/N,SAAS,CAQLgO,gBACI,GAA6B,GAAzB9N,KAAK2N,iBACL,OAAO3N,KAAK4N,cAAc,qBACvB,CACHpF,QAAQC,IAAIzI,KAAK4N,eACjB,MAAMG,EAAW/N,KAAK4N,cAAc,iBAC9BI,EAAeD,EAASjQ,KAAIC,GAAKA,EAAE+O,WACzC9M,KAAK4N,cAAc,qBAAqB5F,SAASjK,IACxCiQ,EAAanN,SAAS9C,EAAE+O,WACzBiB,EAAS3C,KAAKrN,EAClB,IAEJ,MAAMkQ,EAASF,EAAShN,MAAK,SAASC,EAAEC,GACpC,OAAOA,EAAEkL,OAASnL,EAAEmL,MACvB,IACD,OAAO8B,CACX,CACH,EACDC,kBACI,MAAMC,EAAmBnO,KAAK8N,cAAchQ,KAAKmJ,IAC7C,MAAMmH,EAAcpO,KAAKqO,uBAAuBpH,EAAO6F,UACjDwB,EAActO,KAAKzB,OAAOC,MAAM+P,oBAAoBC,cAAcJ,EAAYtB,UACvCpH,YACAsG,QAAQoC,EAAYnH,QACjE,MAAO,CAAC,GAAMA,EAAO6F,SAAU,OAAU7F,EAAOkF,OAAQ,KAAQmC,EAAY,SAAY,oBAAqB,YAAeF,EAAYtB,SAAU,UAAa9M,KAAKzB,OAAO8D,QAAQ+J,mBAAmBgC,EAAYtB,UAAU/F,UAA5N,IAEJ,OAAOoH,CACV,EACD3B,kBACI,OAAOxM,KAAKkO,gBAAgBnP,QAAQhB,GACzBiC,KAAKzB,OAAOC,MAAM+P,oBAAoB7B,iBAAiBjK,IAAI5B,SAAS9C,EAAEC,KAEpF,EACDyQ,oBACI,MAAMvD,EAAe,GAMrB,OALAlL,KAAKwM,gBAAgBxE,SAASjK,IACrBmN,EAAapN,KAAIC,GAAKA,EAAEsO,cAAaxL,SAAS9C,EAAEsO,cACjDnB,EAAaE,KAAKrN,EAAEsO,YACxB,IAEGnB,CACV,GAEL5I,QAAS,CAELoM,mBAAoB,SAASC,EAAM,GAAIC,EAAY,YAE/CC,KAAAA,KAAW,yDAA0D,CACjE,QAAS,IACT,UAAa,aACdC,MAAKnK,IACJ6D,QAAQC,IAAI9D,EAAS5K,MACrBiG,KAAK4N,cAAgB,CACjB,cAAiBxN,OAAOC,OAAOsE,EAAS5K,KAAKgV,eAC7C,kBAAqB3O,OAAOC,OAAOsE,EAAS5K,KAAKiV,mBAFrD,IAKHC,OAAM,SAASC,GACZ1G,QAAQC,IAAIyG,EACf,GACJ,EACDb,uBAAwB,SAASc,GAC7B,MAAO,CAAC,OAAUA,EAAOC,OAAOD,EAAOvQ,OAAS,GAAGqB,cAAcoP,WAAW,GAAK,GAAI,SAAYF,EAAO7N,MAAM,GAAI,GACrH,EACDkM,cAAc/K,GACV,GAA6B,GAAzBzC,KAAKuB,YAAYkB,GAAa,CAC9B,MAAMkK,EAAmB3M,KAAKzB,OAAOC,MAAM+P,oBAAoB7B,iBAAiBjK,IAChFzC,KAAKzB,OAAOwD,OAAO,qBAAsB4K,EAAiB5N,QAAQhB,IACtD0E,EAAI5B,SAAS9C,KAE7B,KAAO,CACH,MAAM8O,EAAuB7M,KAAKzB,OAAOC,MAAM+P,oBAAoB7B,iBAAiBjK,IACpFA,EAAIuF,SAASjK,KACqE,GAA1EiC,KAAKzB,OAAOC,MAAM+P,oBAAoB7B,iBAAiBjK,IAAI6H,QAAQvM,IACnE8O,EAAqBzB,KAAKrN,EAC9B,IAEJiC,KAAKzB,OAAOwD,OAAO,qBAAsB8K,EAC7C,CACH,EACDtL,YAAa,SAASkB,GAClB,OAAOA,EAAIhB,OAAO1D,GACPiC,KAAKzB,OAAOC,MAAM+P,oBAAoB7B,iBAAiBjK,IAAI5B,SAAS9C,IAElF,EACDiL,SAAS7B,GACL,MAAM8B,EAAKC,SAASC,cAAc,YAClCF,EAAGzN,MAAQ2L,EACX8B,EAAGG,aAAa,WAAY,IAC5BH,EAAGzL,MAAM6L,SAAW,WACpBJ,EAAGzL,MAAM8L,KAAO,UAChBJ,SAASK,KAAKC,YAAYP,GAC1B,MAAMQ,EAAYP,SAASQ,eAAeC,WAAa,GAAKT,SAASQ,eAAeE,WAAW,GAC/FX,EAAGY,SACHX,SAASY,YAAY,QACrBZ,SAASK,KAAKQ,YAAYd,GACtBQ,IACJP,SAASQ,eAAeM,kBACxBd,SAASQ,eAAeO,SAASR,GAEpC,GAELqC,UACI9L,KAAK0O,oBACR,EACDtL,MAAM,CACFxD,mBAAoB,WAChBI,KAAK0O,oBACR,EACDf,iBAAkB,WACd3N,KAAK0O,oBACT,IOpNR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,yECHyC,S,IAERlR,MAAA,0B,IAKStB,MAAM,WAAWsB,MAAA,uC,YACqC,a,qBA0CgBrB,EAAAA,EAAAA,GAAuB,YAAjB,cAAU,G,IAGlCA,EAAAA,EAAAA,GAAiC,YAA3B,wBAAoB,G,eAqCpEA,EAAAA,EAAAA,GAAqD,QAA/CD,MAAM,YAAW,2BAAuB,G,IAKtCC,EAAAA,EAAAA,GASQ,eARJA,EAAAA,EAAAA,GAOK,YANDA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAwB,YAAlB,kBAEVA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAkB,YAAZ,eANlB,G,IA2BRA,EAAAA,EAAAA,GAA6C,QAAvCD,MAAM,YAAW,mBAAe,G,IAGhCA,MAAM,Y,IAMZC,EAAAA,EAAAA,GAAiD,QAA3CD,MAAM,YAAW,uBAAmB,G,IASdC,EAAAA,EAAAA,GAAI,mB,YAAA,S,IAUhCA,EAAAA,EAAAA,GAAqD,QAA/CD,MAAM,YAAW,2BAAuB,G,IAY9CC,EAAAA,EAAAA,GAA2C,QAArCD,MAAM,YAAW,iBAAa,G,IASpCC,EAAAA,EAAAA,GAAkC,QAA5BD,MAAM,YAAW,QAAI,G,2EAhL/EzC,EAAAA,EAAAA,IAuMY+C,EAAAA,EAAA,M,kBAtMJ,IA0DQ,EA1DR7C,EAAAA,EAAAA,IA0DQ8C,EAAAA,EAAA,CA1DDC,KAAK,KAAKC,GAAG,IAAIC,GAAG,MAA3B,C,kBACI,IAqCS,EArCTjD,EAAAA,EAAAA,IAqCSkE,EAAAA,EAAA,CArCDhD,QAAQ,WAAWqB,MAAM,QAAjC,C,kBACI,IAkCc,EAlCdvC,EAAAA,EAAAA,IAkCc2V,GAAAA,EAAA,CAlCDpT,MAAM,QAAM,C,kBACrB,IAcY,EAdZvC,EAAAA,EAAAA,IAcY4V,GAAAA,GAAA,CAdDtU,QAAQ,UAAUgD,MAAM,UAAU/B,MAAM,OAAOsT,MAAA,IAA1D,CAEqBC,WAAS,SACtB,IASE,EATFtT,EAAAA,EAAAA,GASE,MATF,GASE,EARFxC,EAAAA,EAAAA,IAOSwK,GAAAA,EAAA,CAPD,sB,WAA0BhK,EAAAA,U,qCAAAA,EAAAA,UAASC,GAAEoD,MAAA,uBAA6B,iBAAY4G,SAAA,GAAS,oBAA/F,C,kBACW,IAAwC,gBAA/ClJ,EAAAA,EAAAA,IAKQC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IALwBjB,EAAAA,gBAAc,CAA/BuV,EAAOpU,M,WAAtB7B,EAAAA,EAAAA,IAKQ6K,GAAAA,EAAA,CAJC/I,IAAKD,EACLE,MAAOrB,EAAAA,WAAWmB,GAAOxB,MAFlC,C,kBAGI,IAAkG,EAAlGqC,EAAAA,EAAAA,GAAkG,OAAlG,IAAkGmC,EAAAA,EAAAA,IAA/BnE,EAAAA,WAAWmB,GAAOxB,MAAI,IACzFH,EAAAA,EAAAA,IAA8EgW,GAAAA,EAAA,CAAtEC,MAAA,GAAOtV,QAAK,GAAE8B,EAAAA,YAAYd,GAAQ2C,MAAM,MAAM4R,MAAA,IAAtD,C,kBAA4D,IAAS,O,KAArE,qB,KAJJ,4B,KADJ,uB,kBAHJ,IAAwC,EAAxClW,EAAAA,EAAAA,IAAwCmW,GAAAA,EAAA,M,kBAAvB,IAAK,O,gBAgB1BnW,EAAAA,EAAAA,IAcSkE,EAAAA,EAAA,CAdD3B,MAAM,mBAAiB,C,kBAC3B,IAWc,EAXdvC,EAAAA,EAAAA,IAWc2V,GAAAA,EAAA,M,kBAVV,IASW,EATX3V,EAAAA,EAAAA,IASW6K,GAAAA,GAAA,C,WATQrK,EAAAA,U,qCAAAA,EAAAA,UAASC,IAA5B,C,kBACmB,IAAwC,gBAAvDc,EAAAA,EAAAA,IAOgBC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAPwBjB,EAAAA,gBAAc,CAA/BuV,EAAOpU,M,WAA9B7B,EAAAA,EAAAA,IAOgBgL,GAAAA,EAAA,CANClJ,IAAKD,EACLE,MAAOrB,EAAAA,WAAWmB,GAAOxB,MAF1C,C,kBAGI,IAGK,EAHLqC,EAAAA,EAAAA,GAGK,OAHC0J,IAAK6J,EACNxJ,IAAK/L,EAAAA,WAAWmB,GAAOxB,MAD5B,c,KAHJ,4B,KADJ,qB,kCAiBhBH,EAAAA,EAAAA,IAiBQ6C,EAAAA,EAAA,M,kBAhBJ,IAYQ,EAZR7C,EAAAA,EAAAA,IAYQ8C,EAAAA,EAAA,CAZDC,KAAK,KAAG,C,kBACX,IAUgB,EAVhB/C,EAAAA,EAAAA,IAUgBoW,GAAAA,EAAA,CAThBC,OAAO,UACPrS,MAAM,eACNzB,MAAM,YACN,eAAa,aACbrB,QAAQ,WACRiK,SAAA,G,WACS3K,EAAAA,gB,qCAAAA,EAAAA,gBAAeC,GACvB6V,SAAQ7T,EAAAA,cACT4F,KAAK,QATL,qC,OAYJrI,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,KAAG,C,kBACX,IAA2H,EAA3H/C,EAAAA,EAAAA,IAA2HiB,EAAAA,EAAA,CAAnHgJ,SAA2B,GAAjBzJ,EAAAA,WAAWyE,OAActE,QAAO8B,EAAAA,gBAAiBF,MAAM,oBAAzE,C,kBAA4F,IAAuB,CAAvB6I,M,KAA5F,6B,gBAGRpL,EAAAA,EAAAA,IAA2HiB,EAAAA,EAAA,CAAnHN,QAAK,eAAE8B,EAAAA,iBAAiBA,EAAAA,kBAAkBjC,EAAAA,aAAc+B,MAAM,aAAtE,C,kBAAkF,IAAiC,CAAjCgB,M,gBAGtFvD,EAAAA,EAAAA,IAyIQ8C,EAAAA,EAAA,CAzIDC,KAAK,KAAKC,GAAG,IAAIC,GAAG,MAA3B,C,kBACI,IAuIS,EAvITjD,EAAAA,EAAAA,IAuISkE,EAAAA,EAAA,CAvID3B,MAAM,mBAAoBrB,QAAQ,YAA1C,C,kBACI,IAWY,EAXZlB,EAAAA,EAAAA,IAWY4V,GAAAA,GAAA,CAXDC,MAAA,GAAMvU,QAAQ,WAAzB,C,kBACI,IAA6D,EAA7DtB,EAAAA,EAAAA,IAA6DmW,GAAAA,EAAA,M,kBAA5C,IAA0B,EAA1B3T,EAAAA,EAAAA,GAA0B,aAAAmC,EAAAA,EAAAA,IAAlBnE,EAAAA,WAAS,M,gBAWtCR,EAAAA,EAAAA,IAuHc2V,GAAAA,EAAA,CAvHDpT,MAAM,QAAM,C,kBAKjB,IA8GQ,EA9GRvC,EAAAA,EAAAA,IA8GQ6C,EAAAA,EAAA,CA9GDN,MAAM,eAAa,C,kBACtB,IA2GE,CA3GgD,IAAvCkE,OAAOwF,KAAKzL,EAAAA,qBAAqByE,SAAM,WAAlD1D,EAAAA,EAAAA,IA2GE,MAAAkC,GAAA,EAtGFzD,EAAAA,EAAAA,IAqGQ8C,EAAAA,EAAA,CArGDC,KAAK,MAAI,C,kBAEZ,IAiGS,EAjGT/C,EAAAA,EAAAA,IAiGSkE,EAAAA,EAAA,CAjGA3B,MAAM,mBAAiB,C,kBAC5B,IAAyH,CAA5C,IAAlDkE,OAAOwF,KAAKzL,EAAAA,oBAAoBA,EAAAA,YAAYyE,SAAM,WAA7EnF,EAAAA,EAAAA,IAAyH4C,EAAAA,EAAA,C,MAApCC,cAAA,QAArF,WACA7C,EAAAA,EAAAA,IA6FSuB,EAAAA,EAAA,C,MA7FMkB,MAAM,mBAArB,C,kBACI,IA2FqB,EA3FrBvC,EAAAA,EAAAA,IA2FqBkL,GAAAA,EAAA,CA3FDC,SAAA,GAASjK,QAAQ,Y,WAAqBV,EAAAA,oB,qCAAAA,EAAAA,oBAAmBC,IAA7E,C,kBAEI,IA8BoB,EA9BpBT,EAAAA,EAAAA,IA8BoB4L,GAAAA,EAAA,CA9BD/J,MAAM,cAAY,C,kBACjC,IAE0B,EAF1B7B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,M,kBADtB,IAAqD,CAArD6B,M,OAEJ1N,EAAAA,EAAAA,IAyByB8L,GAAAA,EAAA,M,kBAxBrB,IAuBqB,EAvBrB9L,EAAAA,EAAAA,IAuBqBkL,GAAAA,EAAA,M,kBAtBjB,IAqBU,EArBVlL,EAAAA,EAAAA,IAqBUgN,GAAAA,EAAA,M,kBApBN,IASQ,CATRrJ,IAUAnB,EAAAA,EAAAA,GASQ,6BARJjB,EAAAA,EAAAA,IAOKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAP4BjB,EAAAA,oBAAoBA,EAAAA,WAAW+V,UAAQ,CAA5DnJ,EAAWzL,M,WAAvBJ,EAAAA,EAAAA,IAOK,MAPsEK,IAAKD,GAAK,EACjFa,EAAAA,EAAAA,GAEK,YADDA,EAAAA,EAAAA,GAA0B,aAAAmC,EAAAA,EAAAA,IAAlByI,GAAS,MAErB5K,EAAAA,EAAAA,GAEK,YADDA,EAAAA,EAAAA,GAAsE,aAAAmC,EAAAA,EAAAA,IAAAA,KAAzDC,OAAO8D,QAAQoF,iBAAiBV,GAAWpJ,OAAK,UALrE,W,kCAcpBhE,EAAAA,EAAAA,IAOoB4L,GAAAA,EAAA,CAPA/J,MAAM,iBAAe,C,kBACrC,IAE0B,EAF1B7B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,M,kBADtB,IAA6C,CAA7CjI,M,OAEJ5D,EAAAA,EAAAA,IAEyB8L,GAAAA,EAAA,M,kBADrB,IAA8E,EAA9EtJ,EAAAA,EAAAA,GAA8E,OAA9E,IAA8EmC,EAAAA,EAAAA,IAArDnE,EAAAA,oBAAoBA,EAAAA,WAAWgW,eAAa,M,gBAI7ExW,EAAAA,EAAAA,IAiBoB4L,GAAAA,EAAA,CAjBD/J,MAAM,aAAW,C,kBAChC,IAE0B,EAF1B7B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,M,kBADtB,IAAiD,CAAjDa,M,OAEJ1M,EAAAA,EAAAA,IAYyB8L,GAAAA,EAAA,M,kBAXrB,IAUqB,EAVrB9L,EAAAA,EAAAA,IAUqBkL,GAAAA,EAAA,M,kBATE,IAAuE,gBAA1F3J,EAAAA,EAAAA,IAOoBC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAPwBjB,EAAAA,oBAAoBA,EAAAA,WAAWiW,gBAAc,CAA9D3V,EAAOa,M,WAAlC7B,EAAAA,EAAAA,IAOoB8L,GAAAA,EAAA,CAPwEhK,IAAKD,GAAK,C,kBAClG,IAE0B,EAF1B3B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,M,kBADtB,IAAsB,EAAtBrJ,EAAAA,EAAAA,GAAsB,aAAAmC,EAAAA,EAAAA,IAAd7D,GAAK,M,KADjB,OAGAd,EAAAA,EAAAA,IAEyB8L,GAAAA,EAAA,M,kBADrB,IAAgC,EAAhCtJ,EAAAA,EAAAA,GAAgC,+BAAxB1B,GAAO,IAAC,GAAA4V,GAAgB,Q,KADpC,S,KAJJ,kB,yBAaZ1W,EAAAA,EAAAA,IAUoB4L,GAAAA,EAAA,CAVD/J,MAAM,WAAS,C,kBAC9B,IAE0B,EAF1B7B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,M,kBADtB,IAAqD,CAArDkB,M,OAEJ/M,EAAAA,EAAAA,IAKyB8L,GAAAA,EAAA,M,kBAJrB,IAGqB,EAHrB9L,EAAAA,EAAAA,IAGqBkL,GAAAA,EAAA,M,kBAFJ,IAAgF,gBAA7F3J,EAAAA,EAAAA,IAAkIC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAA/FgB,EAAAA,iBAAiBjC,EAAAA,oBAAoBA,EAAAA,WAAW+V,WAAQ,CAAtElS,EAAI1C,M,WAAzB7B,EAAAA,EAAAA,IAAkI6W,EAAA,CAAnC/U,IAAKD,EAAQ0C,GAAIA,GAAhH,2B,yBAMZrE,EAAAA,EAAAA,IAOoB4L,GAAAA,EAAA,CAPD/J,MAAM,mBAAiB,C,kBACtC,IAE0B,EAF1B7B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,M,kBADtB,IAA2C,CAA3CoB,M,OAEJjN,EAAAA,EAAAA,IAEyB8L,GAAAA,EAAA,M,kBADrB,IAA+D,EAA/DtJ,EAAAA,EAAAA,GAA+D,aAAAmC,EAAAA,EAAAA,IAAvDnE,EAAAA,oBAAoBA,EAAAA,WAAWoW,iBAAe,M,gBAI9D5W,EAAAA,EAAAA,IAOoB4L,GAAAA,EAAA,CAPD/J,MAAM,QAAM,C,kBAC3B,IAE0B,EAF1B7B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,M,kBADtB,IAAkC,CAAlCgL,M,OAEJ7W,EAAAA,EAAAA,IAEyB8L,GAAAA,EAAA,M,kBADrB,IAA+C,EAA/CtJ,EAAAA,EAAAA,GAA+C,aAAAmC,EAAAA,EAAAA,IAAvCnE,EAAAA,oBAAoBA,EAAAA,YAAS,M,uBAxFjD,qB,6BAVZ,kB,oDC/DRgC,EAAAA,EAAAA,GAAmB,SAAhB,gBAAY,G,IAGZD,MAAM,O,IAMTC,EAAAA,EAAAA,GAAc,SAAX,WAAO,G,IAMEA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAY,OAEtB,G,IACAC,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAY,YAEtB,G,UACIA,MAAM,a,UAGNA,MAAM,a,0BAeIA,MAAM,c,IAWhCC,EAAAA,EAAAA,GAAgB,SAAb,aAAS,G,IAIRA,EAAAA,EAAAA,GASQ,eARJA,EAAAA,EAAAA,GAOK,YANDA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAW,SAAR,WAEPA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAW,SAAR,cANf,G,IAwBJA,EAAAA,EAAAA,GAAe,SAAZ,YAAQ,G,2EAhG/B1C,EAAAA,EAAAA,IA2GoB8L,GAAAA,EAAA,CA3GD/H,MAAA,gBAAmB,C,kBAClC,IAW0B,EAX1B7D,EAAAA,EAAAA,IAW0B6L,GAAAA,EAAA,M,kBAVtB,IAQQ,EARR7L,EAAAA,EAAAA,IAQQ6C,EAAAA,EAAA,M,kBAPJ,IAEQ,EAFR7C,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,IAAIR,MAAM,wBAAtB,C,kBACI,IAA+B,EAA/BC,EAAAA,EAAAA,GAA+B,cAAAmC,EAAAA,EAAAA,IAArBlC,EAAAA,SAAS4B,IAAE,M,OAEzBrE,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,M,kBADJ,IAA0B,mBAAxBL,EAAAA,SAAS+E,eAAa,M,yBAMpCxH,EAAAA,EAAAA,IA6FyB8L,GAAAA,EAAA,M,kBA5FrB,IA0FqB,EA1FrB9L,EAAAA,EAAAA,IA0FqBkL,GAAAA,EAAA,M,kBAxFjB,IAOoB,EAPpBlL,EAAAA,EAAAA,IAOoB4L,GAAAA,EAAA,M,kBANhB,IAE0B,EAF1B5L,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAmB,CAAnBR,M,OAEJ/B,EAAAA,EAAAA,IAE0B8L,GAAAA,EAAA,M,kBADtB,IAAyC,EAAzCtJ,EAAAA,EAAAA,GAAyC,IAAzC,IAAyCmC,EAAAA,EAAAA,IAAxBlC,EAAAA,SAAS2K,WAAS,M,eAIlB3G,OAAOwF,KAAKxJ,EAAAA,UAAUyE,SAAQ,oBAA9B,WAAzBpH,EAAAA,EAAAA,IAuCoB8L,GAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAtChB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAc,CAAdJ,M,OAEJnC,EAAAA,EAAAA,IAkC0B8L,GAAAA,EAAA,M,kBAjCtB,IAgCU,EAhCV9L,EAAAA,EAAAA,IAgCUgN,GAAAA,EAAA,M,kBA/BN,IAeQ,EAfRxK,EAAAA,EAAAA,GAeQ,eAdJA,EAAAA,EAAAA,GAaK,WAZDH,GAGAe,GAG4BqD,OAAOwF,KAAKxJ,EAAAA,UAAUyE,SAAQ,yBAA9B,WAA5B3F,EAAAA,EAAAA,IAEK,KAFL,GAAmF,cAAnF,eAG4BkF,OAAOwF,KAAKxJ,EAAAA,UAAUyE,SAAQ,yBAA9B,WAA5B3F,EAAAA,EAAAA,IAEK,KAFL,GAAmF,SAAnF,oBAKRiB,EAAAA,EAAAA,GAcQ,6BAbJjB,EAAAA,EAAAA,IAWKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAXyBgB,EAAAA,SAAS4K,gBAAc,CAAzCC,EAAQ3L,M,WAApBJ,EAAAA,EAAAA,IAWK,MAXmDK,IAAKD,EAAQkC,OAAK,4BAAuByJ,EAAOC,WAAU,qBAAlH,EACQ/K,EAAAA,EAAAA,GAEK,YADDA,EAAAA,EAAAA,GAA0B,aAAAmC,EAAAA,EAAAA,IAAlB2I,EAAOjJ,IAAE,MAErB7B,EAAAA,EAAAA,GAAwB,WAAAmC,EAAAA,EAAAA,IAAlB2I,EAAOE,MAAI,GACP/G,OAAOwF,KAAKxJ,EAAAA,UAAUyE,SAAQ,yBAA9B,WAAV3F,EAAAA,EAAAA,IAEK,KAAAkC,GAAA,EADDjB,EAAAA,EAAAA,GAAwD,aAAAmC,EAAAA,EAAAA,IAAhDlC,EAAAA,SAASgL,oBAAoBH,EAAOjJ,KAAE,OADlD,eAGUoC,OAAOwF,KAAKxJ,EAAAA,UAAUyE,SAAQ,yBAA9B,WAAV3F,EAAAA,EAAAA,IAEK,KAAAmM,GAAA,EADDlL,EAAAA,EAAAA,GAAqJ,OAArJ,IAAqJmC,EAAAA,EAAAA,IAA1HgJ,KAAKC,MAAMnL,EAAAA,SAASgL,oBAAoBH,EAAOjJ,IAAM5B,EAAAA,wBAAwBA,EAAAA,SAASgL,qBAAmB,aADxI,gBARR,iB,0BAvBhB,eAyCyBhH,OAAOwF,KAAKxJ,EAAAA,UAAUyE,SAAQ,mBAA9B,WAAzBpH,EAAAA,EAAAA,IA0BoB8L,GAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAzBhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAgB,CAAhBqB,M,OAEJ5D,EAAAA,EAAAA,IAqByB8L,GAAAA,EAAA,M,kBApBrB,IAmBU,EAnBV9L,EAAAA,EAAAA,IAmBUgN,GAAAA,EAAA,M,kBAlBN,IASQ,CATRP,IAUAjK,EAAAA,EAAAA,GAOQ,6BALAjB,EAAAA,EAAAA,IAGKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAHsBgF,OAAOwF,KAAKxJ,EAAAA,SAASoL,gBAAa,CAAjDjM,EAAKD,M,WAAjBJ,EAAAA,EAAAA,IAGK,MAH4DK,IAAKD,GAAK,EACvEa,EAAAA,EAAAA,GAAgB,WAAAmC,EAAAA,EAAAA,IAAV/C,GAAG,IACTY,EAAAA,EAAAA,GAAgE,WAAAmC,EAAAA,EAAAA,IAA1DuI,WAAWzK,EAAAA,SAASoL,cAAcjM,IAAMuL,QAAO,IAAK,IAAC,QAF/D,W,0BAlBpB,eA4B0BnI,EAAAA,WAA1B,iBAA0BA,EAAAA,EAAAA,OAA1BlF,EAAAA,EAAAA,IASoB8L,GAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBARhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAe,CAAfmK,M,OAEJ1M,EAAAA,EAAAA,IAI0B8L,GAAAA,EAAA,M,kBAHtB,IAEqB,EAFrB9L,EAAAA,EAAAA,IAEqBkL,GAAAA,EAAA,M,kBADjB,IAAwC,EAAxClL,EAAAA,EAAAA,IAAwC2W,EAAA,CAA1BtS,GAAIyS,EAAAA,SAAS1J,WAA3B,kB,8DChFI5K,EAAAA,EAAAA,GAAmB,SAAhB,gBAAY,G,IAGZD,MAAM,O,IAMTC,EAAAA,EAAAA,GAAgB,SAAb,aAAS,G,IAGTD,MAAM,O,IAMTC,EAAAA,EAAAA,GAAY,SAAT,SAAK,G,eAkBRA,EAAAA,EAAAA,GAAY,SAAT,SAAK,G,0BAQAA,EAAAA,EAAAA,GAA4C,QAAtCD,MAAM,aAAY,iBAAa,G,IAG/BA,MAAM,a,eAMZC,EAAAA,EAAAA,GAA2C,QAArCD,MAAM,aAAY,gBAAY,G,IAG9BA,MAAM,a,IASpBC,EAAAA,EAAAA,GAAa,SAAV,UAAM,G,IAWTA,EAAAA,EAAAA,GAAgB,SAAb,aAAS,G,IAIRA,EAAAA,EAAAA,GASQ,eARJA,EAAAA,EAAAA,GAOK,YANDA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAW,SAAR,WAEPA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAW,SAAR,cANf,G,6EApGhC1C,EAAAA,EAAAA,IA6HoB8L,GAAAA,EAAA,CA7HD/H,MAAA,gBAAmB,C,kBAClC,IAW0B,EAX1B7D,EAAAA,EAAAA,IAW0B6L,GAAAA,EAAA,M,kBAVtB,IAQQ,EARR7L,EAAAA,EAAAA,IAQQ6C,EAAAA,EAAA,M,kBAPJ,IAEQ,EAFR7C,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,IAAIR,MAAM,wBAAtB,C,kBACI,IAAkC,EAAlCC,EAAAA,EAAAA,GAAkC,cAAAmC,EAAAA,EAAAA,IAAxBlC,EAAAA,YAAY4B,IAAE,M,OAE5BrE,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,M,kBADJ,IAAqB,mBAAnBL,EAAAA,YAAYuB,OAAK,M,yBAM/BhE,EAAAA,EAAAA,IA+GyB8L,GAAAA,EAAA,M,kBA9GrB,IA6GU,EA7GVtJ,EAAAA,EAAAA,GA6GU,aA3GFxC,EAAAA,EAAAA,IAyGqBkL,GAAAA,EAAA,M,kBAvGjB,IAOoB,EAPpBlL,EAAAA,EAAAA,IAOoB4L,GAAAA,EAAA,M,kBANhB,IAE0B,EAF1B5L,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAmB,CAAnBR,M,OAEJ/B,EAAAA,EAAAA,IAEyB8L,GAAAA,EAAA,M,kBADrB,IAA+C,EAA/CtJ,EAAAA,EAAAA,GAA+C,IAA/C,IAA+CmC,EAAAA,EAAAA,IAA7BlC,EAAAA,YAAYsJ,aAAW,M,gBAIjD/L,EAAAA,EAAAA,IAOoB4L,GAAAA,EAAA,M,kBANhB,IAE0B,EAF1B5L,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAgB,CAAhBJ,M,OAEJnC,EAAAA,EAAAA,IAEyB8L,GAAAA,EAAA,M,kBADrB,IAAmD,EAAnDtJ,EAAAA,EAAAA,GAAmD,IAAnD,IAAmDmC,EAAAA,EAAAA,IAAjClC,EAAAA,YAAYmE,KAAKoF,YAAQ,M,eAI1BvF,OAAOwF,KAAKxJ,EAAAA,aAAayE,SAAQ,gBAAjC,WAAzBpH,EAAAA,EAAAA,IAgBoB8L,GAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAfhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAY,CAAZa,M,OAEJpD,EAAAA,EAAAA,IAWyB8L,GAAAA,EAAA,M,kBAVrB,IASiC,EATjCtJ,EAAAA,EAAAA,GASiC,UATxB0J,IAAG,iCAAqCzJ,EAAAA,YAAY0J,WACrDC,MAAM,0QAKNvI,MAAA,iCACA0H,MAAM,OAENc,gBAAA,IATR,c,iBALR,gBAkBArM,EAAAA,EAAAA,IA2BoB4L,GAAAA,EAAA,M,kBA1BhB,IAE0B,EAF1B5L,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAY,CAAZgB,M,OAEJvD,EAAAA,EAAAA,IAsByB8L,GAAAA,EAAA,M,kBArBrB,IAEM,CAFKrF,OAAOwF,KAAKxJ,EAAAA,aAAayE,SAAQ,mBAAjC,WAAX3F,EAAAA,EAAAA,IAEM,MAAAkC,GAAA,EADFjB,EAAAA,EAAAA,GAAqE,OAA/D0J,IAAKzJ,EAAAA,YAAY6J,cAAeC,IAAI,eAAehB,MAAM,OAA/D,eADJ,eAGc9E,OAAOwF,KAAKxJ,EAAAA,aAAayE,SAAQ,iBAAjC,WAAdpH,EAAAA,EAAAA,IAOQ+C,EAAAA,EAAA,CAAAjB,IAAAA,GAAA,C,kBANJ,IAEQ,EAFR5B,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,KAAG,C,kBACX,IAA4C,CAA5CY,M,OAEJ3D,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,MAAI,C,kBACZ,IAA0D,EAA1DP,EAAAA,EAAAA,GAA0D,OAA1D,IAA0DmC,EAAAA,EAAAA,IAAhClC,EAAAA,YAAY+J,aAAW,M,iBALzD,eAQW/F,OAAOwF,KAAKxJ,EAAAA,aAAayE,SAAQ,gBAAmBT,OAAOwF,KAAKxJ,EAAAA,aAAayE,SAAQ,gBAAjC,WAA/D3F,EAAAA,EAAAA,IAAgH,KAAAkL,MAAhH,eACahG,OAAOwF,KAAKxJ,EAAAA,aAAayE,SAAQ,gBAAjC,WAAbpH,EAAAA,EAAAA,IAOQ+C,EAAAA,EAAA,CAAAjB,IAAAA,GAAA,C,kBANJ,IAEQ,EAFR5B,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,KAAG,C,kBACX,IAA2C,CAA3C2J,M,OAEJ1M,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,MAAI,C,kBACZ,IAAyD,EAAzDP,EAAAA,EAAAA,GAAyD,OAAzD,IAAyDmC,EAAAA,EAAAA,IAA/BlC,EAAAA,YAAYkK,YAAU,M,iBALxD,kB,eAYiBlG,OAAOwF,KAAKxJ,EAAAA,aAAayE,SAAQ,UAAjC,WAAzBpH,EAAAA,EAAAA,IASoB8L,GAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBARhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAa,CAAbqK,M,OAEJ5M,EAAAA,EAAAA,IAIyB8L,GAAAA,EAAA,M,kBAHrB,IAEqB,EAFrB9L,EAAAA,EAAAA,IAEqBkL,GAAAA,EAAA,M,kBADF,IAA0C,gBAAzD3J,EAAAA,EAAAA,IAAuGC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAA/DgB,EAAAA,YAAYmE,MAAI,CAAjCmQ,EAAOpV,M,WAA9B7B,EAAAA,EAAAA,IAAuGkX,EAAA,CAA5CpV,IAAKD,EAAQ0C,GAAI0S,EAAQjK,WAAW,GAA/F,2B,0BANZ,eAWyBrG,OAAOwF,KAAKxJ,EAAAA,aAAayE,SAAQ,UAAjC,WAAzBpH,EAAAA,EAAAA,IA0BoB8L,GAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAzBhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,GAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAgB,CAAhBwK,M,OAEJ/M,EAAAA,EAAAA,IAqByB8L,GAAAA,EAAA,M,kBApBrB,IAmBU,EAnBV9L,EAAAA,EAAAA,IAmBUgN,GAAAA,EAAA,M,kBAlBN,IASQ,CATRC,IAUAzK,EAAAA,EAAAA,GAOQ,6BALAjB,EAAAA,EAAAA,IAGKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAHsBgF,OAAOwF,KAAKxJ,EAAAA,YAAS,CAApCb,EAAKD,M,WAAjBJ,EAAAA,EAAAA,IAGK,MAH+CK,IAAKD,GAAK,EAC1Da,EAAAA,EAAAA,GAAgB,WAAAmC,EAAAA,EAAAA,IAAV/C,GAAG,IACTY,EAAAA,EAAAA,GAAmD,WAAAmC,EAAAA,EAAAA,IAA7CuI,WAAWzK,EAAAA,UAAUb,IAAMuL,QAAO,IAAK,IAAC,QAFlD,W,0BAlBpB,kB,0BAqCpB,QACIhN,KAAM,cACN8N,WAAY,CACRgJ,cAAaA,IAEjBvR,MAAO,CACHrB,GAAIiK,QAERnI,SAAU,CACN+Q,cACI,OAAO7Q,KAAKzB,OAAO8D,QAAQoF,iBAAiBzH,KAAKhC,GACpD,EACDsK,YACI,IAAIA,EAAY,CAAC,EAajB,OAZAtI,KAAK6Q,YAAYtQ,KAAKyH,SAASjK,IACvBqC,OAAOwF,KAAK7H,GAAG8C,SAAS,kBACxBT,OAAOwF,KAAK7H,EAAEyJ,eAAeQ,SAASO,IACjCnI,OAAOwF,KAAK0C,GAAWzH,SAAS0H,KACjCD,EAAUC,GAAY,GAG1BD,EAAUC,GAAYD,EAAUC,GAAYjB,KAAKC,MAAMxJ,EAAEyJ,cAAce,GAAvE,GAEJ,IAGGD,CACX,GAEJhG,QAAS,CAAC,EAGVoG,UACI1I,KAAKzB,OAAO2F,SAAS,yBAA0B,CAAClE,KAAKhC,KACrDgC,KAAKzB,OAAO2F,SAAS,sBAAuBlE,KAAK6Q,YAAYtQ,KAChE,GClKL,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,UF2GA,IACIzG,KAAM,gBACNuF,MAAO,CACHrB,GAAIiK,OACJxB,UAAW,CAACzE,KAAM0F,QAASC,SAAS,IAExCC,WAAY,CACRkJ,YAAWA,IAEfhR,SAAU,CACNiR,WACI,OAAO/Q,KAAKzB,OAAO8D,QAAQgG,cAAcrI,KAAKhC,GAClD,GAEJsE,QAAS,CACLwF,wBAAyB,SAASV,GAC9B,IAAIW,EAAQ,EAIZ,OAHA3H,OAAOC,OAAO+G,GAAqBY,SAASjK,IACxCgK,GAAgBE,OAAOlK,EAAvB,IAEGgK,CACX,GAEJ+D,UACI9L,KAAKzB,OAAO2F,SAAS,sBAAuB,CAAClE,KAAKhC,IACrD,GGtIL,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,UJwMA,IACIlE,KAAM,WACN8N,WAAY,CACRgJ,cADQ,GAERE,YAAWA,IAEf/W,OACI,MAAO,CACHiX,eAAgB,GAChBC,WAAY,GACZC,gBAAiB,GACjBC,UAAW,GACXC,eAAgB,GAChBC,oBAAqB,CAAC,cACtBC,oBAAqB,CAAC,EAE7B,EACDhP,QAAS,CACLiP,cAAe,SAASC,GACpB,IAAIzN,EAAQyN,EAAMzO,OACd0O,EAAQ1N,EAAM2N,MAAM9S,OACpBtD,EAAQ,EACZ,GAAIyI,EAAM2N,MACN,MAAMD,IAAU,CAChB,IAAIE,EAAS,IAAIC,WACZ5R,KAAK6R,WAAWhR,SAASkD,EAAM2N,MAAMpW,GAAOxB,QAC7C6X,EAAOG,OAAU/T,IACjBiC,KAAKgR,eAAe5F,KAAKrN,EAAEgF,OAAOgP,OAAlC,EAEA/R,KAAKiR,WAAW7F,KAAKrH,EAAM2N,MAAMpW,IACjC0E,KAAKsR,oBAAoBvN,EAAM2N,MAAMpW,GAAOxB,MAAQ,CAAC,EACrDkG,KAAKgS,iBAAiBjO,EAAM2N,MAAMpW,IAClCqW,EAAOM,cAAclO,EAAM2N,MAAMpW,KAGrCA,GACA,CAEJ0E,KAAKkR,gBAAkB,GACvBlR,KAAKmR,UAAYnR,KAAKoR,eAAiBrN,EAAM2N,MAAM3N,EAAM2N,MAAM9S,OAAS,GAAG9E,IAC9E,EACDoY,YAAa,SAAS5W,IACJ,GAAVA,IACA0E,KAAKgR,eAAemB,OAAO7W,EAAO,GAClC0E,KAAKiR,WAAWkB,OAAO7W,EAAO,GAErC,EACD8W,gBAAiB,WACbpS,KAAKiR,WAAa,GAClBjR,KAAKqS,aAAe,EACxB,EACAL,iBAAkB,SAASM,GACvB,IAAIC,EAAW,IAAIC,SACfC,EAAYH,EAChBC,EAAS5X,OAAO,QAAS8X,GACzBjK,QAAQC,IAAI,4BAA6B8J,GACzC1D,KAAAA,KAAW,iDACH0D,EACA,CACIG,QAAS,CACL,eAAgB,yBAErB5D,MAAMnK,IACL6D,QAAQC,IAAI,mBAAmB9D,GAC/B3E,KAAKsR,oBAAoBgB,EAAKxY,MAAQ6K,EAAS5K,IAA/C,IACDkV,OAAOC,IAAW1G,QAAQC,IAAIyG,EAAZ,GAEhC,EACDyD,kBAAkB7Y,GACd,MAAMwB,EAAQ0E,KAAK6R,WAAWvH,QAAQxQ,GACtC,IAAc,GAAVwB,EACA,OAAO0E,KAAKiR,WAAW3V,EAE9B,EACDsX,iBAAkB,SAASC,GACvB,OAAOA,EAAM9T,QAAO,SAAS0B,EAAMqS,GAC/B,OAAOD,EAAMvI,QAAQ7J,IAASqS,CACjC,GACL,GAEJhT,SAAU,CACN+R,aACI,OAAO7R,KAAKiR,WAAWnT,KAAIC,GAAKA,EAAEjE,MACrC,GAGLsJ,MAAM,CACF+N,UAAW,SAAS9N,EAAWC,GAC3BtD,KAAKqR,oBAAsB,CAAC,aAEhC,GAEJvF,UACI9L,KAAKzB,OAAO2F,SAAS,eACrBlE,KAAKzB,OAAO2F,SAAS,WACxB,GKvSL,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,wCCIgD,gB,YAI9B,Y,6HAhBO,GAAV9H,EAAAA,aAAU,WAArBlB,EAAAA,EAAAA,IAEM,MAAAQ,GAAA,EADF/B,EAAAA,EAAAA,IAAyD0C,EAAAA,EAAA,CAApCC,cAAA,UADzB,WAGApB,EAAAA,EAAAA,IA+DE,MAAAU,GAAA,EA9DFjC,EAAAA,EAAAA,IA6DQ6C,EAAAA,EAAA,CA7DDN,MAAM,QAAM,C,kBACf,IAyCQ,EAzCRvC,EAAAA,EAAAA,IAyCQ8C,EAAAA,EAAA,CAzCDC,KAAK,KAAG,C,kBACX,IAK2G,EAL3G/C,EAAAA,EAAAA,IAK2G8D,EAAAA,EAAA,CAL7F5C,QAAQ,WACV,qBACK6C,UAAO,yBAAQ+S,EAAAA,UAAUA,EAAAA,aAAY,MAAC,WAC3C9S,MAAM,oB,WACGxD,EAAAA,O,qCAAAA,EAAAA,OAAMC,GACfwD,KAAK,4EALjB,wBAMAjE,EAAAA,EAAAA,IAAwDiB,EAAAA,EAAA,CAAhDN,QAAK,eAAE8B,EAAAA,YAAYjC,EAAAA,UAA3B,C,kBAAoC,IAAY,O,OAChDgC,EAAAA,EAAAA,GAGM,WAHD,kBAELmC,EAAAA,EAAAA,IAAEnE,EAAAA,gBAAc,GAJ2F,IAO3GR,EAAAA,EAAAA,IAyBSqB,EAAAA,EAAA,CAzBDkB,MAAM,uBAAqB,C,kBAClB,IAAkC,gBAA/ChB,EAAAA,EAAAA,IAuBcC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAvBuBgB,EAAAA,WAAS,CAAzBqE,EAAMnF,M,WAA3B7B,EAAAA,EAAAA,IAuBce,EAAAA,EAAA,CAvBmCe,IAAKD,EAAShB,QAAK,GAAE8B,EAAAA,WAAWqE,IAAjF,C,kBACI,IAUoB,CAVc,UAATA,EAAKuB,OAAI,WAAlCvI,EAAAA,EAAAA,IAUoB0F,EAAAA,EAAA,CAAA5D,IAAAA,GAAA,C,kBAThB,IAQQ,EARR5B,EAAAA,EAAAA,IAQQ6C,EAAAA,EAAA,M,kBAPJ,IAEQ,EAFR7C,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,KAAG,C,kBACX,IAA8B,EAA9BP,EAAAA,EAAAA,GAA8B,YAAxB,KAACmC,EAAAA,EAAAA,IAAEmC,EAAK1G,KAAKiE,IAAE,M,KADzB,OAGArE,EAAAA,EAAAA,IAGQ8C,EAAAA,EAAA,M,kBAFJ,IAAkC,EAAlCN,EAAAA,EAAAA,GAAkC,aAAAmC,EAAAA,EAAAA,IAAxBmC,EAAK1G,KAAK4D,OAAK,M,KAD7B,S,KAJJ,S,KADJ,oBAWAlE,EAAAA,EAAAA,IAUoB0F,EAAAA,EAAA,CAAA5D,IAAAA,GAAA,C,kBAThB,IAQQ,EARR5B,EAAAA,EAAAA,IAQQ6C,EAAAA,EAAA,M,kBAPJ,IAEQ,EAFR7C,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,KAAG,C,kBACX,IAA8B,EAA9BP,EAAAA,EAAAA,GAA8B,YAAxB,KAACmC,EAAAA,EAAAA,IAAEmC,EAAK1G,KAAKiE,IAAE,M,KADzB,OAGArE,EAAAA,EAAAA,IAGQ8C,EAAAA,EAAA,M,kBAFJ,IAA0C,EAA1CN,EAAAA,EAAAA,GAA0C,aAAAmC,EAAAA,EAAAA,IAAhCmC,EAAK1G,KAAKoH,eAAa,M,KADrC,S,KAJJ,S,KADJ,U,KAZJ,8B,gBA4BRxH,EAAAA,EAAAA,IAgBQ8C,EAAAA,EAAA,CAhBDC,KAAK,KAAG,C,kBACX,IAcS,EAdT/C,EAAAA,EAAAA,IAcSkE,EAAAA,EAAA,M,kBAbL,IAYM,CAZkB,IAAb1D,EAAAA,SAAS6H,OAAI,WAAxB9G,EAAAA,EAAAA,IAYM,MAAA6B,GAAA,CAXsB,UAAb5C,EAAAA,SAAS6H,OAAI,WAAxB9G,EAAAA,EAAAA,IAKM,MAAA6J,GAAA,EAJFpL,EAAAA,EAAAA,IAGqBkL,GAAAA,EAAA,C,WAHQ1K,EAAAA,M,qCAAAA,EAAAA,MAAKC,IAAlC,C,kBACI,IAAiC,EAAjCT,EAAAA,EAAAA,IAAiC2W,EAAA,CAAnBtS,GAAI7D,EAAAA,SAAS6D,IAA3B,kB,KADJ,uBADJ,WAMA9C,EAAAA,EAAAA,IAIM,MAAAgC,GAAA,EAHFvD,EAAAA,EAAAA,IAEqBkL,GAAAA,EAAA,C,WAFQ1K,EAAAA,M,qCAAAA,EAAAA,MAAKC,IAAlC,C,kBACI,IAAmC,EAAnCT,EAAAA,EAAAA,IAAmCgX,EAAA,CAAnB3S,GAAI7D,EAAAA,SAAS6D,IAA7B,kB,KADJ,yBARR,kB,qDA0BhB,IACIlE,KAAM,cACN8N,WAAY,CACZgJ,cADY,cAEZE,YAFY,cAGZA,YAHY,cAIZF,cAAaA,GAAAA,YAEb7W,OACI,MAAO,CAEHyF,OAAQ,OACRmF,SAAU,CAAC,QAAU,EAAO,MAAS,GAAI,SAAY,IACrDoO,eAAgB,GAChBtJ,SAAU,CACN,GAAM,GACN,KAAQ,IAEZuJ,MAAO,CAAC,GAGf,EACDlT,SAAU,CACNmT,YACI,MAAMlZ,EAAO,GAeb,OAdAiG,KAAK2E,SAASuL,SAASlI,SAASjK,IACA,UAAxBiC,KAAKkT,QAAQnV,GAAGiE,MAChBjI,EAAKqR,KAAK,CACN,KAAQ,SACR,KAAQpL,KAAKzB,OAAO8D,QAAQoF,iBAAiBzH,KAAKkT,QAAQnV,GAAGC,MAGzC,YAAxBgC,KAAKkT,QAAQnV,GAAGiE,MAChBjI,EAAKqR,KAAK,CACN,KAAQ,WACR,KAAQpL,KAAKzB,OAAO8D,QAAQgG,cAAcrI,KAAKkT,QAAQnV,GAAGC,KAElE,IAEGjE,CACV,EACD8R,aACI,MAAQ,CAAoE,GAAnEzL,OAAOwF,KAAK5F,KAAKzB,OAAOC,MAAMC,kBAAkB6B,SAAS1B,OACM,GAAhEwB,OAAOwF,KAAK5F,KAAKzB,OAAOC,MAAMC,kBAAkB8B,MAAM3B,QAAa6C,OAAM1D,IAAW,IAANA,GACzF,GAGLuE,QAAS,CACL6Q,YAAaC,eAAejE,GACxB,MAAMpV,EAAO,CACT,MAASoV,EAAOxJ,YAEpB6C,QAAQC,IAAI,YAAa0G,EAAQ,KAAM,OAAQ,kEAC/C,MAAMxK,EAAWkK,KAAAA,KAAW,iEAAkE9U,GAAM+U,MAAMnK,IACtG6D,QAAQC,IAAI9D,GACZ3E,KAAK2E,SAAWA,EAAS5K,KACzBiG,KAAK+S,eAAiB5D,EACfxK,KAEX,OAAOA,CACV,EACDuO,QAAS,SAASlV,GACd,MAAMjE,EAAM,CAAC,EAGb,OAFAA,EAAKiI,KAAwB,KAAjBhE,EAAGsD,MAAM,EAAE,GAAY,SAAW,WAC9CvH,EAAKiE,GAAKA,EAAGsD,MAAM,GACZvH,CACV,EAEDsZ,WAAY,SAAS5S,GACjBT,KAAKyJ,SAAW,CAAC,GAAKhJ,EAAK1G,KAAKiE,GAAI,KAAQyC,EAAKuB,KACrD,IC3IR,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,UhC0CA,IACIlI,KAAM,OACN8N,WAAY,CACR0L,WADQ,GAERC,aAFQ,GAGRC,SAHQ,GAIRC,YAAWA,IAGf1Z,OACI,MAAO,CACH2Z,YAAa,CAAC,CACVjZ,MAAO,OACPK,KAAM,GACNW,MAAO,IAEP,CACAhB,MAAO,eACPK,KAAM,GACNW,MAAO,gBAEP,CACAhB,MAAO,WACPK,KAAM,GACNW,MAAO,YAEP,CACAhB,MAAO,SACPK,KAAM,GACNW,MAAO,gBAGXpB,MAAM,EACNsZ,QAAQ,EACRC,cAAe,GAEvB,GiClFJ,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,KAEpE,UCJA,MAAMC,GAAS,CACb,CACEtP,KAAM,IACNzK,KAAM,OACNga,UAAWC,KAITC,IAASC,EAAAA,EAAAA,IAAa,CAC1BC,SAASC,EAAAA,EAAAA,IAAiBC,KAC1BP,YAGF,U,SCbA,MAAMpV,GAAoB,CACtBD,MAAO,KAAM,CAET8B,QAAS,CAAC,EAEVC,KAAM,CAAC,EAEP7B,kBAAkB,CACd,OAAU,GACV,IAAO,IAIXyD,uBAAuB,CACnB,QAAU,EACV,KAAO,GAEXkS,SAAU,yCACVvQ,cAAe,CACX,CACIS,KAAM,kBACNU,QAAS,cACToP,SAAU,GACVtQ,MAAO,SACPuQ,cAAe,MACfC,kBAAmB,0BACnB/Y,MAAO,CAAC,GAAG,GAAG,GACdiI,WAAY,gBACZhJ,MAAO,2BACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,GAEhB,CACIjQ,KAAM,qBACNU,QAAS,WACToP,SAAU,GACVtQ,MAAO,WACPuQ,cAAe,gBACfC,kBAAmB,uBACnB/Y,MAAO,CAAC,GAAG,GAAG,GAAG,IACjBiI,WAAY,gBACZhJ,MAAO,2BACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,GAEhB,CACIjQ,KAAM,0BACNU,QAAS,MACToP,SAAU,GACVtQ,MAAO,SACPuQ,cAAe,SACfC,kBAAmB,cACnB/Y,MAAO,MACPiI,WAAY,UACZhJ,MAAO,oBACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,GAEhB,CACIjQ,KAAM,sBACNU,QAAS,cACToP,SAAU,GACVtQ,MAAO,MACPuQ,cAAe,gBACfC,kBAAmB,gBACnB/Y,MAAO,GACPiI,WAAY,gBACZhJ,MAAO,mCACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,GAEhB,CACIjQ,KAAM,gBACNU,QAAS,GACToP,SAAU,GACVtQ,MAAO,MACPuQ,cAAe,gBACfC,kBAAmB,WACnB/Y,MAAO,GACPiI,WAAY,gBACZhJ,MAAO,wCACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,GAEhB,CACIjQ,KAAM,oBACNU,QAAS,WACToP,SAAU,GACVtQ,MAAO,MACPuQ,cAAe,gBACfC,kBAAmB,WACnB/Y,MAAO,GACPiI,WAAY,gBACZhJ,MAAO,cACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,EACZC,QAAS,SAASjW,EAAO6D,GACrBrC,KAAK2E,SAAW3E,KAAKxE,KACxB,GAEL,CACI+I,KAAM,kBACNU,QAAS,cACToP,SAAU,GACVtQ,MAAO,SACPuQ,cAAe,cACfC,kBAAmB,cACnB/Y,MAAO,GACPiI,WAAY,gBACZhJ,MAAO,gBACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,EACZC,QAAS,SAASjW,EAAO6D,GACrBrC,KAAK2E,SAAW3E,KAAKxE,KACxB,GAEL,CACI+I,KAAM,6BACNU,QAAS,WACToP,SAAU,GACVtQ,MAAO,SACPuQ,cAAe,cACfC,kBAAmB,eACnB/Y,MAAO,GACPiI,WAAY,gBACZhJ,MAAO,cACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,EACZC,QAAS,SAASjW,EAAO6D,GACrB,MAAMqS,EAAyB1U,KAAKxE,MAAMsC,KAAKC,GAAcsE,EAAQoF,iBAAiB1J,KACtF,IAAIwC,EAAO,GACXmU,EAAuB1M,SAASjK,IAC5BA,EAAEwC,KAAKyH,SAASjK,IACPwC,EAAKM,SAAS9C,IACfwC,EAAK6K,KAAKrN,EACb,GAHL,IAMJiC,KAAK2E,SAAWpE,CACnB,GAEL,CACIgE,KAAM,6BACNU,QAAS,cACToP,SAAU,GACVtQ,MAAO,MACPuQ,cAAe,WACfC,kBAAmB,WACnB/Y,MAAO,GACPiI,WAAY,gBACZhJ,MAAO,kBACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,EACZC,QAAS,SAASjW,EAAO6D,GACrB,MAAMsS,EAA2B3U,KAAKxE,MAAMsC,KAAKC,GAAcsE,EAAQgG,cAActK,KACrF,IAAIwN,EAAa,GACjBoJ,EAAyB3M,SAASjK,IACzBwN,EAAW1K,SAAS9C,EAAEgJ,YACvBwE,EAAWH,KAAKrN,EAAEgJ,UACrB,IAEL/G,KAAK2E,SAAW4G,CACnB,IAKThB,+BAAgC,kBAChCqK,kBAAmB,kBACnB3P,QAAS,CACL,IAAO,CAAC,MAAO,YACf,OAAU,CAAC,SAAU,kBAG7B5C,QAAS,CAGLD,cAAe,CAAC5D,EAAO6D,EAASN,KAC5B,MAAMhI,EAAO,CACT,OAAUyE,EAAME,kBAAkB,UAAUZ,KAAKE,GAAeqE,EAAQoF,iBAAiBzJ,KACzF,IAAOQ,EAAME,kBAAkB,OAAOZ,KAAKE,GAAeqE,EAAQgG,cAAcrK,MAGpF,OAAOjE,CAAP,EAIJsO,cAAgB7J,GAAWR,IAEvB,IACI,OAAOQ,EAAM+B,KAAKvC,EAKrB,CAJC,MACE,MAAM6W,EAAkB,CAAC,EAEzB,OADAA,EAAgB7W,GAAKA,EACd6W,CACV,GAILpN,iBAAmBjJ,GAAWR,IAE1B,IACI,OAAOQ,EAAM8B,QAAQtC,EAGxB,CAFC,MACE,OAAOQ,EAAMsW,YAChB,GAILC,aAAevW,IACJ,CACH,OAAU4B,OAAOwF,KAAKpH,EAAM8B,SAC5B,IAAOF,OAAOwF,KAAKpH,EAAM+B,QAOjCyU,WAAY,IAAOjb,IACf,GAAsB,WAAnBA,EAAK0J,WACJ,OAAOwR,SAASlb,EAAKyB,MAAM,IACxB,GAAuB,iBAAnBzB,EAAK0J,WACZ,OAAI1J,EAAKyB,iBAAiBoP,MACf7Q,EAAKyB,MAEL,CAACzB,EAAKyB,OAGjB,KAAM,4BAA8BzB,EAAK0J,UAC5C,EAILiH,oBAAsBlM,IAClB,MAAMlD,EAAQkD,EAAMsF,cAAchG,KAAKC,GAAcA,EAAEwG,OAAO+F,QAAQ9L,EAAMoW,mBAC5E,OAAc,GAAVtZ,EACOkD,EAAMsF,cAAcxI,QAG3B,CACH,GAGT4Z,UAAW,CAEPC,eAAe3W,EAAOhD,GAClBgD,EAAM8B,QAAU8U,KAAKC,MAAMD,KAAKE,UAAU9Z,GAC7C,EAED+Z,YAAY/W,EAAOhD,GACfgD,EAAM+B,KAAO6U,KAAKC,MAAMD,KAAKE,UAAU9Z,GAC1C,EAGDga,wBAAyB,SAAShX,GAAO,MAAChD,EAAD,KAAQwG,IAC7CxD,EAAM2D,uBAAuBH,GAAQxG,CACxC,EAGDia,mBAAoB,UAAS,MAACjX,EAAD,QAAQ6D,IAAU,MAAC7G,EAAD,KAAQwG,IACnDxG,EAAQA,EAAMsC,KAAKC,GAAcA,EAAE4H,aACtB5G,QAAQhB,GAAeiC,KAAKqC,QAAQ0S,aAAa/S,GAAMnB,SAAS9C,KAE7EvC,EAAQA,EAAMuD,QAAO,SAAS0B,EAAMqS,GAAM,OAAOtX,EAAM8O,QAAQ7J,IAASqS,CAAK,IAE7E9S,KAAKxB,MAAMC,kBAAkBC,kBAAkBsD,GAAQxG,EACvDwE,KAAKxB,MAAMC,kBAAkB0D,uBAAuBH,IAAQ,CAC/D,EAGD0T,+BAAgC,UAAS,MAAClX,EAAD,QAAQ6D,IAAU,MAAC7G,EAAD,KAAQwG,IAC/DxG,EAAQA,EAAMuD,QAAQhB,GAAeiC,KAAKqC,QAAQ0S,aAAa/S,GAAMnB,SAAS9C,KAE9EiC,KAAKxB,MAAMC,kBAAkBC,kBAAkBsD,GAAQxG,CAC1D,EAGDqH,UAAW,SAASrE,GAAO,GAACR,EAAD,KAAKgE,IAC5B,IAAI1G,EAAQkD,EAAME,kBAAkBsD,GAAMsI,QAAQtM,IACpC,GAAV1C,EACAkD,EAAME,kBAAkBsD,GAAMmQ,OAAO7W,EAAO,GAE5CkD,EAAME,kBAAkBsD,GAAMoJ,KAAKpN,GAEvCQ,EAAM2D,uBAAuBH,IAAQ,CACxC,EAGDW,UAAW,SAASnE,GAAO,IAACiE,EAAD,KAAMT,IAC7BS,EAAIuF,SAAShK,IAGLQ,EAAME,kBAAkBsD,GAAMoJ,KAAKpN,EAAnC,IAGRQ,EAAM2D,uBAAuBH,IAAQ,CACxC,EAGDY,SAAU,SAASpE,GAAO,IAACiE,EAAD,KAAMT,IAG5BxD,EAAME,kBAAkBsD,GAAQxD,EAAME,kBAAkBsD,GAAMjD,QAAQf,IAAQyE,EAAI5B,SAAS7C,KAE3FQ,EAAM2D,uBAAuBH,IAAQ,CACxC,EAMD2T,aAAc,SAASnX,GAAO,IAACoX,EAAD,KAAM9b,EAAN,MAAY0B,IACtC,MAAMF,EAAQkD,EAAMsF,cAAcwG,QAAQsL,IAC5B,GAAVta,IACAkD,EAAMsF,cAAcxI,GAAOxB,GAAQ0B,EAE1C,EAGDqa,8BAA+B,SAASrX,EAAO+F,GAC3C/F,EAAM+L,+BAAiChG,CAC1C,EAGDuR,iBAAkB,SAAStX,GAAO,GAACR,EAAD,KAAKjE,IACnCqG,OAAOwF,KAAK7L,GAAMiO,SAASzM,IACvBiD,EAAM+B,KAAKvC,GAAIzC,GAAOxB,EAAKwB,EAA3B,GAEP,EAGDwa,oBAAqB,SAASvX,GAAO,GAACR,EAAD,KAAKjE,IACtCqG,OAAOwF,KAAK7L,GAAMiO,SAASzM,IACvBiD,EAAM8B,QAAQtC,GAAIzC,GAAOxB,EAAKwB,EAA9B,GAEP,EAKDya,mBAAoB,SAASxX,EAAOhD,GAChCgD,EAAMoW,kBAAoBpZ,CAC7B,GAGLya,QAAS,CAGLC,YAAa9C,gBAAe,SAAClP,EAAD,OAAWnC,EAAX,MAAmBvD,EAAnB,QAA0B6D,IAClD,MAAM8T,EAAiB9T,EAAQ+T,oBAAoB,sBAC7CpY,QAAWkG,EAAS,gBAAiB,CAACpK,KAAM,qBAAsBqc,eAAgBA,IAAiBrH,MAAKnK,GAAoBA,IAE5HA,QAAiBT,EAAS,uBAAwB,CAACmS,OAAQF,EAAgBrc,KAAM,qBAAsBkE,GAAIA,IACjH,IAAIjE,EAAO,CAAC,EAOZ,OANA4K,EAASqD,SAASjK,IACdhE,EAAKgE,EAAEC,GAAG2H,YAAc5H,CAAxB,IAIJgE,EAAO,iBAAkBhI,GAClBA,CACV,EAGDuc,SAAUlD,gBAAe,SAAClP,EAAD,OAAWnC,EAAX,MAAmBvD,EAAnB,QAA0B6D,IAC/C,MAAM8T,EAAiB9T,EAAQ+T,oBAAoB,mBAC7CpY,QAAWkG,EAAS,gBAAiB,CAACpK,KAAM,kBAAmBqc,eAAgBA,IAAiBrH,MAAKnK,GAAoBA,IAEzHA,QAAiBT,EAAS,uBAAwB,CAACmS,OAAQF,EAAgBrc,KAAM,kBAAmBkE,GAAIA,IAC9G,IAAIjE,EAAO,CAAC,EAKZ,OAJA4K,EAASqD,SAASjK,IACdhE,EAAKgE,EAAEC,GAAG2H,YAAc5H,CAAxB,IAEJgE,EAAO,cAAehI,GACfA,CACV,EAGDwc,WAAY,UAAS,OAACxU,EAAD,QAASM,EAAT,MAAkB7D,GAAQoX,GAC3C,IAAIvB,EAAW7V,EAAM6V,SAAWuB,EAAIrR,KAChCiS,EAAc,CAAC,EAGnB,OAFAA,EAAYZ,EAAItB,eAAiBjS,EAAQ2S,WAAW,CAAC,MAASY,EAAIpa,MAAO,WAAcoa,EAAInS,aAC3F+E,QAAQC,IAAI,YAAY+N,EAAa,KAAK,OAAOnC,GAC1CxF,KAAAA,KAAWwF,EAAUmC,GAAa1H,MAAK,SAASnK,GACnD6D,QAAQC,IAAI,iBAAmBmN,EAAIrR,KAAM,KAAM,kBAAmBI,EAAS5K,MAC3EgI,EAAO,eAAgB,CAAC,IAAO6T,EAAK,KAAQ,WAAY,MAASjR,EAAS5K,MAC7E,IACAkV,OAAM,SAASC,GACZ,IAAIuH,EAAa,oBAAoBrB,KAAKE,UAAUkB,GAAc,OAAOtH,EACzEnN,EAAO,eAAgB,CAAC,IAAO6T,EAAK,KAAQ,WAAY,MAASa,GACpE,GACJ,EAGDC,UAAWtD,gBAAe,OAACrR,EAAD,SAASmC,EAAT,MAAmB1F,EAAnB,QAA0B6D,GAAUuT,GAC1D,IAAIta,EAAQkD,EAAMsF,cAAcwG,QAAQsL,GACxC,IAAc,GAAVta,EAAa,CACbyG,EAAO,eAAgB,CAAC,IAAOvD,EAAMsF,cAAcxI,GAAQ,KAAQ,UAAW,OAAS,IAGjE,GAAlBsa,EAAIpB,iBACEtQ,EAAS,aAAc1F,EAAMsF,cAAcxI,IAEjDsa,EAAInB,QAAQjW,EAAO6D,GAGvBN,EAAO,gCAAiC6T,EAAIrR,MAG5C,MAAM/I,EAAQ,GACRmb,EAAWf,EAAIpa,MAQrB,GAPImb,aAAoB1O,SACpB0O,EAAW,CAACA,IAEhBA,EAAS3O,SAASjK,IAAOvC,EAAM4P,KAAKrN,EAAX,IAEzBgE,EAAO,eAAgB,CAAC,IAAMvD,EAAMsF,cAAcxI,GAAQ,KAAQ,WAAY,MAASqb,IAEnFnY,EAAMyG,QAAQuB,IAAI3F,SAASrC,EAAMsF,cAAcxI,GAAO2J,SAAU,CAEhE,GAAIzG,EAAMsF,cAAcxI,GAAOqJ,SAASiS,eAAe,eACnD,IAAIC,EAAgB,CAAC5O,OAAOzJ,EAAMsF,cAAcxI,GAAOqJ,SAASmE,mBAEpE,GAAItK,EAAMsF,cAAcxI,GAAOqJ,oBAAoBiG,MAC3CiM,EAAgBrY,EAAMsF,cAAcxI,GAAOqJ,SAAS7G,KAAKC,GAAckK,OAAOlK,UAE9E8Y,EAAgB,CAACrY,EAAMsF,cAAcxI,GAAOqJ,UAAU7G,KAAKC,GAAckK,OAAOlK,WAGlFmG,EAAS,sBAAuB2S,EACzC,MAAM,GAAIrY,EAAMyG,QAAQlC,OAAOlC,SAASrC,EAAMsF,cAAcxI,GAAO2J,SAAS,CACzE,GAAIzG,EAAMsF,cAAcxI,GAAOqJ,oBAAoBiG,MAC3CiM,EAAgBrY,EAAMsF,cAAcxI,GAAOqJ,SAAS7G,KAAKC,GAAckK,OAAOlK,UAE9E8Y,EAAgB,CAACrY,EAAMsF,cAAcxI,GAAOqJ,UAAU7G,KAAKC,GAAckK,OAAOlK,WAElFmG,EAAS,yBAA0B2S,EAC5C,CAED9U,EAAO,eAAgB,CAAC,IAAOvD,EAAMsF,cAAcxI,GAAQ,KAAQ,UAAW,OAAS,GAE1F,CACJ,EAGDwb,WAAY1D,gBAAe,QAAC/Q,EAAD,SAAU6B,IAAU,KAACpK,EAAD,MAAOiK,IAClD,MAAMoS,EAAiBnW,KAAKqC,QAAQ+T,oBAAoBtc,EAAMiK,GAExD/F,QAAWkG,EAAS,gBAAiB,CAACpK,OAAMqc,mBAAiBrH,MAAKnK,GAAoBA,IAEtF5K,QAAamK,EAAS,uBAAwB,CAACmS,OAAQF,EAAgBrc,KAAMA,EAAMkE,GAAIA,IAE7F,OAAOjE,CACV,EAGDgd,oBAAqB3D,gBAAe,OAACrR,EAAD,QAASM,EAAT,SAAkB6B,EAAlB,MAA4B1F,GAAQqY,GACpEA,EAAgBA,EAAc/Y,KAAKC,GAAckK,OAAOlK,KAExD,MAAMiZ,EAAyBxY,EAAMsF,cAAcmT,WAAWlZ,GAAwB,uBAAVA,EAAEwG,OAC9ExC,EAAO,eAAgB,CAAC,IAAOvD,EAAMsF,cAAckT,GAAyB,KAAQ,QAAS,MAASH,IACtGrO,QAAQC,IAAIjK,EAAMsF,cAAckT,IAEhC,MAAME,QAA6BhT,EAAS,aAAc1F,EAAMsF,cAAckT,IAAyBlI,MAAK,WACxGtQ,EAAMsF,cAAckT,GAAwBrS,SAASqD,SAASjK,IAC7B,+BAAzBA,EAAEqJ,qBACFrF,EAAO,mBAAoB,CAAC/D,GAAID,EAAEsO,YAAatS,KAAM,CAAC,oBAAuBgE,EAAEqJ,sBAClF,GAER,IAGK+P,EAA0B3Y,EAAMsF,cAAcmT,WAAWlZ,GAAwB,iBAAVA,EAAEwG,OAC/ExC,EAAO,eAAgB,CAAC,IAAOvD,EAAMsF,cAAcqT,GAA0B,KAAQ,QAAS,MAASN,IAEvG,MAAMO,QAA8BlT,EAAS,aAAc1F,EAAMsF,cAAcqT,IAA0BrI,MAAK,WACvC,GAA/DtQ,EAAMsF,cAAcqT,GAAyBxS,SAAS0S,OACtD7Y,EAAMsF,cAAcqT,GAAyBxS,SAASqD,SAASjK,IAC3D,MAAMC,EAAKD,EAAEC,UACND,EAAEC,GACT+D,EAAO,mBAAoB,CAAC/D,GAAIA,EAAIjE,KAAM,CAAC,cAAiBgE,IAA5D,GAIX,IAGKuZ,QAAsBpT,EAAS,aAAc,CAACpK,KAAM,kBAAkBiK,MAAO8S,IAAgB/H,MAAK,SAASnK,GAC7GA,EAASqD,SAASjK,IACdgE,EAAO,mBAAoB,CAAC/D,GAAID,EAAEC,GAAIjE,KAAMgE,GAA5C,GAEP,IAED,OAAOwZ,QAAQC,IAAI,CAACN,EAAsBE,EAAuBE,GACpE,EAGDG,uBAAwBrE,gBAAe,OAACrR,EAAD,QAASM,EAAT,SAAkB6B,EAAlB,MAA4B1F,GAAQqY,GACvEA,EAAgBA,EAAc/Y,KAAKC,GAAckK,OAAOlK,KAGxD,MAAMuZ,QAAsBpT,EAAS,aAAc,CAACpK,KAAM,qBAAqBiK,MAAO8S,IAAgB/H,MAAK,SAASnK,GAChHA,EAASqD,SAASjK,IACdgE,EAAO,sBAAuB,CAAC/D,GAAID,EAAEC,GAAIjE,KAAMgE,GAA/C,GAEP,IAED,OAAOwZ,QAAQC,IAAI,CAACF,GACvB,IAIH/I,GAAsB,CACxB/P,MAAO,KAAM,CACT6V,SAAU,yCACVvQ,cAAe,CACX,CACIS,KAAM,sBACNU,QAAS,cACToP,SAAU,GACVtQ,MAAO,MACPuQ,cAAe,gBACfC,kBAAmB,gBACnB/Y,MAAO,GACPiI,WAAY,gBACZhJ,MAAO,mCACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,GAEhB,CACIjQ,KAAM,gBACNU,QAAS,GACToP,SAAU,GACVtQ,MAAO,MACPuQ,cAAe,gBACfC,kBAAmB,WACnB/Y,MAAO,GACPiI,WAAY,gBACZhJ,MAAO,wCACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,IAGpB9H,iBAAkB,CACdvF,KAAM,UACN1E,IAAK,CAAC,WAGdJ,QAAS,GA8CT6S,UAAW,CACPwC,mBAAoBlZ,EAAOhD,GACvBgD,EAAMkO,iBAAiBjK,IAAMjH,CAChC,EACDmc,YAAanZ,EAAOR,GAChB,MAAM1C,EAAQkD,EAAMkO,iBAAiBjK,IAAI6H,QAAQtM,IACnC,GAAV1C,EACAkD,EAAMkO,iBAAiBjK,IAAI2I,KAAKpN,GAEhCQ,EAAMkO,iBAAiBjK,IAAI0P,OAAO7W,EAAO,EAEhD,GA2CL2a,QAAS,IAsKP2B,GAAkB,CACpBpZ,MAAO,KAAM,CAAN,GAGP6D,QAAS,CAAC,EAGV6S,UAAW,CAAC,EAGZe,QAAS,CAAC,GAKR4B,GAAa,CACfrZ,MAAO,KAAM,CACTsF,cAAe,CACX,mBAAwB,CACI,GAAM,EACN,KAAQ,yBAER,WAAc,OAEd,WAAc,OAEd,cAAiB,wDAEjB,eAAoB,CAAC,CACG,GAAM,IACN,MAAS,WACT,YAAe,iBACf,KAAQ,CAAC,OASjC,SAAY,CAAC,EAEb,aAAgB,CAAC,MAAS,soBASV,UAAY,CAAC,GAI7B,mBAAsB,EAEtBgU,oBAAqB,SAAS/d,GAC1B,IAII,OAHAA,EAAKuG,QAAQ0H,SAASjK,IAClBA,EAAEwC,KAAOxC,EAAEwC,KAAKzC,KAAKC,GAAcA,EAAEC,IAArC,IAEGjE,EAAKuG,OAGf,CAFC,MAAO4O,GACL,OAAOnV,EAAKuG,OACf,CACJ,GAE7B,gBAAqB,CACO,GAAM,EACN,KAAQ,kBAER,WAAc,OAEd,WAAc,OAEd,cAAiB,iDAEjB,eAAoB,CAAC,CACG,GAAM,IACN,cAAiB,oBACjB,UAAa,MAQrC,SAAY,CAAC,EAEb,aAAgB,CAAC,MAAS,0eAOV,UAAY,CAAC,GAI7B,mBAAsB,EAEtBwX,oBAAqB,SAAS/d,GAC1B,IACI,OAAOA,EAAKwG,IAGf,CAFC,MAAO2O,GACL,OAAOnV,EAAKwG,IACf,CACJ,GAE7B,mBAAwB,CACI,GAAM,EACN,KAAQ,qBAER,WAAcqK,MAEd,WAAc,UAEd,cAAiB,4GAEjB,eAAoB,CACI,CACA,GAAM,IACN,MAAS,kBACT,YAAe,iBACf,cAAiB,GACjB,KAAQ,CAAC,KACT,WAAc,cACd,WAAc,gBACd,YAAe,mBASvC,SAAY,CAAC,EAEb,aAAgB,CAAC,MAAS,4mCAcV,UAAY,CAAC,GAI7B,mBAAsB,EAEtBkN,oBAAqB,SAAS/d,GAC1B,IAII,OAHAA,EAAKge,oBAAoB/P,SAASjK,IAC9BA,EAAEwC,KAAOxC,EAAEwC,KAAKzC,KAAKC,GAAcA,EAAEC,IAArC,IAEGjE,EAAKge,mBAGf,CAFC,MAAO7I,GACL,OAAOnV,EAAKge,mBACf,CACJ,GAE7B,gBAAqB,CACO,GAAM,EACN,KAAQ,kBAER,WAAcnN,MAEd,WAAc,UAEd,cAAiB,qHAEjB,eAAoB,CACI,CACA,GAAM,IACN,UAAa,IACb,cAAiB,yBACjB,eAAkB,CACd,CACA,SAAY,GACZ,YAAc,EACd,KAAQ,kBACR,MAAS,EACT,GAAM,MAEN,CACA,SAAY,GACZ,YAAc,EACd,KAAQ,kBACR,MAAS,EACT,GAAM,MAEN,CACA,SAAY,GACZ,YAAc,EACd,KAAQ,kBACR,MAAS,EACT,GAAM,MAEN,CACA,SAAY,GACZ,YAAc,EACd,KAAQ,kBACR,MAAS,EACT,GAAM,SAWlC,SAAY,CAAC,EAEb,aAAgB,CAAC,MAAS,otCAcV,UAAY,CAAC,GAI7B,mBAAsB,EAEtBkN,oBAAqB,SAAS/d,GAC1B,IAII,OAHAA,EAAKie,iBAAiBhQ,SAASjK,IAC3BA,EAAEwC,KAAOxC,EAAEwC,KAAKzC,KAAKC,GAAcA,EAAEC,IAArC,IAEGjE,EAAKie,gBAGf,CAFC,MAAO9I,GACL,OAAOnV,EAAKie,gBACf,CACJ,IAIjCC,sBAAuB,CAAC,IAE5B5V,QAAS,CACL+T,oBAAsB5X,GAAU,CAAC1E,EAAMiK,KACnC,MAAMmU,EAAM,gDACNxF,EAAU,CACZ,cAAiB,eACjB,eAAgB,oBAEdyF,EAAe3Z,EAAMsF,cAAchK,GAAMqe,aAG/C,GADApU,EAAQA,GAAS,CAAC,GACbA,aAAiB3D,OAAQ,CAC1B,MAAMgY,EAAa5Z,EAAMsF,cAAchK,GAAMse,WACzCrU,aAAiBqU,IACbA,GAAcxN,QACd7G,EAAQ,CAACA,IAETqU,GAAcnQ,SACdlE,EAAQkE,OAAOlE,IAEfqU,GAAc9Y,SACdyE,EAAQA,EAAM4B,YAGzB,CACD,MAAM0S,EAAW7Z,EAAMsF,cAAchK,GAAMwe,WAG3C,OAFAH,EAAaI,UAAUF,GAAYtU,EAE5B,CACHmU,IAAKA,EACLM,OAAQ,OACRze,KAAMqb,KAAKE,UAAU6C,GACrBzF,QAASA,EAJb,EAQJ+F,kBAAoBja,GAAW1E,GACpBsG,OAAOwF,KAAKpH,EAAMsF,cAAchK,GAAM6K,UAAU7G,KAAIE,GAAMQ,EAAMsF,cAAchK,GAAM6K,SAAS3G,GAAI+F,QAE5G2U,aAAela,GAAW1E,GACfsG,OAAOwF,KAAKpH,EAAMsF,cAAchK,GAAM6K,UAEjDgU,aAAena,IACX,MAAMzE,EAAO,CAAC,EAOd,OANAqG,OAAOwF,KAAKpH,EAAMsF,eAAekE,SAASjK,IACtChE,EAAKgE,GAAK,CAAC,EACXqC,OAAOwF,KAAKpH,EAAMsF,cAAc/F,GAAG4G,UAAUqD,SAAS4Q,IAClD7e,EAAKgE,GAAG6a,GAAKpa,EAAMsF,cAAc/F,GAAG4G,SAASiU,EAA7C,GADJ,IAIG7e,CAAP,GAGRmb,UAAW,CACP2D,2BAA4B,SAASra,GAAO,KAAC1E,EAAD,GAAOkE,EAAP,MAAWxC,IACnDgD,EAAMsF,cAAchK,GAAM6K,SAAS3G,GAAIjE,KAAOyB,CACjD,EACDsd,8BAA+B,SAASta,GAAO,KAAC1E,EAAD,GAAOkE,EAAP,MAAWxC,IACtDgD,EAAMsF,cAAchK,GAAM6K,SAAS3G,GAAI0F,QAAUlI,CACpD,EACDud,4BAA6B,SAASva,GAAO,KAAC1E,EAAD,GAAOkE,EAAP,MAAWxC,IACpDgD,EAAMsF,cAAchK,GAAM6K,SAAS3G,GAAI+F,MAAQvI,CAClD,EAEDwd,oBAAqB,SAASxa,GAAO,KAAC1E,EAAD,GAAOkE,IACxCQ,EAAMsF,cAAchK,GAAM6K,SAAS3G,GAAM,CACrC+F,MAAO,CAAC,EACRL,SAAS,EACT3J,KAAMyE,EAAMsF,cAAchK,GAAMmf,eAEvC,EACDC,8BAA+B,SAAS1a,EAAO1E,GAC3C0E,EAAMsF,cAAchK,GAAMqf,mBAAqB3a,EAAMsF,cAAchK,GAAMqf,mBAAqB,CACjG,GAILlD,QAAS,CACLmD,cAAe,UAAS,MAAC5a,EAAD,QAAQ6D,EAAR,OAAiBN,IAAQ,KAACjI,EAAD,eAAOqc,IACpD,GAA6C,GAAzC9T,EAAQoW,kBAAkB3e,GAAMud,MAChC,OAAO,EAEP,IAAI/b,EAAQ+G,EAAQoW,kBAAkB3e,GAAMwQ,QAAQ6L,EAAepc,MACnE,IAAc,GAAVuB,EACA,OAAO8E,OAAOwF,KAAKpH,EAAMsF,cAAchK,GAAM6K,UAAUrJ,GACpD,CACHyG,EAAO,gCAAiCjI,GACxC,MAAMkE,EAAKQ,EAAMsF,cAAchK,GAAMqf,mBAGrC,OAFApX,EAAO,sBAAuB,CAACjI,OAAMkE,OAE9BA,CACV,CAER,EACDqb,qBAAsBjG,gBAAe,MAAC5U,EAAD,OAAQuD,IAAS,OAACsU,EAAD,KAASvc,EAAT,GAAekE,IACjE+D,EAAO,gCAAgC,CAACjI,KAAKA,EAAMkE,GAAGA,EAAIxC,OAAM,IAChEuG,EAAO,8BAA8B,CAACjI,KAAKA,EAAMkE,GAAGA,EAAIxC,MAAO6a,EAAOtc,OACtEyO,QAAQC,IAAI,YAAa3O,EAAM,KAAM,WAAYsb,KAAKC,MAAMgB,EAAOtc,OAEnE,MAAMA,QAAa8U,KAAMwH,GAAQvH,MAAK,SAASnK,GAC3C6D,QAAQC,IAAI,aAAc3O,EAAM,KAAM,eAAgBkE,EAAI,KAAM,UAAW2G,EAAS5K,KAAKA,MACzF,MAAMA,EAAOyE,EAAMsF,cAAchK,GAAMge,oBAAoBnT,EAAS5K,KAAKA,MAGzE,OAFAgI,EAAO,6BAA8B,CAACjI,KAAKA,EAAMkE,GAAGA,EAAIxC,MAAMzB,IAC9DgI,EAAO,gCAAiC,CAACjI,KAAKA,EAAMkE,GAAGA,EAAIxC,OAAM,IAC1DzB,CACV,IACD,OAAOA,CACV,GAELuf,QAAS,CAAC,GAId,QAAeC,EAAAA,GAAAA,IAAY,CACvBD,QAAS,CACLzB,WAAYA,GACZpZ,kBAAmBA,GACnB8P,oBAAqBA,GACrBqJ,gBAAiBA,M,qBCzsCzB,IAAe4B,EAAAA,GAAAA,MCDRpG,eAAeqG,KACpB,MAAMC,QAAsB,mCAE5BA,EAAcC,KAAK,CACjBC,OAAQ,CACNC,SAAU,CAAC,iDAGhB,CCPDJ,MAEAK,EAAAA,EAAAA,IAAUC,GACPC,IAAIhG,IACJgG,IAAIC,IACJD,IAAIE,IACJC,MAAM,O,2KCMWhe,EAAAA,EAAAA,GAAmB,SAAhB,gBAAY,G,GAGZD,MAAM,O,GAMTC,EAAAA,EAAAA,GAAc,SAAX,WAAO,G,GAMEA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAY,OAEtB,G,GACAC,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAY,YAEtB,G,SACIA,MAAM,a,SAGNA,MAAM,a,uBAeIA,MAAM,c,GAWhCC,EAAAA,EAAAA,GAAgB,SAAb,aAAS,G,GAIRA,EAAAA,EAAAA,GASQ,eARJA,EAAAA,EAAAA,GAOK,YANDA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAW,SAAR,WAEPA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAW,SAAR,cANf,G,GAwBJA,EAAAA,EAAAA,GAAe,SAAZ,YAAQ,G,+DAhGchC,EAAAA,SAAAA,EAAAA,EAAAA,OAA7CV,EAAAA,EAAAA,IA2GoB8L,EAAAA,EAAA,C,MA3GD/H,MAAA,gBAAnB,C,kBACI,IAW0B,EAX1B7D,EAAAA,EAAAA,IAW0B6L,EAAAA,EAAA,M,kBAVtB,IAQQ,EARR7L,EAAAA,EAAAA,IAQQ6C,EAAAA,EAAA,M,kBAPJ,IAEQ,EAFR7C,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,IAAIR,MAAM,wBAAtB,C,kBACI,IAA+B,EAA/BC,EAAAA,EAAAA,GAA+B,cAAAmC,EAAAA,EAAAA,IAArBnE,EAAAA,SAAS6D,IAAE,M,OAEzBrE,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,M,kBADJ,IAA0B,mBAAxBtC,EAAAA,SAASgH,eAAa,M,yBAMpCxH,EAAAA,EAAAA,IA6FyB8L,EAAAA,EAAA,M,kBA5FrB,IA0FqB,EA1FrB9L,EAAAA,EAAAA,IA0FqBkL,EAAAA,EAAA,M,kBAxFjB,IAOoB,EAPpBlL,EAAAA,EAAAA,IAOoB4L,EAAAA,EAAA,M,kBANhB,IAE0B,EAF1B5L,EAAAA,EAAAA,IAE0B6L,EAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAmB,CAAnBR,K,OAEJ/B,EAAAA,EAAAA,IAE0B8L,EAAAA,EAAA,M,kBADtB,IAAyC,EAAzCtJ,EAAAA,EAAAA,GAAyC,IAAzC,GAAyCmC,EAAAA,EAAAA,IAAxBnE,EAAAA,SAAS4M,WAAS,M,eAIlB3G,OAAOwF,KAAKzL,EAAAA,UAAU0G,SAAQ,oBAA9B,WAAzBpH,EAAAA,EAAAA,IAuCoB8L,EAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAtChB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,EAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAc,CAAdJ,K,OAEJnC,EAAAA,EAAAA,IAkC0B8L,EAAAA,EAAA,M,kBAjCtB,IAgCU,EAhCV9L,EAAAA,EAAAA,IAgCUgN,EAAAA,EAAA,M,kBA/BN,IAeQ,EAfRxK,EAAAA,EAAAA,GAeQ,eAdJA,EAAAA,EAAAA,GAaK,WAZDH,EAGAe,EAG4BqD,OAAOwF,KAAKzL,EAAAA,UAAU0G,SAAQ,yBAA9B,WAA5B3F,EAAAA,EAAAA,IAEK,KAFL,EAAmF,cAAnF,eAG4BkF,OAAOwF,KAAKzL,EAAAA,UAAU0G,SAAQ,yBAA9B,WAA5B3F,EAAAA,EAAAA,IAEK,KAFL,EAAmF,SAAnF,oBAKRiB,EAAAA,EAAAA,GAcQ,6BAbJjB,EAAAA,EAAAA,IAWKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAXyBjB,EAAAA,SAAS6M,gBAAc,CAAzCC,EAAQ3L,M,WAApBJ,EAAAA,EAAAA,IAWK,MAXmDK,IAAKD,EAAQkC,OAAK,4BAAuByJ,EAAOC,WAAU,qBAAlH,EACQ/K,EAAAA,EAAAA,GAEK,YADDA,EAAAA,EAAAA,GAA0B,aAAAmC,EAAAA,EAAAA,IAAlB2I,EAAOjJ,IAAE,MAErB7B,EAAAA,EAAAA,GAAwB,WAAAmC,EAAAA,EAAAA,IAAlB2I,EAAOE,MAAI,GACP/G,OAAOwF,KAAKzL,EAAAA,UAAU0G,SAAQ,yBAA9B,WAAV3F,EAAAA,EAAAA,IAEK,KAAAkC,EAAA,EADDjB,EAAAA,EAAAA,GAAwD,aAAAmC,EAAAA,EAAAA,IAAhDnE,EAAAA,SAASiN,oBAAoBH,EAAOjJ,KAAE,OADlD,eAGUoC,OAAOwF,KAAKzL,EAAAA,UAAU0G,SAAQ,yBAA9B,WAAV3F,EAAAA,EAAAA,IAEK,KAAAmM,EAAA,EADDlL,EAAAA,EAAAA,GAAqJ,OAArJ,GAAqJmC,EAAAA,EAAAA,IAA1HgJ,KAAKC,MAAMpN,EAAAA,SAASiN,oBAAoBH,EAAOjJ,IAAM5B,EAAAA,wBAAwBjC,EAAAA,SAASiN,qBAAmB,aADxI,gBARR,iB,0BAvBhB,eAyCyBhH,OAAOwF,KAAKzL,EAAAA,UAAU0G,SAAQ,mBAA9B,WAAzBpH,EAAAA,EAAAA,IA0BoB8L,EAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAzBhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,EAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAgB,CAAhBqB,K,OAEJ5D,EAAAA,EAAAA,IAqByB8L,EAAAA,EAAA,M,kBApBrB,IAmBU,EAnBV9L,EAAAA,EAAAA,IAmBUgN,EAAAA,EAAA,M,kBAlBN,IASQ,CATRP,GAUAjK,EAAAA,EAAAA,GAOQ,6BALAjB,EAAAA,EAAAA,IAGKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAHsBgF,OAAOwF,KAAKzL,EAAAA,SAASqN,gBAAa,CAAjDjM,EAAKD,M,WAAjBJ,EAAAA,EAAAA,IAGK,MAH4DK,IAAKD,GAAK,EACvEa,EAAAA,EAAAA,GAAgB,WAAAmC,EAAAA,EAAAA,IAAV/C,GAAG,IACTY,EAAAA,EAAAA,GAAgE,WAAAmC,EAAAA,EAAAA,IAA1DuI,WAAW1M,EAAAA,SAASqN,cAAcjM,IAAMuL,QAAO,IAAK,IAAC,QAF/D,W,0BAlBpB,eA4B0BnI,EAAAA,WAA1B,iBAA0BA,EAAAA,EAAAA,OAA1BlF,EAAAA,EAAAA,IASoB8L,EAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBARhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,EAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAe,CAAfmK,K,OAEJ1M,EAAAA,EAAAA,IAI0B8L,EAAAA,EAAA,M,kBAHtB,IAEqB,EAFrB9L,EAAAA,EAAAA,IAEqBkL,EAAAA,EAAA,M,kBADjB,IAAwC,EAAxClL,EAAAA,EAAAA,IAAwC2W,EAAA,CAA1BtS,GAAI7D,EAAAA,SAAS4M,WAA3B,kB,sDApGxB,c,wBAkHA,GACIjN,KAAM,gBACNuF,MAAO,CACHrB,GAAI,CAACgE,KAAK,CAACiG,OAAQ3I,QAASqI,QAAS,GACrCiO,IAAK,CAAC5T,KAAM5B,OAAQuH,QAAS,MAC7BlB,UAAW,CAACzE,KAAM0F,QAASC,SAAS,IAExCC,WAAY,CACRkJ,aAAasJ,EAAAA,EAAAA,KAAqB,IAAM,0CAE5CrgB,OACI,MAAO,CACHE,QAAQ,EACR8W,SAAU,CAAC,EACXjN,cAAe,CACX,CACIS,KAAM,sBACNU,QAAS,cACToP,SAAU,GACVtQ,MAAO,MACPuQ,cAAe,gBACfC,kBAAmB,gBACnB/Y,MAAO,GACPiI,WAAY,gBACZhJ,MAAO,mCACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,GAEhB,CACIjQ,KAAM,gBACNU,QAAS,GACToP,SAAU,GACVtQ,MAAO,MACPuQ,cAAe,gBACfC,kBAAmB,WACnB/Y,MAAO,GACPiI,WAAY,gBACZhJ,MAAO,wCACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,GAEhB,CACI,GAAM,EACN,KAAQ,kBAER,WAAc5J,MAEd,WAAc,UAEd,cAAiB,qHAEjB,eAAoB,CACI,CACA,GAAM,IACN,UAAa,IACb,cAAiB,yBACjB,eAAkB,CACd,CACA,SAAY,GACZ,YAAc,EACd,KAAQ,kBACR,MAAS,EACT,GAAM,MAEN,CACA,SAAY,GACZ,YAAc,EACd,KAAQ,kBACR,MAAS,EACT,GAAM,MAEN,CACA,SAAY,GACZ,YAAc,EACd,KAAQ,kBACR,MAAS,EACT,GAAM,MAEN,CACA,SAAY,GACZ,YAAc,EACd,KAAQ,kBACR,MAAS,EACT,GAAM,SAWlC,SAAY,CAAC,EAEb,aAAgB,CAAC,MAAS,g9BAcV,UAAY,CAAC,GAI7B,mBAAsB,EAEtBkN,oBAAqB,SAAS/d,GAC1B,IAII,OAHAA,EAAKie,iBAAiBhQ,SAASjK,IAC3BA,EAAEwC,KAAOxC,EAAEwC,KAAKzC,KAAKC,GAAcA,EAAEC,IAArC,IAEGjE,EAAKie,gBAGhB,CAFE,MAAO9I,GACL,OAAOnV,EAAKie,gBAChB,CACJ,IAIf,EAEDlY,SAAU,CAAC,EAEXwC,QAAS,CACL+X,YAAa,WACTra,KAAK/F,QAAS,EAEd+F,KAAKsa,WAAU,KACXta,KAAK/F,QAAS,CAAd,GAEP,EACD6N,wBAAyB,SAASV,GAC9B,IAAIW,EAAQ,EAIZ,OAHA3H,OAAOC,OAAO+G,GAAqBY,SAASjK,IACxCgK,GAAgBE,OAAOlK,EAAvB,IAEGgK,CACV,EAGDiN,WAAY,SAASjb,GACjB,GAAsB,WAAnBA,EAAK0J,WACJ,OAAOwR,SAASlb,EAAKyB,MAAM,IACxB,GAAuB,iBAAnBzB,EAAK0J,WACZ,OAAO1J,EAAKyB,MAEZ,KAAM,4BAA8BzB,EAAK0J,UAEhD,EACD2V,cAAe,SAAStf,EAAMqc,GAC1B,MAAMoE,EAAeva,KAAK8D,cAAcmT,WAAWlZ,GAAcA,EAAEwG,MAAQzK,IAE3E,GAAmI,GAA/HsG,OAAOwF,KAAK5F,KAAK8D,cAAcyW,GAAc5V,UAAU7G,KAAIE,GAAMgC,KAAK8D,cAAcyW,GAAc5V,SAAS3G,GAAI+F,QAAOsT,MACtH,OAAO,EAEP,IAAI/b,EAAQ8E,OAAOwF,KAAK5F,KAAK8D,cAAcyW,GAAc5V,UAAU7G,KAAIE,GAAMgC,KAAK8D,cAAcyW,GAAc5V,SAAS3G,GAAI+F,QAAOuG,QAAQ6L,EAAepc,MACzJ,IAAc,GAAVuB,EACA,OAAO8E,OAAOwF,KAAK5F,KAAK8D,cAAcyW,GAAc5V,UAAUrJ,GAC3D,CACH0E,KAAK8D,cAAcyW,GAAcpB,oBAAsB,EACvD,MAAMnb,EAAKgC,KAAK8D,cAAcyW,GAAcpB,mBAO5C,OANAnZ,KAAK8D,cAAcyW,GAAc5V,SAAS3G,GAAM,CAC5C+F,MAAO,CAAC,EACRL,SAAS,EACT3J,KAAMiG,KAAK8D,cAAcyW,GAActB,gBAGpCjb,CACX,CAEP,EACDoY,oBAAqB,SAAStc,EAAMiK,GAChC,MAAMwW,EAAeva,KAAK8D,cAAcmT,WAAWlZ,GAAcA,EAAEwG,MAAQzK,IAErEoe,EAAM,gDACNxF,EAAU,CACZ,cAAiB,eACjB,eAAgB,oBAGdyF,EAAenY,KAAK8D,cAAcyW,GAAcpC,aAGtD,GADApU,EAAQA,GAAS,CAAC,GACbA,aAAiB3D,OAAQ,CAC1B,MAAMgY,EAAapY,KAAK8D,cAAcyW,GAAcnC,WAChDrU,aAAiBqU,IACbA,GAAcxN,QACd7G,EAAQ,CAACA,IAETqU,GAAcnQ,SACdlE,EAAQkE,OAAOlE,IAEfqU,GAAc9Y,SACdyE,EAAQA,EAAM4B,YAG1B,CACA,MAAM0S,EAAWrY,KAAK8D,cAAcyW,GAAcjC,WAGlD,OAFAH,EAAaI,UAAUF,GAAYtU,EAE5B,CACHmU,IAAKA,EACLM,OAAQ,OACRze,KAAMqb,KAAKE,UAAU6C,GACrBzF,QAASA,EAEhB,EACD2G,qBAAsBjG,eAAeiD,EAAQvc,EAAMkE,GAC/C,IAAIuc,EAAeva,KAAK8D,cAAcmT,WAAWlZ,GAAcA,EAAEwG,MAAQzK,IAEzEkG,KAAK8D,cAAcyW,GAAc5V,SAAS3G,GAAI0F,SAAU,EACxD1D,KAAK8D,cAAcyW,GAAc5V,SAAS3G,GAAI+F,MAAQsS,EAAOtc,KAC7DyO,QAAQC,IAAI,YAAa3O,EAAM,KAAM,WAAYsb,KAAKC,MAAMgB,EAAOtc,OAGnE,MAAMA,QAAa8U,IAAMwH,GAAQvH,MAAMnK,IACnC6D,QAAQC,IAAI,aAAc3O,EAAM,KAAM,eAAgBkE,EAAI,KAAM,UAAW2G,EAAS5K,KAAKA,MACzF,MAAMA,EAAOiG,KAAK8D,cAAcyW,GAAczC,oBAAoBnT,EAAS5K,KAAKA,MAIhF,OAHAiG,KAAK8D,cAAcyW,GAAc5V,SAAS3G,GAAIjE,KAAOA,EAErDiG,KAAK8D,cAAcyW,GAAc7W,SAAU,EACpC3J,CAAP,IAEJ,OAAOA,CACV,EAGD+c,WAAY1D,eAAetZ,EAAMiK,GAC7B,MAAMoS,EAAiBnW,KAAKoW,oBAAoBtc,EAAMiK,GAEhD/F,QAAWgC,KAAKoZ,cAActf,EAAMqc,GAEpCpc,QAAaiG,KAAKqZ,qBAAqBlD,EAAgBrc,EAAMkE,GAEnE,OAAOjE,CACV,EAGDwc,WAAY,SAASX,GACjB,IAAI2E,EAAeva,KAAK8D,cAAcwG,QAAQsL,GAE1CvB,EAAW,yCAA2CuB,EAAIrR,KAC1DiS,EAAc,CAAC,EAGnB,OAFAA,EAAYZ,EAAItB,eAAiBtU,KAAKgV,WAAW,CAAC,MAASY,EAAIpa,MAAO,WAAcoa,EAAInS,aACxF+E,QAAQC,IAAI,YAAY+N,EAAa,KAAK,OAAOnC,GAC1CxF,IAAAA,KAAWwF,EAAUmC,GAAa1H,MAAMnK,IAC3C6D,QAAQC,IAAI,iBAAmBmN,EAAIrR,KAAM,KAAM,kBAAmBI,EAAS5K,MAC3EiG,KAAK8D,cAAcyW,GAAc5V,SAAWA,EAAS5K,KAC9C4K,KAEVsK,OAAM,SAASC,GACyBkG,KAAKE,UAAUkB,EACvD,GACJ,EACDgE,qBAAsBpH,eAAeyD,GACjCA,EAAgBA,EAAc/Y,KAAKC,GAAckK,OAAOlK,KAGxD,MAAMuZ,QAAsBtX,KAAK8W,WAAW,kBAAmBD,GAAe/H,MAAMnK,IAChFA,EAASqD,SAASjK,IACdqC,OAAOwF,KAAK7H,GAAGiK,SAASzM,IACpByE,KAAK+Q,SAASxV,GAAOwC,EAAExC,EAAvB,GADJ,GADJ,IAQEyb,EAAyBhX,KAAK8D,cAAcmT,WAAWlZ,GAAwB,uBAAVA,EAAEwG,OAC7EvE,KAAK8D,cAAckT,GAAwBxb,MAAQqb,EAEnD,MAAMK,QAA6BlX,KAAKuW,WAAWvW,KAAK8D,cAAckT,IAAyBlI,MAAK,KAChG9O,KAAK8D,cAAckT,GAAwBrS,SAASqD,SAASjK,IAC5B,+BAAzBA,EAAEqJ,sBACFpH,KAAK+Q,SAAS3J,oBAAsBrJ,EAAEqJ,oBAC1C,GAHJ,IAQE+P,EAA0BnX,KAAK8D,cAAcmT,WAAWlZ,GAAwB,iBAAVA,EAAEwG,OAC9EvE,KAAK8D,cAAcqT,GAAyB3b,MAAQqb,EAEpD,MAAMO,QAA8BpX,KAAKuW,WAAWvW,KAAK8D,cAAcqT,IAA0BrI,MAAK,KAChC,GAA9D9O,KAAK8D,cAAcqT,GAAyBxS,SAAS0S,OACrDrX,KAAK8D,cAAcqT,GAAyBxS,SAASqD,SAASjK,IAC/CA,EAAEC,UACND,EAAEC,GACTgC,KAAK+Q,SAASvJ,cAAgBzJ,CAA9B,GAER,IAIJ,OAAOwZ,QAAQC,IAAI,CAACF,EAAeJ,EAAsBE,GAC7D,GAGJ1O,UACoB,MAAZ1I,KAAK4V,IACL5V,KAAKwa,qBAAqB,CAACxa,KAAKhC,KAAK8Q,MAAK,KAAK9O,KAAKqa,WAAL,IAE/Cra,KAAK+Q,SAAW/Q,KAAK4V,GAE5B,EACDxS,MAAO,CACHwS,IAAKvS,GACLrD,KAAK+Q,SAAW1N,CACf,EACDrF,KACIgC,KAAKwa,qBAAqB,CAACxa,KAAKhC,IACnC,I,QCpbT,MAAMhE,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O,2KCc4BkC,EAAAA,EAAAA,GAAmB,SAAhB,gBAAY,G,GAGZD,MAAM,O,GAMTC,EAAAA,EAAAA,GAAgB,SAAb,aAAS,G,GAGTD,MAAM,O,GAMTC,EAAAA,EAAAA,GAAY,SAAT,SAAK,G,aAkBRA,EAAAA,EAAAA,GAAY,SAAT,SAAK,G,uBAQAA,EAAAA,EAAAA,GAA4C,QAAtCD,MAAM,aAAY,iBAAa,G,GAG/BA,MAAM,a,aAMZC,EAAAA,EAAAA,GAA2C,QAArCD,MAAM,aAAY,gBAAY,G,GAG9BA,MAAM,a,GASpBC,EAAAA,EAAAA,GAAa,SAAV,UAAM,G,GAaTA,EAAAA,EAAAA,GAAgB,SAAb,aAAS,G,GAIRA,EAAAA,EAAAA,GASQ,eARJA,EAAAA,EAAAA,GAOK,YANDA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAW,SAAR,WAEPA,EAAAA,EAAAA,GAEK,MAFDD,MAAM,aAAW,EACjBC,EAAAA,EAAAA,GAAW,SAAR,cANf,G,4EAtGhC1C,EAAAA,EAAAA,IAgIoB8L,EAAAA,EAAA,CAhID/H,MAAA,gBAAmB,C,kBAClC,IAW0B,EAX1B7D,EAAAA,EAAAA,IAW0B6L,EAAAA,EAAA,M,kBAVtB,IAQQ,EARR7L,EAAAA,EAAAA,IAQQ6C,EAAAA,EAAA,M,kBAPJ,IAEQ,EAFR7C,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,IAAIR,MAAM,wBAAtB,C,kBACI,IAAkC,EAAlCC,EAAAA,EAAAA,GAAkC,cAAAmC,EAAAA,EAAAA,IAAxBnE,EAAAA,YAAY6D,IAAE,M,OAE5BrE,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,M,kBADJ,IAAqB,mBAAnBtC,EAAAA,YAAYwD,OAAK,M,yBAM/BhE,EAAAA,EAAAA,IAkHyB8L,EAAAA,EAAA,M,kBAjHrB,IA+GU,EA/GVtJ,EAAAA,EAAAA,GA+GU,aA7GFxC,EAAAA,EAAAA,IA2GqBkL,EAAAA,EAAA,M,kBAzGjB,IAOoB,EAPpBlL,EAAAA,EAAAA,IAOoB4L,EAAAA,EAAA,M,kBANhB,IAE0B,EAF1B5L,EAAAA,EAAAA,IAE0B6L,EAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAmB,CAAnBR,K,OAEJ/B,EAAAA,EAAAA,IAEyB8L,EAAAA,EAAA,M,kBADrB,IAA+C,EAA/CtJ,EAAAA,EAAAA,GAA+C,IAA/C,GAA+CmC,EAAAA,EAAAA,IAA7BnE,EAAAA,YAAYuL,aAAW,M,gBAIjD/L,EAAAA,EAAAA,IAOoB4L,EAAAA,EAAA,M,kBANhB,IAE0B,EAF1B5L,EAAAA,EAAAA,IAE0B6L,EAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAgB,CAAhBJ,K,OAEJnC,EAAAA,EAAAA,IAEyB8L,EAAAA,EAAA,M,kBADrB,IAAmD,EAAnDtJ,EAAAA,EAAAA,GAAmD,IAAnD,GAAmDmC,EAAAA,EAAAA,IAAjCnE,EAAAA,YAAYoG,KAAKoF,YAAQ,M,eAI1BvF,OAAOwF,KAAKzL,EAAAA,aAAa0G,SAAQ,gBAAjC,WAAzBpH,EAAAA,EAAAA,IAgBoB8L,EAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAfhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,EAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAY,CAAZa,K,OAEJpD,EAAAA,EAAAA,IAWyB8L,EAAAA,EAAA,M,kBAVrB,IASiC,EATjCtJ,EAAAA,EAAAA,GASiC,UATxB0J,IAAG,iCAAqC1L,EAAAA,YAAY2L,WACrDC,MAAM,0QAKNvI,MAAA,iCACA0H,MAAM,OAENc,gBAAA,IATR,a,iBALR,gBAkBArM,EAAAA,EAAAA,IA2BqB4L,EAAAA,EAAA,M,kBA1BjB,IAE0B,EAF1B5L,EAAAA,EAAAA,IAE0B6L,EAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAY,CAAZgB,K,OAEJvD,EAAAA,EAAAA,IAsByB8L,EAAAA,EAAA,M,kBArBrB,IAEM,CAFKrF,OAAOwF,KAAKzL,EAAAA,aAAa0G,SAAQ,mBAAjC,WAAX3F,EAAAA,EAAAA,IAEM,MAAAkC,EAAA,EADFjB,EAAAA,EAAAA,GAAqE,OAA/D0J,IAAK1L,EAAAA,YAAY8L,cAAeC,IAAI,eAAehB,MAAM,OAA/D,cADJ,eAGc9E,OAAOwF,KAAKzL,EAAAA,aAAa0G,SAAQ,iBAAjC,WAAdpH,EAAAA,EAAAA,IAOQ+C,EAAAA,EAAA,CAAAjB,IAAAA,GAAA,C,kBANJ,IAEQ,EAFR5B,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,KAAG,C,kBACX,IAA4C,CAA5CY,K,OAEJ3D,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,MAAI,C,kBACZ,IAA0D,EAA1DP,EAAAA,EAAAA,GAA0D,OAA1D,GAA0DmC,EAAAA,EAAAA,IAAhCnE,EAAAA,YAAYgM,aAAW,M,iBALzD,eAQW/F,OAAOwF,KAAKzL,EAAAA,aAAa0G,SAAQ,gBAAmBT,OAAOwF,KAAKzL,EAAAA,aAAa0G,SAAQ,gBAAjC,WAA/D3F,EAAAA,EAAAA,IAAgH,KAAAkL,KAAhH,eACahG,OAAOwF,KAAKzL,EAAAA,aAAa0G,SAAQ,gBAAjC,WAAbpH,EAAAA,EAAAA,IAOQ+C,EAAAA,EAAA,CAAAjB,IAAAA,GAAA,C,kBANJ,IAEQ,EAFR5B,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,KAAG,C,kBACX,IAA2C,CAA3C2J,K,OAEJ1M,EAAAA,EAAAA,IAEQ8C,EAAAA,EAAA,CAFDC,KAAK,MAAI,C,kBACZ,IAAyD,EAAzDP,EAAAA,EAAAA,GAAyD,OAAzD,GAAyDmC,EAAAA,EAAAA,IAA/BnE,EAAAA,YAAYmM,YAAU,M,iBALxD,kB,eAYiBnM,EAAAA,mBAAAA,EAAAA,EAAAA,OAAzBV,EAAAA,EAAAA,IAWoB8L,EAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAVhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,EAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAa,CAAbqK,K,OAEJ5M,EAAAA,EAAAA,IAMyB8L,EAAAA,EAAA,M,kBALrB,IAIqB,EAJrB9L,EAAAA,EAAAA,IAIqBkL,EAAAA,EAAA,M,kBAHZ,IAAgC,gBAArC3J,EAAAA,EAAAA,IAEMC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAFsBjB,EAAAA,UAAQ,CAAvBqM,EAAKlL,M,WAAlBJ,EAAAA,EAAAA,IAEM,OAFiCK,IAAKD,GAAK,EAC7C3B,EAAAA,EAAAA,IAA8CgX,EAAA,CAA9BiF,IAAKpP,EAAMC,WAAW,GAAtC,qBADJ,S,0BANZ,eAayBrG,OAAOwF,KAAKzL,EAAAA,aAAa0G,SAAQ,UAAjC,WAAzBpH,EAAAA,EAAAA,IA0BoB8L,EAAAA,EAAA,CAAAhK,IAAAA,GAAA,C,kBAzBhB,IAE0B,EAF1B5B,EAAAA,EAAAA,IAE0B6L,EAAAA,EAAA,CAFDtJ,MAAM,QAAM,C,kBACjC,IAAgB,CAAhBwK,K,OAEJ/M,EAAAA,EAAAA,IAqByB8L,EAAAA,EAAA,M,kBApBrB,IAmBU,EAnBV9L,EAAAA,EAAAA,IAmBUgN,EAAAA,EAAA,M,kBAlBN,IASQ,CATRC,GAUAzK,EAAAA,EAAAA,GAOQ,6BALAjB,EAAAA,EAAAA,IAGKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAHsBgF,OAAOwF,KAAKxJ,EAAAA,YAAS,CAApCb,EAAKD,M,WAAjBJ,EAAAA,EAAAA,IAGK,MAH+CK,IAAKD,GAAK,EAC1Da,EAAAA,EAAAA,GAAgB,WAAAmC,EAAAA,EAAAA,IAAV/C,GAAG,IACTY,EAAAA,EAAAA,GAAmD,WAAAmC,EAAAA,EAAAA,IAA7CuI,WAAWzK,EAAAA,UAAUb,IAAMuL,QAAO,IAAK,IAAC,QAFlD,W,0BAlBpB,kB,iDAuCpB,GACIhN,KAAM,cACN8N,WAAY,CACRgJ,eAAewJ,EAAAA,EAAAA,KAAqB,IAAM,0CAE9C/a,MAAO,CACHrB,GAAI,CAACiK,OAAQ3I,SAEjBvF,OACI,MAAO,CACH0gB,kBAAkB,EAClB1J,SAAU,GACVF,YAAa,CAAC,EACd/M,cAAe,CACX,CACIS,KAAM,sBACNU,QAAS,cACToP,SAAU,GACVtQ,MAAO,MACPuQ,cAAe,gBACfC,kBAAmB,gBACnB/Y,MAAO,GACPiI,WAAY,gBACZhJ,MAAO,mCACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,GAEhB,CACIjQ,KAAM,gBACNU,QAAS,GACToP,SAAU,GACVtQ,MAAO,MACPuQ,cAAe,gBACfC,kBAAmB,WACnB/Y,MAAO,GACPiI,WAAY,gBACZhJ,MAAO,wCACPkK,SAAU,GACVhB,SAAS,EACTiB,SAAU,GACVZ,OAAO,EACPwQ,YAAY,GAEhB,CACI,GAAM,EACN,KAAQ,kBAER,WAAc5J,MAEd,WAAc,UAEd,cAAiB,qHAEjB,eAAoB,CACI,CACA,GAAM,IACN,UAAa,IACb,cAAiB,yBACjB,eAAkB,CACd,CACA,SAAY,GACZ,YAAc,EACd,KAAQ,kBACR,MAAS,EACT,GAAM,MAEN,CACA,SAAY,GACZ,YAAc,EACd,KAAQ,kBACR,MAAS,EACT,GAAM,MAEN,CACA,SAAY,GACZ,YAAc,EACd,KAAQ,kBACR,MAAS,EACT,GAAM,MAEN,CACA,SAAY,GACZ,YAAc,EACd,KAAQ,kBACR,MAAS,EACT,GAAM,SAWlC,SAAY,CAAC,EAEb,aAAgB,CAAC,MAAS,g9BAcV,UAAY,CAAC,GAI7B,mBAAsB,EAEtBkN,oBAAqB,SAAS/d,GAC1B,IAII,OAHAA,EAAKie,iBAAiBhQ,SAASjK,IAC3BA,EAAEwC,KAAOxC,EAAEwC,KAAKzC,KAAKC,GAAcA,EAAEC,IAArC,IAEGjE,EAAKie,gBAGhB,CAFE,MAAO9I,GACL,OAAOnV,EAAKie,gBAChB,CACJ,GAEJ,CACI,GAAM,EACN,KAAQ,qBAER,WAAcpN,MAEd,WAAc,UAEd,cAAiB,4GAEjB,eAAoB,CACI,CACA,GAAM,IACN,MAAS,kBACT,YAAe,iBACf,cAAiB,GACjB,KAAQ,CAAC,KACT,WAAc,cACd,WAAc,gBACd,YAAe,mBASvC,SAAY,CAAC,EAEb,aAAgB,CAAC,MAAS,w2BAcV,UAAY,CAAC,GAI7B,mBAAsB,EAEtBkN,oBAAqB,SAAS/d,GAC1B,IAII,OAHAA,EAAKge,oBAAoB/P,SAASjK,IAC9BA,EAAEwC,KAAOxC,EAAEwC,KAAKzC,KAAKC,GAAcA,EAAEC,IAArC,IAEGjE,EAAKge,mBAGhB,CAFE,MAAO7I,GACL,OAAOnV,EAAKge,mBAChB,CACJ,IAIf,EACDjY,SAAU,CACNwI,YACI,IAAIA,EAAY,CAAC,EAcjB,OAbAtI,KAAK+Q,SAAS/I,SAASjK,IACfqC,OAAOwF,KAAK7H,GAAG8C,SAAS,mBACxB2H,QAAQC,IAAI,iBACZrI,OAAOwF,KAAK7H,EAAEyJ,eAAeQ,SAASO,IACjCnI,OAAOwF,KAAK0C,GAAWzH,SAAS0H,KACjCD,EAAUC,GAAY,GAG1BD,EAAUC,GAAYD,EAAUC,GAAYjB,KAAKC,MAAMxJ,EAAEyJ,cAAce,GAAvE,IAEJ,IAGGD,CACV,GAILhG,QAAS,CACLoY,oBAAqBtH,iBACjBpT,KAAKya,kBAAmB,EACxBza,KAAKsa,UAAUxL,MAAK,KAChBtG,QAAQC,IAAI,uBAEZzI,KAAKya,kBAAmB,CAAxB,GAEP,EAGDrB,cAAe,SAAStf,EAAMqc,GAC1B,MAAMoE,EAAeva,KAAK8D,cAAcmT,WAAWlZ,GAAcA,EAAEwG,MAAQzK,IAE3E,GAAmI,GAA/HsG,OAAOwF,KAAK5F,KAAK8D,cAAcyW,GAAc5V,UAAU7G,KAAIE,GAAMgC,KAAK8D,cAAcyW,GAAc5V,SAAS3G,GAAI+F,QAAOsT,MACtH,OAAO,EAEP,IAAI/b,EAAQ8E,OAAOwF,KAAK5F,KAAK8D,cAAcyW,GAAc5V,UAAU7G,KAAIE,GAAMgC,KAAK8D,cAAcyW,GAAc5V,SAAS3G,GAAI+F,QAAOuG,QAAQ6L,EAAepc,MACzJ,IAAc,GAAVuB,EACA,OAAO8E,OAAOwF,KAAK5F,KAAK8D,cAAcyW,GAAc5V,UAAUrJ,GAC3D,CACH0E,KAAK8D,cAAcyW,GAAcpB,oBAAsB,EACvD,MAAMnb,EAAKgC,KAAK8D,cAAcyW,GAAcpB,mBAO5C,OANAnZ,KAAK8D,cAAcyW,GAAc5V,SAAS3G,GAAM,CAC5C+F,MAAO,CAAC,EACRL,SAAS,EACT3J,KAAMiG,KAAK8D,cAAcyW,GAActB,gBAGpCjb,CACX,CAEP,EACDoY,oBAAqB,SAAStc,EAAMiK,GAChC,MAAMwW,EAAeva,KAAK8D,cAAcmT,WAAWlZ,GAAcA,EAAEwG,MAAQzK,IAErEoe,EAAM,gDACNxF,EAAU,CACZ,cAAiB,eACjB,eAAgB,oBAGdyF,EAAenY,KAAK8D,cAAcyW,GAAcpC,aAGtD,GADApU,EAAQA,GAAS,CAAC,GACbA,aAAiB3D,OAAQ,CAC1B,MAAMgY,EAAapY,KAAK8D,cAAcyW,GAAcnC,WAChDrU,aAAiBqU,IACbA,GAAcxN,QACd7G,EAAQ,CAACA,IAETqU,GAAcnQ,SACdlE,EAAQkE,OAAOlE,IAEfqU,GAAc9Y,SACdyE,EAAQA,EAAM4B,YAG1B,CACA,MAAM0S,EAAWrY,KAAK8D,cAAcyW,GAAcjC,WAGlD,OAFAH,EAAaI,UAAUF,GAAYtU,EAE5B,CACHmU,IAAKA,EACLM,OAAQ,OACRze,KAAMqb,KAAKE,UAAU6C,GACrBzF,QAASA,EAEhB,EACD2G,qBAAsBjG,eAAeiD,EAAQvc,EAAMkE,GAC/C,IAAIuc,EAAeva,KAAK8D,cAAcmT,WAAWlZ,GAAcA,EAAEwG,MAAQzK,IAEzEkG,KAAK8D,cAAcyW,GAAc5V,SAAS3G,GAAI0F,SAAU,EACxD1D,KAAK8D,cAAcyW,GAAc5V,SAAS3G,GAAI+F,MAAQsS,EAAOtc,KAC7DyO,QAAQC,IAAI,YAAa3O,EAAM,KAAM,WAAYsb,KAAKC,MAAMgB,EAAOtc,OAGnE,MAAMA,QAAa8U,IAAMwH,GAAQvH,MAAMnK,IACnC6D,QAAQC,IAAI,aAAc3O,EAAM,KAAM,eAAgBkE,EAAI,KAAM,UAAW2G,EAAS5K,KAAKA,MACzF,MAAMA,EAAOiG,KAAK8D,cAAcyW,GAAczC,oBAAoBnT,EAAS5K,KAAKA,MAIhF,OAHAiG,KAAK8D,cAAcyW,GAAc5V,SAAS3G,GAAIjE,KAAOA,EAErDiG,KAAK8D,cAAcyW,GAAc7W,SAAU,EACpC3J,CAAP,IAEJ,OAAOA,CACV,EAGD+c,WAAY1D,eAAetZ,EAAMiK,GAC7B,MAAMoS,EAAiBnW,KAAKoW,oBAAoBtc,EAAMiK,GAEhD/F,QAAWgC,KAAKoZ,cAActf,EAAMqc,GAEpCpc,QAAaiG,KAAKqZ,qBAAqBlD,EAAgBrc,EAAMkE,GAEnE,OAAOjE,CACV,EACDib,WAAY,SAASjb,GACjB,GAAsB,WAAnBA,EAAK0J,WACJ,OAAOwR,SAASlb,EAAKyB,MAAM,IACxB,GAAuB,iBAAnBzB,EAAK0J,WACZ,OAAO1J,EAAKyB,MAEZ,KAAM,4BAA8BzB,EAAK0J,UAEhD,EAGD8S,WAAY,SAASX,GACjB,IAAI2E,EAAeva,KAAK8D,cAAcwG,QAAQsL,GAE1CvB,EAAW,yCAA2CuB,EAAIrR,KAC1DiS,EAAc,CAAC,EAGnB,OAFAA,EAAYZ,EAAItB,eAAiBtU,KAAKgV,WAAW,CAAC,MAASY,EAAIpa,MAAO,WAAcoa,EAAInS,aACxF+E,QAAQC,IAAI,YAAY+N,EAAa,KAAK,OAAOnC,GAC1CxF,IAAAA,KAAWwF,EAAUmC,GAAa1H,MAAMnK,IAC3C6D,QAAQC,IAAI,iBAAmBmN,EAAIrR,KAAM,KAAM,kBAAmBI,EAAS5K,MAC3EiG,KAAK8D,cAAcyW,GAAc5V,SAAWA,EAAS5K,KAC9C4K,KAEVsK,OAAM,SAASC,GACyBkG,KAAKE,UAAUkB,EACvD,GACJ,EACDgE,qBAAsBpH,eAAeyD,GACjCA,EAAgBA,EAAc/Y,KAAKC,GAAckK,OAAOlK,WAG5BiC,KAAK8W,WAAW,kBAAmBD,GAAe/H,MAAMnK,IAChFA,EAASqD,SAASjK,IACTiC,KAAK+Q,SAASjT,KAAK8a,GAAcA,EAAE5a,KAAK6C,SAAS9C,EAAEC,KACpDgC,KAAK+Q,SAAS3F,KAAKrN,GAEvB,MAAMzC,EAAQ0E,KAAK+Q,SAASkG,WAAW0D,GAAcA,EAAE3c,IAAMD,EAAEC,KAC/DoC,OAAOwF,KAAK7H,GAAGiK,SAASzM,IACpByE,KAAK+Q,SAASzV,GAAOC,GAAOwC,EAAExC,EAA9B,GADJ,GALJ,IADJ,MAaMyb,EAA0BhX,KAAK8D,cAAcmT,WAAWlZ,GAAwB,uBAAVA,EAAEwG,OAC9EvE,KAAK8D,cAAckT,GAAwBxb,MAAQqb,QAEhB7W,KAAKuW,WAAWvW,KAAK8D,cAAckT,IAAyBlI,MAAK,KAChG9O,KAAK8D,cAAckT,GAAwBrS,SAASqD,SAASjK,IACzD,GAA6B,+BAAzBA,EAAEqJ,oBAAqD,CACvD,MAAM9L,EAAQ0E,KAAK+Q,SAASkG,WAAW0D,GAAcA,EAAE3c,IAAMD,EAAEsO,cAE/DrM,KAAK+Q,SAASzV,GAAO8L,oBAAsBrJ,EAAEqJ,mBACjD,IALJ,IADJ,MAWM+P,EAA0BnX,KAAK8D,cAAcmT,WAAWlZ,GAAwB,iBAAVA,EAAEwG,OAC9EvE,KAAK8D,cAAcqT,GAAyB3b,MAAQqb,QAEhB7W,KAAKuW,WAAWvW,KAAK8D,cAAcqT,IAA0BrI,MAAK,KAChC,GAA9D9O,KAAK8D,cAAcqT,GAAyBxS,SAAS0S,OACrDrX,KAAK8D,cAAcqT,GAAyBxS,SAASqD,SAASjK,IAC/CA,EAAEC,UACND,EAAEC,GACT,MAAM1C,EAAQ0E,KAAK+Q,SAASkG,WAAU,CAAC0D,EAAGrf,IACnC8E,OAAOwF,KAAK7H,GAAG8C,SAAS,MAChB8Z,EAAE3c,IAAMD,EAAEC,GAEV2c,EAAE3c,IAAMgC,KAAK8D,cAAcqT,GAAyB3b,MAAMF,MAE3D,GAAVA,IACA0E,KAAK+Q,SAASzV,GAAOkM,cAAgBzJ,EACzC,GAER,GAGP,EAGD0Z,uBAAwBrE,eAAeyD,GACnCA,EAAgBA,EAAc/Y,KAAKC,GAAckK,OAAOlK,WAG5BiC,KAAK8W,WAAW,qBAAsBD,GAAe/H,MAAMnK,IACnFA,EAASqD,SAASjK,IACdiC,KAAK6Q,YAAc9S,CAAnB,GADJ,GAIP,GAGL2K,UACI1I,KAAKyX,uBAAuB,CAACzX,KAAKhC,KAAK8Q,MAAK,KACxC9O,KAAKwa,qBAAqBxa,KAAK6Q,YAAYtQ,MAAMuO,MAAK,KAAK9O,KAAKya,kBAAmB,CAAxB,GAA3D,GAGP,EACDrX,MAAM,CACFpF,GAAIqF,GACAmF,QAAQC,IAAI,aAAcpF,GAC1BrD,KAAKya,kBAAmB,EACxBza,KAAKyX,uBAAuB,CAACzX,KAAKhC,KAAK8Q,MAAK,KACxC9O,KAAK+Q,SAAW,GAChB/Q,KAAKwa,qBAAqBxa,KAAK6Q,YAAYtQ,MAAMuO,MAAK,KAAK9O,KAAKya,kBAAmB,CAAxB,GAA3D,GAER,I,QC1iBR,MAAMzgB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O,GCNI2gB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,E,WCzBxB,IAAIE,EAAW,GACfR,EAAoBS,EAAI,SAASvJ,EAAQwJ,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAAShB,EAAI,EAAGA,EAAIU,EAASzc,OAAQ+b,IAAK,CACrCY,EAAWF,EAASV,GAAG,GACvBa,EAAKH,EAASV,GAAG,GACjBc,EAAWJ,EAASV,GAAG,GAE3B,IAJA,IAGIiB,GAAY,EACPhD,EAAI,EAAGA,EAAI2C,EAAS3c,OAAQga,MACpB,EAAX6C,GAAsBC,GAAgBD,IAAarb,OAAOwF,KAAKiV,EAAoBS,GAAG7Z,OAAM,SAASlG,GAAO,OAAOsf,EAAoBS,EAAE/f,GAAKggB,EAAS3C,GAAK,IAChK2C,EAASpJ,OAAOyG,IAAK,IAErBgD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbP,EAASlJ,OAAOwI,IAAK,GACrB,IAAIkB,EAAIL,SACER,IAANa,IAAiB9J,EAAS8J,EAC/B,CACD,CACA,OAAO9J,CArBP,CAJC0J,EAAWA,GAAY,EACvB,IAAI,IAAId,EAAIU,EAASzc,OAAQ+b,EAAI,GAAKU,EAASV,EAAI,GAAG,GAAKc,EAAUd,IAAKU,EAASV,GAAKU,EAASV,EAAI,GACrGU,EAASV,GAAK,CAACY,EAAUC,EAAIC,EAwB/B,C,eC5BAZ,EAAoBiB,EAAI,SAASZ,GAChC,IAAIa,EAASb,GAAUA,EAAOc,WAC7B,WAAa,OAAOd,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAL,EAAoBoB,EAAEF,EAAQ,CAAE/a,EAAG+a,IAC5BA,CACR,C,eCPA,IACIG,EADAC,EAAW/b,OAAOgc,eAAiB,SAASxG,GAAO,OAAOxV,OAAOgc,eAAexG,EAAM,EAAI,SAASA,GAAO,OAAOA,EAAIyG,SAAW,EAQpIxB,EAAoByB,EAAI,SAAS9gB,EAAO+gB,GAEvC,GADU,EAAPA,IAAU/gB,EAAQwE,KAAKxE,IAChB,EAAP+gB,EAAU,OAAO/gB,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAP+gB,GAAa/gB,EAAMwgB,WAAY,OAAOxgB,EAC1C,GAAW,GAAP+gB,GAAoC,oBAAf/gB,EAAMsT,KAAqB,OAAOtT,CAC5D,CACA,IAAIghB,EAAKpc,OAAOoL,OAAO,MACvBqP,EAAoBgB,EAAEW,GACtB,IAAIC,EAAM,CAAC,EACXP,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAIO,EAAiB,EAAPH,GAAY/gB,EAAyB,iBAAXkhB,KAAyBR,EAAe5R,QAAQoS,GAAUA,EAAUP,EAASO,GACxHtc,OAAOuc,oBAAoBD,GAAS1U,SAAQ,SAASzM,GAAOkhB,EAAIlhB,GAAO,WAAa,OAAOC,EAAMD,EAAM,CAAG,IAI3G,OAFAkhB,EAAI,WAAa,WAAa,OAAOjhB,CAAO,EAC5Cqf,EAAoBoB,EAAEO,EAAIC,GACnBD,CACR,C,eCxBA3B,EAAoBoB,EAAI,SAAShB,EAAS2B,GACzC,IAAI,IAAIrhB,KAAOqhB,EACX/B,EAAoBgC,EAAED,EAAYrhB,KAASsf,EAAoBgC,EAAE5B,EAAS1f,IAC5E6E,OAAO0c,eAAe7B,EAAS1f,EAAK,CAAEwhB,YAAY,EAAMvb,IAAKob,EAAWrhB,IAG3E,C,eCPAsf,EAAoBmC,EAAI,CAAC,EAGzBnC,EAAoB9c,EAAI,SAASkf,GAChC,OAAO1F,QAAQC,IAAIpX,OAAOwF,KAAKiV,EAAoBmC,GAAGE,QAAO,SAASC,EAAU5hB,GAE/E,OADAsf,EAAoBmC,EAAEzhB,GAAK0hB,EAASE,GAC7BA,CACR,GAAG,IACJ,C,eCPAtC,EAAoBuC,EAAI,SAASH,GAEhC,MAAO,8BACR,C,eCHApC,EAAoBwC,SAAW,SAASJ,GAGxC,C,eCJApC,EAAoByC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOvd,MAAQ,IAAIwd,SAAS,cAAb,EAGhB,CAFE,MAAOzf,GACR,GAAsB,kBAAX0f,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxB5C,EAAoBgC,EAAI,SAASjH,EAAK8H,GAAQ,OAAOtd,OAAO+K,UAAUyL,eAAe+G,KAAK/H,EAAK8H,EAAO,C,eCAtG,IAAIE,EAAa,CAAC,EACdC,EAAoB,2BAExBhD,EAAoBiD,EAAI,SAAS5F,EAAK6F,EAAMxiB,EAAK0hB,GAChD,GAAGW,EAAW1F,GAAQ0F,EAAW1F,GAAK9M,KAAK2S,OAA3C,CACA,IAAIC,EAAQC,EACZ,QAAWjD,IAARzf,EAEF,IADA,IAAI2iB,EAAUhV,SAASiV,qBAAqB,UACpCxD,EAAI,EAAGA,EAAIuD,EAAQtf,OAAQ+b,IAAK,CACvC,IAAIyD,EAAIF,EAAQvD,GAChB,GAAGyD,EAAEC,aAAa,QAAUnG,GAAOkG,EAAEC,aAAa,iBAAmBR,EAAoBtiB,EAAK,CAAEyiB,EAASI,EAAG,KAAO,CACpH,CAEGJ,IACHC,GAAa,EACbD,EAAS9U,SAASC,cAAc,UAEhC6U,EAAOM,QAAU,QACjBN,EAAOO,QAAU,IACb1D,EAAoB2D,IACvBR,EAAO5U,aAAa,QAASyR,EAAoB2D,IAElDR,EAAO5U,aAAa,eAAgByU,EAAoBtiB,GACxDyiB,EAAOnY,IAAMqS,GAEd0F,EAAW1F,GAAO,CAAC6F,GACnB,IAAIU,EAAmB,SAASC,EAAMlN,GAErCwM,EAAOW,QAAUX,EAAOlM,OAAS,KACjC8M,aAAaL,GACb,IAAIM,EAAUjB,EAAW1F,GAIzB,UAHO0F,EAAW1F,GAClB8F,EAAOc,YAAcd,EAAOc,WAAW/U,YAAYiU,GACnDa,GAAWA,EAAQ7W,SAAQ,SAASwT,GAAM,OAAOA,EAAGhK,EAAQ,IACzDkN,EAAM,OAAOA,EAAKlN,EACtB,EAEI+M,EAAUQ,WAAWN,EAAiBO,KAAK,UAAMhE,EAAW,CAAEhZ,KAAM,UAAWe,OAAQib,IAAW,MACtGA,EAAOW,QAAUF,EAAiBO,KAAK,KAAMhB,EAAOW,SACpDX,EAAOlM,OAAS2M,EAAiBO,KAAK,KAAMhB,EAAOlM,QACnDmM,GAAc/U,SAAS+V,KAAKzV,YAAYwU,EApCkB,CAqC3D,C,eCxCAnD,EAAoBgB,EAAI,SAASZ,GACX,qBAAXiE,QAA0BA,OAAOC,aAC1C/e,OAAO0c,eAAe7B,EAASiE,OAAOC,YAAa,CAAE3jB,MAAO,WAE7D4E,OAAO0c,eAAe7B,EAAS,aAAc,CAAEzf,OAAO,GACvD,C,eCNAqf,EAAoBuE,EAAI,G,eCKxB,IAAIC,EAAkB,CACrB,IAAK,GAGNxE,EAAoBmC,EAAEpE,EAAI,SAASqE,EAASE,GAE1C,IAAImC,EAAqBzE,EAAoBgC,EAAEwC,EAAiBpC,GAAWoC,EAAgBpC,QAAWjC,EACtG,GAA0B,IAAvBsE,EAGF,GAAGA,EACFnC,EAAS/R,KAAKkU,EAAmB,QAC3B,CAGL,IAAIC,EAAU,IAAIhI,SAAQ,SAASiI,EAASC,GAAUH,EAAqBD,EAAgBpC,GAAW,CAACuC,EAASC,EAAS,IACzHtC,EAAS/R,KAAKkU,EAAmB,GAAKC,GAGtC,IAAIrH,EAAM2C,EAAoBuE,EAAIvE,EAAoBuC,EAAEH,GAEpD/N,EAAQ,IAAIwQ,MACZC,EAAe,SAASnO,GAC3B,GAAGqJ,EAAoBgC,EAAEwC,EAAiBpC,KACzCqC,EAAqBD,EAAgBpC,GACX,IAAvBqC,IAA0BD,EAAgBpC,QAAWjC,GACrDsE,GAAoB,CACtB,IAAIM,EAAYpO,IAAyB,SAAfA,EAAMxP,KAAkB,UAAYwP,EAAMxP,MAChE6d,EAAUrO,GAASA,EAAMzO,QAAUyO,EAAMzO,OAAO8C,IACpDqJ,EAAM4Q,QAAU,iBAAmB7C,EAAU,cAAgB2C,EAAY,KAAOC,EAAU,IAC1F3Q,EAAMpV,KAAO,iBACboV,EAAMlN,KAAO4d,EACb1Q,EAAM6Q,QAAUF,EAChBP,EAAmB,GAAGpQ,EACvB,CAEF,EACA2L,EAAoBiD,EAAE5F,EAAKyH,EAAc,SAAW1C,EAASA,EAE/D,CAEH,EAUApC,EAAoBS,EAAE1C,EAAI,SAASqE,GAAW,OAAoC,IAA7BoC,EAAgBpC,EAAgB,EAGrF,IAAI+C,EAAuB,SAASC,EAA4BlmB,GAC/D,IAKI+gB,EAAUmC,EALV1B,EAAWxhB,EAAK,GAChBmmB,EAAcnmB,EAAK,GACnBomB,EAAUpmB,EAAK,GAGI4gB,EAAI,EAC3B,GAAGY,EAAS7a,MAAK,SAAS1C,GAAM,OAA+B,IAAxBqhB,EAAgBrhB,EAAW,IAAI,CACrE,IAAI8c,KAAYoF,EACZrF,EAAoBgC,EAAEqD,EAAapF,KACrCD,EAAoBO,EAAEN,GAAYoF,EAAYpF,IAGhD,GAAGqF,EAAS,IAAIpO,EAASoO,EAAQtF,EAClC,CAEA,IADGoF,GAA4BA,EAA2BlmB,GACrD4gB,EAAIY,EAAS3c,OAAQ+b,IACzBsC,EAAU1B,EAASZ,GAChBE,EAAoBgC,EAAEwC,EAAiBpC,IAAYoC,EAAgBpC,IACrEoC,EAAgBpC,GAAS,KAE1BoC,EAAgBpC,GAAW,EAE5B,OAAOpC,EAAoBS,EAAEvJ,EAC9B,EAEIqO,EAAqBC,KAAK,uCAAyCA,KAAK,wCAA0C,GACtHD,EAAmBpY,QAAQgY,EAAqBhB,KAAK,KAAM,IAC3DoB,EAAmBhV,KAAO4U,EAAqBhB,KAAK,KAAMoB,EAAmBhV,KAAK4T,KAAKoB,G,ICpFvF,IAAIE,EAAsBzF,EAAoBS,OAAEN,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,KAAO,IACjHyF,EAAsBzF,EAAoBS,EAAEgF,E","sources":["webpack://leerlevels_site_modules/./src/App.vue","webpack://leerlevels_site_modules/./src/App.vue?7ccd","webpack://leerlevels_site_modules/./src/views/Site.vue","webpack://leerlevels_site_modules/./src/components/datapagina/Datapagina.vue","webpack://leerlevels_site_modules/./src/components/datapagina/components/SelectionList.vue","webpack://leerlevels_site_modules/./src/components/datapagina/components/SelectionList.vue?0723","webpack://leerlevels_site_modules/./src/components/datapagina/components/Requesters.vue","webpack://leerlevels_site_modules/./src/components/datapagina/components/Requesters.vue?167a","webpack://leerlevels_site_modules/./src/components/datapagina/components/ResponseOutput.vue","webpack://leerlevels_site_modules/./src/components/datapagina/components/QueryOutputTab.vue","webpack://leerlevels_site_modules/./src/components/datapagina/components/OutputListTarget.vue","webpack://leerlevels_site_modules/./src/components/datapagina/components/OutputListMcq.vue","webpack://leerlevels_site_modules/./src/components/datapagina/components/OutputListMcq.vue?1d74","webpack://leerlevels_site_modules/./src/components/datapagina/components/OutputListTarget.vue?c56a","webpack://leerlevels_site_modules/./src/components/datapagina/components/QueryOutputTab.vue?4e90","webpack://leerlevels_site_modules/./src/components/datapagina/components/ResponseOutput.vue?6e34","webpack://leerlevels_site_modules/./src/components/datapagina/components/Selectors.vue","webpack://leerlevels_site_modules/./src/components/datapagina/components/Selectors.vue?4b87","webpack://leerlevels_site_modules/./src/components/datapagina/Datapagina.vue?cc89","webpack://leerlevels_site_modules/./src/components/vrijwilliger/Vrijwilliger.vue","webpack://leerlevels_site_modules/./src/components/vrijwilliger/components/OptionTable.vue","webpack://leerlevels_site_modules/./src/components/vrijwilliger/components/OptionTable.vue?53e5","webpack://leerlevels_site_modules/./src/components/vrijwilliger/components/QuestionPanels.vue","webpack://leerlevels_site_modules/./src/components/vrijwilliger/components/QuestionPanels.vue?18cb","webpack://leerlevels_site_modules/./src/components/vrijwilliger/components/TargetPanels.vue","webpack://leerlevels_site_modules/./src/components/vrijwilliger/components/TargetPanels.vue?4aae","webpack://leerlevels_site_modules/./src/components/vrijwilliger/Vrijwilliger.vue?15a7","webpack://leerlevels_site_modules/./src/components/fotoinfo/FotoInfo.vue","webpack://leerlevels_site_modules/./src/components/fotoinfo/components/QuestionPanel.vue","webpack://leerlevels_site_modules/./src/components/fotoinfo/components/TargetPanel.vue","webpack://leerlevels_site_modules/./src/components/fotoinfo/components/TargetPanel.vue?ca70","webpack://leerlevels_site_modules/./src/components/fotoinfo/components/QuestionPanel.vue?b9e3","webpack://leerlevels_site_modules/./src/components/fotoinfo/FotoInfo.vue?ee26","webpack://leerlevels_site_modules/./src/components/searchitems/SearchItems.vue","webpack://leerlevels_site_modules/./src/components/searchitems/SearchItems.vue?a3fb","webpack://leerlevels_site_modules/./src/views/Site.vue?b5a2","webpack://leerlevels_site_modules/./src/router/index.js","webpack://leerlevels_site_modules/./src/store/index.js","webpack://leerlevels_site_modules/./src/plugins/vuetify.js","webpack://leerlevels_site_modules/./src/plugins/webfontloader.js","webpack://leerlevels_site_modules/./src/main.js","webpack://leerlevels_site_modules/./src/components/searchitems/components/QuestionPanel.vue","webpack://leerlevels_site_modules/./src/components/searchitems/components/QuestionPanel.vue?3a0e","webpack://leerlevels_site_modules/./src/components/searchitems/components/TargetPanel.vue","webpack://leerlevels_site_modules/./src/components/searchitems/components/TargetPanel.vue?645f","webpack://leerlevels_site_modules/webpack/bootstrap","webpack://leerlevels_site_modules/webpack/runtime/chunk loaded","webpack://leerlevels_site_modules/webpack/runtime/compat get default export","webpack://leerlevels_site_modules/webpack/runtime/create fake namespace object","webpack://leerlevels_site_modules/webpack/runtime/define property getters","webpack://leerlevels_site_modules/webpack/runtime/ensure chunk","webpack://leerlevels_site_modules/webpack/runtime/get javascript chunk filename","webpack://leerlevels_site_modules/webpack/runtime/get mini-css chunk filename","webpack://leerlevels_site_modules/webpack/runtime/global","webpack://leerlevels_site_modules/webpack/runtime/hasOwnProperty shorthand","webpack://leerlevels_site_modules/webpack/runtime/load script","webpack://leerlevels_site_modules/webpack/runtime/make namespace object","webpack://leerlevels_site_modules/webpack/runtime/publicPath","webpack://leerlevels_site_modules/webpack/runtime/jsonp chunk loading","webpack://leerlevels_site_modules/webpack/startup"],"sourcesContent":["<template>\n<v-app>\n    <v-main>\n    <router-view/>\n    </v-main>\n</v-app>\n</template>\n\n<script>\n\nexport default {\nname: 'App',\n\ndata: () => ({\n    //\n}),\n}\n</script>\n","import { render } from \"./App.vue?vue&type=template&id=d4a5e98c\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <v-navigation-drawer v-model=\"drawer\" :rail=\"rail\" @click=\"rail = false\" permanent>\n        <v-list-item\n        title=\"Links\"\n        nav\n        >\n        <template v-slot:append>\n            <v-btn\n            variant=\"text\"\n            icon=\"mdi-chevron-left\"\n            @click.stop=\"rail = !rail\"\n            ></v-btn>\n        </template>\n        </v-list-item>\n        <v-divider></v-divider>\n        <v-list density=\"compact\" nav>\n            <v-list-item v-for=\"(route_item, index) in route_items\" :key=\"index\" \n                        :title=\"route_item.title\"\n                        :value=\"route_item.route\"\n                        @click=\"selected_site = route_item.route\">\n\n            </v-list-item>\n        </v-list>\n    </v-navigation-drawer>\n\n    <div v-if=\"selected_site === ''\">\n        <Datapagina />\n        \n    </div>\n    <div v-if=\"selected_site === 'Vrijwilliger'\">\n        <Vrijwilliger />\n\n    </div>\n    <div v-if=\"selected_site === 'FotoInfo'\">\n        <FotoInfo />\n\n    </div>\n    <div v-if=\"selected_site === 'SearchItems'\">\n        <SearchItems />\n\n    </div>\n\n</template>\n\n<script>\n// Components\nimport Datapagina from '../components/datapagina/Datapagina.vue';\nimport Vrijwilliger from '../components/vrijwilliger/Vrijwilliger.vue';\nimport FotoInfo from '../components/fotoinfo/FotoInfo.vue';\nimport SearchItems from '../components/searchitems/SearchItems';\n\nexport default {\n    name: 'Site',\n    components: {\n        Datapagina,\n        Vrijwilliger,\n        FotoInfo,\n        SearchItems\n    },\n\n    data (){\n        return {\n            route_items: [{ \n                title: 'Home', \n                icon: '',\n                route: '',\n                },\n                {\n                title: 'Vrijwilliger', \n                icon: '',\n                route: 'Vrijwilliger',\n                },\n                {\n                title: 'FotoInfo', \n                icon: '',\n                route: 'FotoInfo',\n                },\n                {\n                title: 'Search', \n                icon: '',\n                route: 'SearchItems',\n                },\n            ],\n            rail: true,\n            drawer: true,\n            selected_site: ''\n        }\n    }\n}\n</script>\n","<template>\r\n    <div v-if=\"dataLoaded == false\">\r\n        <v-progress-circular indeterminate></v-progress-circular>\r\n    </div>\r\n    <div v-else>\r\n        <v-container class=\"ma-2 pa-2\">\r\n            <v-row no-gutters class=\"pa-0\">\r\n                <v-col class=\"pa-2 ma-0\" cols=\"12\" md=\"3\" sm=\"11\">\r\n                    <div class=\"ma-2\">\r\n                        <h3>Selecteer Leerdoelen:</h3>\r\n                        <SelectionList :selection_type=\"'target'\" />\r\n                        <h3>Vraag data op bij leerdoelen:</h3>\r\n                        <Requesters :request_type=\"'target'\" />\r\n                    </div>\r\n                </v-col>\r\n                <v-col class=\"pa-2 ma-0\"  cols=\"12\" md=\"6\" sm=\"11\">\r\n                    <div class=\"ma-0\">\r\n                        <h3>Snel Selecteren:</h3>\r\n                        <Selectors />\r\n                        <h3>Uitkomst:</h3>\r\n                        <ResponseOutput/>\r\n                    </div>\r\n                </v-col>\r\n                <v-col class=\"pa-2 ma-0\"  cols=\"12\" md=\"3\" sm=\"11\">\r\n                    <div class=\"ma-2\">\r\n                        <h3>Selecteer Vragen:</h3>\r\n                        <SelectionList :selection_type=\"'mcq'\" />\r\n                        <h3>Vraag data op bij vragen</h3>\r\n                        <Requesters :request_type=\"'mcq'\" />\r\n                    </div>\r\n                </v-col>\r\n            </v-row>\r\n        </v-container>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport SelectionList from './components/SelectionList.vue'\r\nimport Requesters from './components/Requesters.vue'\r\nimport ResponseOutput from './components/ResponseOutput.vue'\r\nimport Selectors from './components/Selectors.vue'\r\n\r\n\r\nexport default {\r\n    name: 'Datapagina',\r\n    components: {\r\n        SelectionList,\r\n        Requesters,\r\n        Selectors,\r\n        ResponseOutput\r\n    },\r\n    data (){\r\n        return {\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        // checks if the target and mcq data is loaded\r\n        dataLoaded(){\r\n            return  [Object.keys(this.$store.state.datapagina_module.targets).length != 0, \r\n                    Object.keys(this.$store.state.datapagina_module.mcqs).length != 0].every(e => e === true)\r\n        },\r\n    },\r\n    methods: {\r\n\r\n    },\r\n    mounted() {\r\n        this.$store.dispatch('loadTargets')\r\n        this.$store.dispatch('loadMcqs')\r\n        \r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\nspan {\r\n    display: inline-block;\r\n    overflow:hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: pre-line;\r\n    font-size: 93%;\r\n}\r\n</style>","<template>\r\n<!-- input box -->\r\n<div>\r\n    <v-text-field variant=\"outlined\"\r\n                            persistent-hint\r\n                            v-on:keydown.enter=\"clickItem(filteredList[0])\" \r\n                            label=\"Doorzoek Lijst...\" \r\n                            v-model=\"search\" \r\n                            hint=\"Voeg meerdere filters toe met een komma, enter om bovenste te selecteren\"></v-text-field>\r\n</div>\r\n<!-- Buttons -->\r\n<div>\r\n    <v-row>\r\n            <v-col >\r\n                <v-card  @click=\"toggleAll(filteredList.map((e) => {return e.id}))\" \r\n                        class=\"pa-2 ma-2\" \r\n                        variant=\"outlined\" \r\n                        :color=\"buttoncolor\">alles in-/uitschakelen</v-card>\r\n\r\n                <v-select class=\"ml-2\" \r\n                            style=\"width:10em;\" \r\n                            label=\"Sorteer op:\" \r\n                            density=\"compact\" \r\n                            outlined \r\n                            :items=\"sort_types\" \r\n                            v-model=\"selected_sort_type\"></v-select>\r\n            </v-col>\r\n\r\n            <v-col>\r\n                <v-card @click=\"selectAll(filteredList.map((e) => {return e.id}))\" class=\"ma-2\" >\r\n                    <v-checkbox-btn  :model-value=\"allSelected\" label=\"Selecteer Alles\" />\r\n                </v-card>\r\n                <v-card @click=\"clearAll(filteredList.map((e) => {return e.id}))\" class=\"ma-2\" >\r\n                    <v-checkbox-btn :model-value=\"noneSelected\" label=\"Verwijder Alles\" />\r\n                </v-card>\r\n            </v-col>\r\n    </v-row>\r\n</div>\r\n<!-- selected -->\r\n<div>\r\n    <span>{{this.$store.state.datapagina_module.selected_item_ids[selection_type].length}} GESELECTEERD</span>\r\n</div>\r\n<!-- input list -->\r\n<div>\r\n    <v-list @scroll=\"handleScrollInput\" select-strategy=\"multiple\" density=\"compact\" class=\"scrollable list pa-0\" style=\"resize: vertical; height: 30vh\" size=\"h-50\" v-model=\"selectedItemIds\">\r\n        <v-list-item @click=\"clickItem(filter.id); updateInputBox()\" \r\n                    v-for=\"(filter, index) in smallerSortedFilteredList\" :key=\"index\"\r\n                    :color=\"buttoncolor\"\r\n                    :value=\"filter.id\"\r\n                    class=\"pa-0 pl-1 ma-0\"\r\n                    >\r\n            <v-row >\r\n                <v-list-item-action start style=\"float: left;\">\r\n                    <v-checkbox-btn readonly \r\n                                    :value=\"filter.id\"  \r\n                                    :color=\"buttoncolor\" \r\n                                    v-model=\"selectedItemIds\" \r\n                                    class=\"pt-1\" /> \r\n                </v-list-item-action>\r\n            </v-row>\r\n\r\n            <v-list-item-title class=\"truncate\">{{filter.id}} {{itemText(filter)}}</v-list-item-title>\r\n\r\n        </v-list-item>\r\n    </v-list>\r\n</div>\r\n<!-- text field -->\r\n<div>\r\n    <v-text-field v-model=\"input_box\" v-on:input=\"updateSelectedItemsFromInputBox\"/>\r\n</div>\r\n<!-- selected -->\r\n<div>\r\n    <p>Selected: </p>\r\n    <div class=\"list scrollable\" style=\"height: 150px; resize: vertical; \">\r\n        <v-list select-strategy=\"multiple\" class=\"pa-0\" density=\"compact\">\r\n            <v-list-item v-for=\"(filter, index) in selected_items[selection_type]\" :key=\"index\"\r\n                        :color=\"buttoncolor\"\r\n                        :value=\"filter.id\"\r\n                        @click=\"clickItem(filter.id)\"\r\n                        class=\"pa-1 ma-1\"\r\n                        >\r\n                <span class=\"truncate\">{{filter.id}} {{itemText(filter)}}</span> \r\n                <v-divider></v-divider>\r\n            </v-list-item>\r\n            <!-- shows the selected items, and removes (because they're already selected) them on click -->\r\n  \r\n        </v-list>    \r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'Datapagina',\r\n    props: {\r\n        selection_type: String,\r\n    },\r\n    data (){\r\n        return {\r\n            selected_items: {'target': [], 'mcq': []},\r\n            search: '',\r\n            input_box: \"\",\r\n            list_length: 10,\r\n            sort_types: ['ID', 'Alfabet'],\r\n            selected_sort_type: 'ID',\r\n            buttoncolor: '#3F816C', \r\n\r\n        }\r\n    },\r\n    computed: {\r\n        // make multisearch available\r\n        searchList() {\r\n            return this.search.toLowerCase().split(',');\r\n        },\r\n        // returns a list out of the store target or mcq data\r\n        // used in: filtered list\r\n        listOfItemType(){\r\n            if (this.selection_type == 'target'){\r\n                return Object.values(this.$store.state.datapagina_module.targets)\r\n            } else \r\n            if (this.selection_type == 'mcq'){\r\n                return Object.values(this.$store.state.datapagina_module.mcqs)\r\n            }\r\n        },\r\n        // filters the items if 1. nothing is filtered for, 2. the searchtext is in the text, 3. the ids match \r\n        // used in: \r\n        filteredList() {\r\n            return this.listOfItemType.filter((item) => {\r\n                if (this.searchList[0] == \"\" || this.searchList[-1] == \" \") {\r\n                    return true\r\n                } else \r\n                if (this.searchList.some((searchItem) => {return this.itemText(item).toLowerCase().includes(searchItem) && searchItem !== ''})) {\r\n                    return true\r\n                } else \r\n                if (this.searchList.some((searchItem) => item.id == searchItem)) {\r\n                    return true\r\n                } else return false\r\n            }\r\n            );\r\n        },\r\n        // sorts the filtered list on the current sort type: ID, alphabet\r\n        // used in: \r\n        sortedFilteredList(){\r\n            if (this.selected_sort_type == 'ID'){\r\n                return this.filteredList.sort((a, b) => a.id - b.id)\r\n            }\r\n            if (this.selected_sort_type == 'Alfabet'){\r\n                return this.filteredList.sort((a, b) => {\r\n                    const a_label = this.selection_type == 'target' ? a.label : a.question_text\r\n                    const b_label = this.selection_type == 'target' ? b.label : b.question_text\r\n                    if ( a_label < b_label ){\r\n                        return -1;\r\n                    }\r\n                    if ( a_label > b_label ){\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n            }\r\n        },\r\n        // makes the sorted list smaller, for performance\r\n        // used in: template\r\n        smallerSortedFilteredList(){\r\n            return this.sortedFilteredList.slice(0, this.list_length)\r\n        },\r\n\r\n        // returns true if every item in the filtered list is selected\r\n        // used in: toggleAll(), template\r\n        allSelected: {\r\n            get() {return this.filteredList.every((filtered_item) => this.selected_items[this.selection_type].includes(filtered_item)) },\r\n            set(val){}\r\n        },\r\n        // return true if all filtered items are deslected\r\n        // used in: template\r\n        noneSelected: {\r\n            get() {return this.filteredList.every((filtered_item) => !this.selected_items[this.selection_type].includes(filtered_item)) },\r\n            set(val){}\r\n        },\r\n\r\n        // returns every id selected\r\n        // used in: template\r\n        selectedItemIds: {\r\n            set(value){this.$store.commit('setSelectedItemIdsFromInputBox', {value: value, type: this.selection_type}); this.updateInputBox()},\r\n            get(){return this.$store.state.datapagina_module.selected_item_ids[this.selection_type]}\r\n        },\r\n        // checks id the selected items was changed in another component\r\n        // used in: selectedItemsUpdated (watch)\r\n        selectedItemsUpdated: function(){\r\n            return this.$store.state.datapagina_module.selected_items_updated[this.selection_type]\r\n        },\r\n        // returns the selected items\r\n        // used in: selectedItems (watch)\r\n        selectedItems: function(){\r\n            return this.$store.getters.selectedItems\r\n        },\r\n    },\r\n    methods: {\r\n        // updates input box\r\n        // used in: selectedItemsUpdated (watch)\r\n        updateInputBox(){\r\n            this.input_box = this.$store.state.datapagina_module.selected_item_ids[this.selection_type]\r\n        },\r\n        // if the input box changes, change selected items\r\n        updateSelectedItemsFromInputBox: function(){\r\n            this.$store.commit('setSelectedItemIdsFromInputBox', {value: this.input_box.split(','), \r\n                                                      type: this.selection_type})\r\n        },\r\n        // if not all selected, select all, if all selected, deselect all (filtered list)\r\n        // used in: template\r\n        toggleAll: function(ids) {\r\n            const all_selected = this.allSelected\r\n            if (all_selected){\r\n                this.$store.commit('clearAll', {'ids':ids, 'type': this.selection_type})\r\n            } else {\r\n                this.$store.commit('selectAll', {'ids':ids, 'type': this.selection_type})\r\n            }\r\n        },\r\n        // select all filtered ids \r\n        // used in: template\r\n        selectAll: function(ids) {\r\n            this.$store.commit('selectAll', {'ids':ids, 'type': this.selection_type})\r\n        },\r\n        // deselect all filtered ids \r\n        // used in: template\r\n        clearAll: function(ids) {\r\n            this.$store.commit('clearAll', {'ids':ids, 'type': this.selection_type})\r\n        },\r\n        // selects if deselected, deselect if selected\r\n        // used in: template \r\n        clickItem: function(id){\r\n            this.$store.commit('clickItem', {id: id, type: this.selection_type}); \r\n        },\r\n\r\n        // if scrolled down in selection window, load more\r\n        handleScrollInput: function({ target: { scrollTop, clientHeight, scrollHeight }}) {\r\n            if (scrollTop + clientHeight + 40 >= scrollHeight) {\r\n                this.getNewInputItems()\r\n            }\r\n        },\r\n        // make selection list longer\r\n        // used in: handleScrollInput()\r\n        getNewInputItems: function(){\r\n            this.list_length += 10\r\n        },\r\n\r\n        // returns the label text if target, else return question text\r\n        itemText: function(item){\r\n            return this.selection_type == 'target' ? item.label : item.question_text\r\n        },\r\n    },\r\n    watch: {\r\n        // updates the input box if the selected items updated\r\n        selectedItemsUpdated (new_value, old_value) {\r\n                this.updateInputBox()\r\n                this.$store.commit('setSelectedItemsUpdated', {value: false, type:this.selection_type})\r\n        },\r\n        // copy the selected items locally, so it doesn't have to reload if you change something\r\n        selectedItems (new_value, old_value){\r\n            this.selected_items = new_value\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.small-box{\r\n  float: left; \r\n  margin-left: 10px; \r\n  box-sizing: content-box; \r\n  border: 2px solid steelblue;\r\n  padding-left: 3px;\r\n  padding-right: 3px;\r\nbackground: lightsalmon;\r\n}\r\n.scrollable{\r\n  overflow-y: scroll;\r\n}\r\n.list{\r\n  border: 1px solid steelblue;\r\n  padding: 5px;\r\n  margin: 2px;\r\n}\r\n.list-item{\r\n    background: none;\r\n}\r\n.list-item:hover{\r\n    background: '#3F816C',\r\n}\r\n</style>","import { render } from \"./SelectionList.vue?vue&type=template&id=31f6eca0&scoped=true\"\nimport script from \"./SelectionList.vue?vue&type=script&lang=js\"\nexport * from \"./SelectionList.vue?vue&type=script&lang=js\"\n\nimport \"./SelectionList.vue?vue&type=style&index=0&id=31f6eca0&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-31f6eca0\"]])\n\nexport default __exports__","<template>\r\n<!-- create a button for every available (depends on data_input) request in veux store query_object-->\r\n<div v-for=\"(query_object, index) in availableRequests\" \r\n    :key=\"index\" \r\n    style=\"padding: 3px\" \r\n    size=\"h-auto\">\r\n    <!-- if the correct selected items, show, else, disabled -->\r\n    <div v-if=\"(this.selectedItemsIdsLength == 1 && query_object.value_type == 'integer')\r\n                || (this.selectedItemsIdsLength >= 1 && query_object.value_type == 'integer_array')\"\r\n        size=\"h-auto\">\r\n\r\n        <!-- firsts sets the input to the current ids, then creates a request that will output in the veux query_object.response -->\r\n        <v-btn :loading=\"query_object.sending\" \r\n                @click=\"sendRequest(query_object)\"  \r\n                variant=\"outlined\" \r\n                :color=\"buttoncolor\">\r\n            <span class=\"truncate pa-2\">{{query_object.title}}</span>\r\n        </v-btn>\r\n    </div>\r\n    <!-- if the request is disabled (because you maybe selected too many), disable the button -->\r\n    <div v-else>\r\n        <v-btn disabled  \r\n                variant=\"outlined\" \r\n                :color=\"buttoncolor\" \r\n                size=\"h-auto\" >\r\n            <span class=\"truncate pa-2\">{{query_object.title}}</span>\r\n        </v-btn>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'Requesters',\r\n    props: {\r\n        request_type: String,\r\n    },\r\n    data (){\r\n        return { \r\n            buttoncolor: '#3F816C', \r\n\r\n        }\r\n    },\r\n    computed: {\r\n        //returns the length of selected items, used to know wich request is available\r\n        // used in: template\r\n        selectedItemsIdsLength (){\r\n            return this.$store.state.datapagina_module.selected_item_ids[this.request_type].length\r\n        },\r\n        // returns all the object that have, shown: true and are the good type\r\n        // used in: template\r\n        availableRequests(){\r\n            return this.$store.state.datapagina_module.query_objects.filter((e) => {return e.input == this.request_type && e.shown == true})\r\n        },\r\n    },\r\n    methods: {\r\n        // first set the query data\r\n        // sends the query obj to the api\r\n        // sumbit obj saves the reponse in itself\r\n        // used in: template\r\n        sendRequest: function(query_object){\r\n            this.$store.commit('setQueryData', {'obj':query_object,\r\n                                                'name': 'value', \r\n                                                'value': this.$store.state.datapagina_module.selected_item_ids[this.request_type]})\r\n            this.$store.dispatch('submitObj', query_object)\r\n        },\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import { render } from \"./Requesters.vue?vue&type=template&id=525f2c7b\"\nimport script from \"./Requesters.vue?vue&type=script&lang=js\"\nexport * from \"./Requesters.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<v-card style=\"border-color: #3F816C; border-width: 3px; padding: 3px;\">\r\n    <!-- tabs -->\r\n    <v-card style=\"border-color: #3F816C; border-width: 1px;\">\r\n        <v-tabs v-model=\"selected_query_obj_path\" style=\"height: min-content;\" show-arrows centered center-active>\r\n            <v-tab  v-for=\"(query_obj, index) in availableRequests\" :key=\"index\" :value=\"query_obj.path\" >\r\n                <span class=\"truncate\" style=\"width: 105px; font-size: smaller;\"  >{{query_obj.title}}</span>\r\n            </v-tab>\r\n        </v-tabs>\r\n    </v-card >\r\n    <!-- output window -->\r\n    <v-window v-model=\"selected_query_obj_path\" style=\"resize: vertical; height: 68vh; \" >\r\n        <div v-for=\"(query_obj, index) in availableRequests\" :key=\"index\">\r\n            <v-window-item  :value=\"query_obj.path\">\r\n                <QueryOutputTab :query_obj=\"query_obj\" />\r\n            </v-window-item>\r\n        </div>\r\n    </v-window>\r\n</v-card>\r\n\r\n</template>\r\n\r\n<script>\r\nimport QueryOutputTab from './QueryOutputTab.vue';\r\n\r\nexport default {\r\n    name: 'ResponseOutput',\r\n    components: {\r\n        QueryOutputTab\r\n    },\r\n    data (){\r\n        return {\r\n            selected_query_obj_path: 'similar_targets',\r\n            buttoncolor: '#3F816C', \r\n        }\r\n    },\r\n    computed: {\r\n        //shown responses\r\n        // used in: template\r\n        availableRequests(){\r\n            return this.$store.state.datapagina_module.query_objects.filter((e) => {return e.shown == true})\r\n        },\r\n        // returns only the selected query obj\r\n        // used in: template\r\n        selectedQueryObj (){\r\n            const index = this.$store.state.datapagina_module.query_objects.map((e) => {return e.path}).indexOf(this.selected_query_obj_path)\r\n            if (index != -1) {\r\n                return this.$store.state.datapagina_module.query_objects[index]\r\n            }\r\n            else {\r\n                return undefined\r\n            }\r\n        },\r\n        // returns last used query obj path\r\n        // used in: lastRequestedPath (watch)\r\n        lastRequestedPath(){\r\n            return this.$store.state.datapagina_module.last_clicked_query_object_path\r\n        },\r\n    },\r\n    methods: {\r\n\r\n    },\r\n    watch: {\r\n        // returns last used query obj path\r\n        // used in: selectedQueryObj\r\n        lastRequestedPath(new_value, old_value){\r\n            this.selected_query_obj_path = new_value\r\n        },\r\n        // used to set the store\r\n        // used in: store\r\n        selected_query_obj_path(new_value, old_value){\r\n            this.$store.commit('setSelectedTabPath', new_value)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","<template>\r\n\r\n<!-- status -->\r\n<div>\r\n    <!-- if a query_obj is sending, display loading, if nothing is sending and nothing recieved: you did not send request, if not sending and has response: display query_obj that has a response title -->\r\n    <p v-if=\"(query_obj.sending == true)\">Loading ...</p>\r\n    <p v-else-if=\"(query_obj.response.length == 0)\">Did not send request</p>\r\n    <p v-else>success!</p>\r\n</div>\r\n<!-- data -->\r\n<div>\r\n    Verstuurd: <input :value=\"query_obj.send_ids\" readonly/>\r\n</div>\r\n<!-- repsonse list -->\r\n<div>\r\n    <v-expansion-panels class=\"scrollable list\" style=\"height: 55vh;\" variant=\"accordion\" multiple>\r\n            <div v-if=\"(query_obj.response.length !== 0)\">\r\n                <!-- for every returned id, create a list item that handles descriptions -->\r\n                <!-- if the response is a target -->\r\n                <div v-for=\"(listItem , index) in listItems\" :key=\"index\">\r\n                    <div v-if=\"query_obj.returns === 'target_list' || query_obj.returns === 'target'\">\r\n                        <v-expansion-panels  width=\"100%\">\r\n                            <OutputListTarget :item_obj=\"listItem\"  size=\"w-100\" />\r\n\r\n                        </v-expansion-panels>\r\n                    </div>\r\n                    <!-- if the response is a mcq -->\r\n                    <div v-if=\"query_obj.returns == 'mcq_list' || query_obj.returns == 'mcq'\">\r\n                        <v-expansion-panels width=\"100%\">\r\n                            <OutputListMcq :item_obj=\"listItem\"  size=\"w-100\" />\r\n                        </v-expansion-panels>\r\n                    </div>\r\n                    <!-- <hr noshade=\"true\" size=\"2px\"> -->\r\n                </div>\r\n            </div>\r\n    </v-expansion-panels>\r\n    <v-row>\r\n            <v-sheet class=\"pa-0 my-4 ml-4\" width=\"250px\">\r\n                <v-text-field hide-details :model-value=\"listIds\" variant=\"outlined\" readonly class=\"pa-0\"></v-text-field>\r\n            </v-sheet>\r\n            <v-sheet class=\"pa-2 my-4\">\r\n                <v-btn @click=\"copyText(listIds)\"  >Copy ids</v-btn>\r\n\r\n            </v-sheet>\r\n    </v-row>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport OutputListTarget from './OutputListTarget'\r\nimport OutputListMcq from './OutputListMcq'\r\n\r\nexport default {\r\n    name: 'QueryOutputTab',\r\n    components: {\r\n        OutputListTarget,\r\n        OutputListMcq,\r\n    },\r\n    props: {\r\n        query_obj: Object,\r\n    },\r\n    data (){\r\n        return {\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        // returns an array of the response items\r\n        listItems (){\r\n            if (this.query_obj.response.length != 0) {\r\n                if (this.query_obj.returns == 'target_list') {\r\n                    var returned_target_data = this.query_obj.response.map((e) => {return this.$store.getters.targetDataFromId(e)})\r\n                    return returned_target_data\r\n                } else \r\n                if (this.query_obj.returns == 'mcq_list') {\r\n                    var returned_question_data = this.query_obj.response.map((e) => {return this.$store.getters.mcqDataFromId(e)})\r\n\r\n                    return returned_question_data\r\n                } else\r\n                if (this.query_obj.returns == 'target') {\r\n                    // var returned_target_data = this.$store.state.home.target_data.filter((e) => {return this.query_obj.response.includes(e.id.parseInt())})\r\n                    var returned_target_data = this.$store.getters.targetDataFromId(this.query_obj.response[0])\r\n                    return [returned_target_data]\r\n                } else \r\n                if (this.query_obj.returns == 'mcq') {\r\n                    const returned_question_data = this.$store.getters.mcqDataFromId(this.query_obj.response.Question_ID)\r\n                    // this.$store.commit('setAnswerDistributionFromId', {'id': returned_question_data.id, 'answer_distribution': query_obj.response.answer_distribution})\r\n                    \r\n                    // const updated_question_data =  this.$store.getters.questionDataFromId(this.query_obj.response.Question_ID)\r\n                    \r\n                    return [returned_question_data]\r\n                }\r\n            } else {\r\n                return []\r\n            }  \r\n        },\r\n        listIds () {\r\n            if (this.query_obj.response.length != 0) {\r\n                return this.listItems.map((e) => {return e.id})\r\n            } else {\r\n                return []\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        // used for the copy ids section\r\n        // used in: template\r\n        copyText(text) {  \r\n            const el = document.createElement('textarea');  \r\n            el.value = text;                    \r\n            el.setAttribute('readonly', '');                \r\n            el.style.position = 'absolute';                     \r\n            el.style.left = '-9999px';                      \r\n            document.body.appendChild(el);                  \r\n            const selected =  document.getSelection().rangeCount > 0  ? document.getSelection().getRangeAt(0) : false;                                    \r\n            el.select();                                    \r\n            document.execCommand('copy');                   \r\n            document.body.removeChild(el);                  \r\n            if (selected) {                                 \r\n            document.getSelection().removeAllRanges();    \r\n            document.getSelection().addRange(selected);   \r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n        lastRequestedPath(new_value, old_value){\r\n            this.selected_query_obj_path = new_value\r\n        },\r\n        selected_query_obj_path(new_value, old_value){\r\n            this.$store.commit('setSelectedTabPath', new_value)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.scrollable{\r\n  overflow-y: scroll;\r\n}\r\n.list{\r\n  border: 1px solid steelblue;\r\n  padding: 5px;\r\n  margin: 2px;  \r\n}\r\n.box {\r\n    border: solid;\r\n    outline-color: gray;\r\n    border-width: 1px;\r\n    padding: 3px;\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n    font-size: smaller;\r\n}\r\n</style>","<template>\r\n<v-expansion-panel style=\"width: 100%\">\r\n    <v-expansion-panel-title>\r\n        <v-row>\r\n            <v-col cols=\"1\" class=\"ma-0 px-0 text-right\">\r\n                <label >{{item_obj.id}}</label>\r\n            </v-col>\r\n            <v-col>\r\n                {{item_obj.label}}\r\n            </v-col>\r\n\r\n        </v-row>\r\n\r\n    </v-expansion-panel-title>    \r\n    <v-expansion-panel-text>\r\n        <div>\r\n            <!-- if description is an string, show the string, if it's an obj sort and format the obj and show it nicer -->\r\n                <v-expansion-panels>\r\n                    <!-- description -->\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Beschrijving</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <p class=\"box\" >{{item_obj.description}}</p>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- vraag ids -->\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Vraag Ids</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <p class=\"box\" >{{item_obj.mcqs.toString()}}</p>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- Youtube video -->\r\n                    <v-expansion-panel v-if=\"Object.keys(item_obj).includes('youtube_id')\">\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Video</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text >\r\n                            <iframe :src=\"'https://www.youtube.com/embed/' + item_obj.youtube_id\"  \r\n                                    allow=\"accelerometer; \r\n                                            autoplay; \r\n                                            encrypted-media; \r\n                                            gyroscope; \r\n                                            picture-in-picture\" \r\n                                    style=\"display: block; height:480px\"\r\n                                    width=\"100%\"\r\n                                    \r\n                                    allowfullscreen></iframe>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- Slide -->\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Slide</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <div v-if=\"Object.keys(item_obj).includes('img_url_large')\">\r\n                                <img :src=\"item_obj.img_url_large\" alt=\"Target Photo\" width=\"300\">\r\n                            </div>\r\n                            <v-row  v-if=\"Object.keys(item_obj).includes('slide_title')\">\r\n                                <v-col cols=\"2\">\r\n                                    <span class=\"pa-0 ma-0\">Slide Titel: </span>\r\n                                </v-col>\r\n                                <v-col cols=\"10\">\r\n                                    <span class=\"pa-0 ma-0\">{{item_obj.slide_title}}</span>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <hr  v-if=\"Object.keys(item_obj).includes('slide_title') && Object.keys(item_obj).includes('slide_text')\">\r\n                            <v-row v-if=\"Object.keys(item_obj).includes('slide_text')\">\r\n                                <v-col cols=\"2\">\r\n                                    <span class=\"pa-0 ma-0\">Slide Text: </span>\r\n                                </v-col>\r\n                                <v-col cols=\"10\">\r\n                                    <span class=\"pa-0 ma-0\">{{item_obj.slide_text}}</span>\r\n                                </v-col>\r\n                            </v-row>\r\n\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- Questions Data -->\r\n                    <v-expansion-panel v-if=\"Object.keys(item_obj).includes('mcqs')\">\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Vragen</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <v-expansion-panels>\r\n                                <OutputListMcq v-for=\"(mcq, index) in mcqs\" :key=\"index\" :item_obj=\"mcq\" :no_target=\"true\" />\r\n                            </v-expansion-panels>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- Tijd Data -->\r\n                    <v-expansion-panel v-if=\"Object.keys(item_obj).includes('mcqs')\">\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Tijd Data</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <v-table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"left-text\">\r\n                                            <p>Type</p>\r\n                                        </th>\r\n                                        <th class=\"left-text\">\r\n                                            <p>Data</p>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <!-- <div v-if=\"'time_estimate' in item_obj.description\"> -->\r\n                                        <tr v-for=\"(key, index) in Object.keys(time_data)\" :key=\"index\">\r\n                                            <td>{{key}}</td>\r\n                                            <td>{{parseFloat(time_data[key]).toFixed(2)}}s</td>\r\n                                        </tr>\r\n                                    <!-- </div> -->\r\n                                </tbody>\r\n                            </v-table>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                </v-expansion-panels>\r\n\r\n            </div>\r\n    </v-expansion-panel-text>\r\n</v-expansion-panel>\r\n</template>\r\n\r\n<script>\r\nimport OutputListMcq from './OutputListMcq.vue'\r\n\r\nexport default {\r\n    name: 'OutputListTarget',\r\n    props: {\r\n        item_obj: Object,\r\n    },\r\n    components: {\r\n        OutputListMcq\r\n    },\r\n    data (){\r\n        return {\r\n            sorted_description: {},\r\n            view_more_label: false,\r\n        }\r\n    },\r\n    computed: {\r\n        mcqs(){\r\n            return this.item_obj.mcqs.map((e) => {return this.$store.getters.mcqDataFromId(e)})\r\n        },\r\n        time_data(){\r\n            var time_data = {}\r\n            this.mcqs.forEach((e) => {\r\n                if (Object.keys(e).includes('time_estimate')){\r\n                    Object.keys(e.time_estimate).forEach((time_key) => {\r\n                    if (!Object.keys(time_data).includes(time_key)){\r\n                        time_data[time_key] = 0\r\n                    }\r\n\r\n                    time_data[time_key] = time_data[time_key] + Math.round(e.time_estimate[time_key])\r\n                    })\r\n                }\r\n\r\n            });\r\n            console.log(time_data)\r\n            return time_data\r\n        }\r\n    },\r\n    methods: {\r\n    },\r\n    created() {\r\n        console.log('mcqs', this.item_obj.mcqs)\r\n        this.$store.dispatch('getMcqDataFromArray', this.item_obj.mcqs)\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.box {\r\n    border: solid;\r\n    outline-color: gray;\r\n    border-width: 1px;\r\n    padding: 3px;\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n    width: 100%;\r\n    font-size: smaller;\r\n    display: inline-block;\r\n}\r\n</style>","<template>\r\n<v-expansion-panel style=\"width: 100%\">\r\n    <v-expansion-panel-title>\r\n        <v-row>\r\n            <v-col cols=\"1\" class=\"ma-0 px-0 text-right\">\r\n                <label >{{item_obj.id}}</label>\r\n            </v-col>\r\n            <v-col>\r\n                {{item_obj.question_text}}\r\n            </v-col>\r\n\r\n        </v-row>\r\n\r\n    </v-expansion-panel-title>    \r\n    <v-expansion-panel-text>\r\n        <v-expansion-panels>\r\n            <!-- leerdoel id -->\r\n            <v-expansion-panel>\r\n                <v-expansion-panel-title class=\"ma-0\">\r\n                    <p>Leerdoel Id:</p>\r\n                </v-expansion-panel-title>\r\n                <v-expansion-panel-text >\r\n                    <p class=\"box\">{{item_obj.target_id}}</p>\r\n                </v-expansion-panel-text >\r\n            </v-expansion-panel>\r\n            <!-- options -->\r\n            <v-expansion-panel v-if=\"Object.keys(item_obj).includes('answer_options')\">\r\n                <v-expansion-panel-title class=\"ma-0\">\r\n                    <p>Keuzes:</p>\r\n                </v-expansion-panel-title>\r\n                <v-expansion-panel-text >\r\n                    <v-table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"left-text\">\r\n                                    #\r\n                                </th>\r\n                                <th class=\"left-text\">\r\n                                    Option\r\n                                </th>\r\n                                <th class=\"left-text\" v-if=\"Object.keys(item_obj).includes('answer_distribution')\">\r\n                                Aantal\r\n                                </th>\r\n                                <th class=\"left-text\" v-if=\"Object.keys(item_obj).includes('answer_distribution')\">\r\n                                    %\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(option, index) in item_obj.answer_options\" :key=\"index\" :style=\"{'background-color': option.is_correct ? '#afff7d': 'white'}\">\r\n                                    <td>\r\n                                        <span>{{option.id}}</span>\r\n                                    </td>\r\n                                    <td>{{option.text}}</td>\r\n                                    <td v-if=\"Object.keys(item_obj).includes('answer_distribution')\">\r\n                                        <span>{{item_obj.answer_distribution[option.id]}}</span>\r\n                                    </td>\r\n                                    <td v-if=\"Object.keys(item_obj).includes('answer_distribution')\">\r\n                                        <span class=\"text-right\">{{Math.round(item_obj.answer_distribution[option.id] / totalAnswerDistribution(item_obj.answer_distribution) * 100)}}</span>\r\n                                    </td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </v-table>\r\n                </v-expansion-panel-text >\r\n            </v-expansion-panel>\r\n            <!-- tijd data -->\r\n            <v-expansion-panel v-if=\"Object.keys(item_obj).includes('time_estimate')\">\r\n                <v-expansion-panel-title class=\"ma-0\">\r\n                    <p>Tijd Data</p>\r\n                </v-expansion-panel-title>\r\n                <v-expansion-panel-text>\r\n                    <v-table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"left-text\">\r\n                                    <p>Type</p>\r\n                                </th>\r\n                                <th class=\"left-text\">\r\n                                    <p>Data</p>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <!-- <div v-if=\"'time_estimate' in item_obj.description\"> -->\r\n                                <tr v-for=\"(key, index) in Object.keys(item_obj.time_estimate)\" :key=\"index\">\r\n                                    <td>{{key}}</td>\r\n                                    <td>{{parseFloat(item_obj.time_estimate[key]).toFixed(2)}}s</td>\r\n                                </tr>\r\n                            <!-- </div> -->\r\n                        </tbody>\r\n                    </v-table>\r\n                </v-expansion-panel-text>\r\n            </v-expansion-panel>\r\n            <!-- target -->\r\n            <v-expansion-panel v-if=\"!no_target\">\r\n                <v-expansion-panel-title class=\"ma-0\">\r\n                    <p>Leerdoel</p>\r\n                </v-expansion-panel-title>\r\n                <v-expansion-panel-text >\r\n                    <v-expansion-panels>\r\n                        <OutputListTarget :item_obj=\"this.$store.getters.targetDataFromId(item_obj.target_id)\" />\r\n                    </v-expansion-panels>\r\n                </v-expansion-panel-text >\r\n            </v-expansion-panel>\r\n        </v-expansion-panels>\r\n\r\n    </v-expansion-panel-text>\r\n</v-expansion-panel>\r\n</template>\r\n\r\n<script>\r\nimport OutputListTarget from './OutputListTarget'\r\n\r\nexport default {\r\n    name: 'OutputListMcq',\r\n    props: {\r\n        item_obj: Object,\r\n        no_target: {type:Boolean, default: false},\r\n    },\r\n    components: {\r\n        OutputListTarget  \r\n    },\r\n    data (){\r\n        return {\r\n        }\r\n    },\r\n    computed: {\r\n    },\r\n    methods: {\r\n        totalAnswerDistribution: function(answer_distribution){\r\n            var total = 0\r\n            Object.values(answer_distribution).forEach((e) => {\r\n                total = total + Number(e)\r\n            })\r\n            return total\r\n        }\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.box {\r\n    border: solid;\r\n    outline-color: gray;\r\n    border-width: 1px;\r\n    padding: 3px;\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n    width: 100%;\r\n    font-size: smaller;\r\n    display: inline-block;\r\n}\r\n</style>","import { render } from \"./OutputListMcq.vue?vue&type=template&id=162cafc4\"\nimport script from \"./OutputListMcq.vue?vue&type=script&lang=js\"\nexport * from \"./OutputListMcq.vue?vue&type=script&lang=js\"\n\nimport \"./OutputListMcq.vue?vue&type=style&index=0&id=162cafc4&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./OutputListTarget.vue?vue&type=template&id=9cc2d80a\"\nimport script from \"./OutputListTarget.vue?vue&type=script&lang=js\"\nexport * from \"./OutputListTarget.vue?vue&type=script&lang=js\"\n\nimport \"./OutputListTarget.vue?vue&type=style&index=0&id=9cc2d80a&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./QueryOutputTab.vue?vue&type=template&id=a4df3bd8\"\nimport script from \"./QueryOutputTab.vue?vue&type=script&lang=js\"\nexport * from \"./QueryOutputTab.vue?vue&type=script&lang=js\"\n\nimport \"./QueryOutputTab.vue?vue&type=style&index=0&id=a4df3bd8&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ResponseOutput.vue?vue&type=template&id=2522e064\"\nimport script from \"./ResponseOutput.vue?vue&type=script&lang=js\"\nexport * from \"./ResponseOutput.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<div class=\"box\">\r\n    <v-row>\r\n        <v-col>\r\n            <v-btn @click=\"selectQuestionsFromTargets()\" class=\"pa-2 ma-1\" variant=\"outlined\" :color=\"buttoncolor\" size=\"h-auto\">\r\n                <span class=\"truncate\">Vragen Bij Geselecteerde Leerdoelen</span>\r\n            </v-btn>\r\n        </v-col>\r\n        <v-col>\r\n            <v-btn @click=\"selectTargetsFromQuestions()\" class=\"pa-2 ma-1\" variant=\"outlined\" :color=\"buttoncolor\" size=\"h-auto\">\r\n                <span class=\"truncate\">Leerdoelen Bij Geselecteerde Vragen</span>\r\n            </v-btn>\r\n        </v-col>\r\n    </v-row>\r\n\r\n    <hr noshade=\"true\">\r\n    <v-btn @click=\"selectReturnedData()\" class=\"pa-2 ma-1\" variant=\"outlined\" :color=\"buttoncolor\" size=\"h-auto\">\r\n        <span class=\"truncate\">Selecteer Uitkomst</span>\r\n    </v-btn>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'Selectors',\r\n    data (){\r\n        return {\r\n            buttoncolor: '#3F816C', \r\n            selected_items: {'target': [], 'mcq': []},\r\n        }\r\n    },\r\n    computed: {\r\n        // used to check for chajge in selected items\r\n        // used in: watch\r\n        selectedItems (){\r\n            return this.$store.getters.selectedItems\r\n        },\r\n        // returns the type of current selected tab\r\n        // used in: selectedTabResponseArr, selectReturnedData\r\n        selectedTabResponseType (){\r\n            console.log(this.$store.getters.selectedTabQueryObj.returns)\r\n            if (this.$store.getters.selectedTabQueryObj.returns === 'target' || this.$store.getters.selectedTabQueryObj.returns === 'target_list'){\r\n                return 'target'\r\n            }\r\n            else {\r\n                return 'mcq'\r\n            }\r\n        },\r\n        // returns all the current selected ids and returned ids\r\n        // used in: selectReturnedData\r\n        selectedTabResponseArr (){\r\n            // if (this.$store.getters.selectedTabQueryObj.path == 'most_difficult_question'){\r\n            //     return [this.$store.getters.selectedTabQueryObj.response.Question_ID]\r\n            // }\r\n            if (this.$store.getters.selectedTabQueryObj.response instanceof Array){\r\n                var new_selected = this.$store.getters.selectedTabQueryObj.response\r\n            } else {\r\n                var new_selected = [this.$store.getters.selectedTabQueryObj.response]\r\n            }\r\n            \r\n            new_selected = new_selected.concat(this.$store.state.datapagina_module.selected_item_ids[this.selectedTabResponseType])\r\n            \r\n            return new_selected\r\n\r\n\r\n        }\r\n\r\n    },\r\n    methods: {\r\n        // sets the selected ids to current ids + returned\r\n        // used in: template\r\n        selectReturnedData(){\r\n            if (this.outputListIds != []) {\r\n                this.$store.commit('setSelectedItemIds', {value: this.selectedTabResponseArr, type: this.selectedTabResponseType})            \r\n            }\r\n        },\r\n        selectQuestionsFromTargets(){\r\n            if (this.selected_items['target'].length != 0){\r\n                const question_ids = []\r\n                this.selected_items['target'].forEach((e) => {Array.prototype.push.apply(question_ids, e.mcqs)})\r\n                Array.prototype.push.apply(question_ids, this.$store.state.datapagina_module.selected_item_ids['mcq'])\r\n\r\n                this.$store.commit('setSelectedItemIds',{value: question_ids, type: 'mcq'})\r\n            }\r\n        },\r\n        selectTargetsFromQuestions(){\r\n            if (this.selected_items['mcq'].length != 0){\r\n                const target_ids = []\r\n                this.selected_items['mcq'].forEach((e) => {if(!target_ids.includes(e.target_id)){\r\n                                                                                target_ids.push(e.target_id)\r\n                                                                                }})\r\n                this.$store.commit('setSelectedItemIds',{value: target_ids, type: 'target'})\r\n            }\r\n\r\n        },\r\n\r\n    },\r\n    watch: {\r\n        selectedItems (new_value){\r\n            this.selected_items = Object.create(new_value)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import { render } from \"./Selectors.vue?vue&type=template&id=53dcf5e8\"\nimport script from \"./Selectors.vue?vue&type=script&lang=js\"\nexport * from \"./Selectors.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Datapagina.vue?vue&type=template&id=5f391f0a\"\nimport script from \"./Datapagina.vue?vue&type=script&lang=js\"\nexport * from \"./Datapagina.vue?vue&type=script&lang=js\"\n\nimport \"./Datapagina.vue?vue&type=style&index=0&id=5f391f0a&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <v-container class=\"ma-2 pa-2\">\r\n    <v-row>\r\n        <v-col cols=\"12\" md=\"6\" sm=\"12\">\r\n            <v-row>\r\n                <v-col>\r\n                    <v-select :items=\"sort_types\" \r\n                        v-model=\"selected_sort_type\" \r\n                        style=\"\" \r\n                        label=\"Selecteer type:\" \r\n                        density=\"compact\" \r\n                        outlined></v-select>\r\n                    <v-checkbox-btn @click=\"toggleOptions(optionsWithData.map((e) => {return e.id}))\" label=\"Toggle All\" ></v-checkbox-btn>\r\n                </v-col>\r\n                <v-col>\r\n                    <v-checkbox-btn label=\"Zonder Feedback\" v-model=\"without_feedback\"></v-checkbox-btn>\r\n                </v-col>\r\n            </v-row>\r\n            \r\n            <div v-if=\"selected_sort_type == 'Opties'\">\r\n                <OptionTable :options=\"optionsWithData\" />\r\n            </div>\r\n            <div v-else-if=\"selected_sort_type == 'Vragen'\">\r\n                <QuestionPanels :options=\"optionsWithData\" />\r\n            </div>\r\n            <div v-else-if=\"selected_sort_type == 'Leerdoel'\">\r\n                <TargetPanels :options=\"optionsWithData\" />\r\n            </div>\r\n        </v-col>\r\n        <v-col cols=\"12\" md=\"6\" sm=\"12\">\r\n            <v-list style=\"height: 400px\" class=\"align-end containter list scrollable\">\r\n                <v-expansion-panels density=\"compact\">\r\n                    <v-expansion-panel v-for=\"(option, index) in selectedOptions\" :key=\"index\">\r\n                        <v-expansion-panel-title>\r\n                            <span>{{option.id}} {{option.text}}</span> <span style=\"float: right;\">{{option.amount}}</span>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <div >\r\n                                <v-row>\r\n                                    <v-col cols=\"3\" class=\"px-0\">\r\n                                        <span class=\"truncate\">Vraag: </span>\r\n                                    </v-col>\r\n                                    <v-col cols=\"9\" class=\"px-0\">\r\n                                        <span>{{this.$store.getters.questionDataFromId(option.question_id).label}}</span>\r\n                                    </v-col>\r\n                                </v-row>\r\n                                <v-row>\r\n                                    <v-col cols=\"3\" class=\"pr-0\">\r\n                                        <span class=\"truncate\">Feedback: </span>\r\n                                    </v-col>\r\n                                    <v-col cols=\"9\" class=\"ml-0\">\r\n                                        <v-textarea variant='outlined' density=\"compact\" rows=\"3\" v-model=\"feedback[option.id]\" disabled></v-textarea>\r\n                                        <v-btn variant=\"outlined\" density=\"compact\" class=\"ma-1\" disabled>Sla Feedback Op</v-btn>\r\n                                        <v-btn variant=\"outlined\" density=\"compact\" class=\"ma-1\" disabled>Reset Feedback</v-btn>\r\n                                    </v-col>\r\n                                </v-row>\r\n                            </div>\r\n                        </v-expansion-panel-text>    \r\n\r\n                    </v-expansion-panel>\r\n                </v-expansion-panels>\r\n            </v-list>\r\n            <v-row>\r\n                <v-sheet class=\"pa-0 my-4 ml-4\" width=\"250px\">\r\n                    <v-text-field hide-details :model-value=\"selectedQuestions\" variant=\"outlined\" readonly class=\"pa-0\"></v-text-field>\r\n                </v-sheet>\r\n                <v-sheet class=\"pa-2 my-4\">\r\n                    <v-btn @click=\"copyText(selectedQuestions)\" >Copy ids</v-btn>\r\n                </v-sheet>\r\n            </v-row>\r\n        </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport OptionTable from './components/OptionTable'\r\nimport QuestionPanels from './components/QuestionPanels.vue'\r\nimport TargetPanels from './components/TargetPanels.vue'\r\n \r\nexport default {\r\n    name: 'Vrijwilliger',\r\n    components: {\r\n    OptionTable,\r\n    QuestionPanels,\r\n    TargetPanels\r\n},\r\n    data (){\r\n        return {\r\n            sort_types: [ 'Opties', 'Vragen', 'Leerdoel'],\r\n            selected_sort_type: 'Opties',\r\n            without_feedback: true,\r\n            returned_data: {\r\n                'rankingamount':[],\r\n                'rankingnofeedback': []\r\n            },\r\n            feedback:{},\r\n        }\r\n    },\r\n    computed:{\r\n        // data_table_headers(){\r\n        //     return [\r\n        //         { text: 'id', value: 'id' },\r\n        //         { text: this.selected_sort_type, value: 'text' },\r\n        //         { text: 'Aantal Fout', value: 'amount' },\r\n        //     ]\r\n        // },\r\n        filteredItems(){\r\n            if (this.without_feedback == true){\r\n                return this.returned_data['rankingnofeedback']\r\n            } else {\r\n                console.log(this.returned_data)\r\n                const unsorted = this.returned_data['rankingamount']\r\n                const unsorted_ids = unsorted.map(e => e.question)\r\n                this.returned_data['rankingnofeedback'].forEach((e) => {\r\n                    if (!unsorted_ids.includes(e.question)){\r\n                        unsorted.push(e)\r\n                    }\r\n                })\r\n                const sorted = unsorted.sort(function(a,b){\r\n                    return b.amount - a.amount\r\n                })\r\n                return sorted\r\n            }\r\n        },\r\n        optionsWithData(){\r\n            const with_option_data = this.filteredItems.map((option) => {\r\n                const option_data = this.splitQuestionAndOption(option.question)\r\n                const option_text = this.$store.state.vrijwilliger_module.question_data[option_data.question]\r\n                                                            .description\r\n                                                            .options[option_data.option]\r\n                return {'id': option.question, 'amount': option.amount, 'text': option_text,'feedback': 'Nog geen feedback', 'question_id': option_data.question, 'target_id': this.$store.getters.questionDataFromId(option_data.question).target_id}\r\n            })\r\n            return with_option_data\r\n        },  \r\n        selectedOptions(){\r\n            return this.optionsWithData.filter((e) => {\r\n                return this.$store.state.vrijwilliger_module.selected_options.ids.includes(e.id)\r\n            })\r\n        },\r\n        selectedQuestions(){\r\n            const question_ids = []\r\n            this.selectedOptions.forEach((e) => {\r\n                if (!question_ids.map(e => e.question_id).includes(e.question_id)){\r\n                    question_ids.push(e.question_id)\r\n                }\r\n            })\r\n            return question_ids\r\n        },\r\n    },\r\n    methods: {\r\n\r\n        getFrequentlyWrong: function(top_k=50, time_from = '1/1/2000'){\r\n            \r\n            axios.post('https://leerlevels-data.herokuapp.com/frequently_wrong', {\r\n                \"top-k\": 200,\r\n                \"time_from\": '1/1/2000'\r\n            }).then(response => {\r\n                console.log(response.data)\r\n                this.returned_data = {\r\n                    'rankingamount': Object.values(response.data.rankingamount),\r\n                    'rankingnofeedback': Object.values(response.data.rankingnofeedback)\r\n                }\r\n            })\r\n            .catch(function(error){\r\n                console.log(error)\r\n            })\r\n        },\r\n        splitQuestionAndOption: function(string){\r\n            return {'option': string.charAt(string.length - 1).toLowerCase().charCodeAt(0) - 97, 'question': string.slice(0, -1)}\r\n        },\r\n        toggleOptions(ids){\r\n            if (this.allSelected(ids) == true){\r\n                const current_selected = this.$store.state.vrijwilliger_module.selected_options.ids\r\n                this.$store.commit('setSelectedOptions', current_selected.filter((e) => {\r\n                    return !ids.includes(e)\r\n                }))\r\n            } else {\r\n                const new_selected_options = this.$store.state.vrijwilliger_module.selected_options.ids\r\n                ids.forEach((e) => {\r\n                    if (this.$store.state.vrijwilliger_module.selected_options.ids.indexOf(e) == -1){\r\n                        new_selected_options.push(e)\r\n                    }\r\n                })\r\n                this.$store.commit('setSelectedOptions', new_selected_options)\r\n            }\r\n        },\r\n        allSelected: function(ids) {\r\n            return ids.every((e) => {\r\n                return this.$store.state.vrijwilliger_module.selected_options.ids.includes(e)\r\n            })\r\n        },\r\n        copyText(text) {  \r\n            const el = document.createElement('textarea');  \r\n            el.value = text;                    \r\n            el.setAttribute('readonly', '');                \r\n            el.style.position = 'absolute';                     \r\n            el.style.left = '-9999px';                      \r\n            document.body.appendChild(el);                  \r\n            const selected =  document.getSelection().rangeCount > 0  ? document.getSelection().getRangeAt(0) : false;                                    \r\n            el.select();                                    \r\n            document.execCommand('copy');                   \r\n            document.body.removeChild(el);                  \r\n            if (selected) {                                 \r\n            document.getSelection().removeAllRanges();    \r\n            document.getSelection().addRange(selected);   \r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        this.getFrequentlyWrong()\r\n    },\r\n    watch:{\r\n        selected_sort_type: function(){\r\n            this.getFrequentlyWrong()\r\n        },\r\n        without_feedback: function(){\r\n            this.getFrequentlyWrong()\r\n        }\r\n\r\n\r\n    },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\nspan {\r\n    display: inline-block;\r\n    overflow:hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: pre-line;\r\n    font-size: 93%;\r\n}\r\n</style>","<template>\r\n<v-table>\r\n    <thead>\r\n        <tr>\r\n            <th style=\"width: 6%\">\r\n                <v-checkbox-btn v-model=\"allSelected\" @click=\"toggleAll\"></v-checkbox-btn>\r\n            </th>\r\n            <th class=\"text-left\" style=\"width: 6%\">\r\n                <span class=\"truncate\" >id</span>\r\n            </th>\r\n            <th class=\"text-left\">\r\n                <span class=\"truncate\">Options</span>\r\n            </th>\r\n            <th class=\"text-left\">\r\n                <span class=\"truncate\"  style=\"float: right;margin-right: 20%;\">Aantal Fout</span>\r\n            </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody >\r\n        <tr v-for=\"(item, index) in options\" :key=\"index\" @click=\"this.$store.commit('clickOption', item.id)\">\r\n            <td>\r\n                <v-checkbox-btn v-model=\"selectedOptions\" :value=\"item.id\" readonly></v-checkbox-btn>\r\n            </td>\r\n            <td class=\"text-left\"  style=\"width: 6%\">\r\n                <span class=\"truncate\">{{item.id}}</span>\r\n            </td>\r\n            <td class=\"text-left\">\r\n                <span class=\"truncate\">{{item.text}}</span>\r\n            </td>\r\n            <td class=\"text-left\">\r\n                <span class=\"truncate\" style=\"float: right; margin-right: 20%;\">{{item.amount}}</span>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</v-table>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'OptionTable',\r\n    props: {\r\n        options: Array,\r\n    },\r\n    computed: {\r\n        selectedOptions: {\r\n            set(value){this.$store.commit('setSelectedOptions', value)},\r\n            get(){return this.$store.state.vrijwilliger.selected_options.ids}\r\n        },\r\n        allSelected:{\r\n            get(){return this.options.every((e) => {\r\n                return this.$store.state.vrijwilliger.selected_options.ids.includes(e.id)\r\n            })},\r\n            set(value){}\r\n        }\r\n    },\r\n    methods: {\r\n        toggleAll(){\r\n            if (this.allSelected == true){\r\n                const current_selected = this.$store.state.vrijwilliger.selected_options.ids\r\n                const OptionIds = this.options.map((e) => {return e.id})\r\n                this.$store.commit('setSelectedOptions', current_selected.filter((e) => {\r\n                    return !OptionIds.includes(e)\r\n                }))\r\n            } else {\r\n                const new_selected_options = this.$store.state.vrijwilliger.selected_options.ids\r\n                this.options.forEach((e) => {\r\n                    if (this.$store.state.vrijwilliger.selected_options.ids.indexOf(e.id) == -1){\r\n                        new_selected_options.push(e.id)\r\n                    }\r\n                })\r\n                this.$store.commit('setSelectedOptions', new_selected_options)\r\n            }\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import { render } from \"./OptionTable.vue?vue&type=template&id=93796130\"\nimport script from \"./OptionTable.vue?vue&type=script&lang=js\"\nexport * from \"./OptionTable.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<v-expansion-panels variant=\"accordion\" multiple>\r\n    <v-expansion-panel v-for=\"(question, index) in questionsByOptions\" :key=\"index\">\r\n        <v-expansion-panel-title>\r\n            <span class=\"truncate\" style=\"width: 10%\">{{question.id}}</span>\r\n            <span class=\"truncate\" style=\"width: 85%\">{{question.label}}</span>    \r\n            <span class=\"truncate\" style=\"width: 10%; float: right;\">{{question.total_wrong}}</span>    \r\n        </v-expansion-panel-title>\r\n        <v-expansion-panel-text>\r\n            \r\n            <OptionTable :options=\"optionByQuestionId(question.id)\" />\r\n        </v-expansion-panel-text>\r\n    </v-expansion-panel>\r\n</v-expansion-panels>\r\n</template>\r\n\r\n<script>\r\nimport OptionTable from './OptionTable'\r\n\r\nexport default {\r\n    name: 'QuestionPanels',\r\n    components:{\r\n        OptionTable\r\n    },\r\n    props: {\r\n        options: Array,\r\n    },\r\n    computed:{\r\n        questionsByOptions(){\r\n            var questions = []\r\n            this.options.forEach((option) => {\r\n                var question = this.$store.getters.questionDataFromId(option.question_id)\r\n                if (!questions.includes(question)){\r\n                    question['total_wrong'] = option.amount\r\n                    questions.push(question)\r\n                } else {\r\n                    const index = questions.indexOf(question)\r\n                    questions[index].total_wrong += option.amount\r\n                }\r\n            })\r\n            return questions.sort(\r\n                function(a,b){\r\n                    return b.total_wrong - a.total_wrong\r\n                }\r\n            )\r\n        },\r\n    },\r\n    methods: {\r\n        optionByQuestionId: function(question_id){\r\n            return this.options.filter((e) => {\r\n                return e.question_id == question_id                \r\n            })\r\n        },    \r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import { render } from \"./QuestionPanels.vue?vue&type=template&id=32ae12a6\"\nimport script from \"./QuestionPanels.vue?vue&type=script&lang=js\"\nexport * from \"./QuestionPanels.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<v-expansion-panels variant=\"accordion\" multiple>\r\n    <v-expansion-panel v-for=\"target in targetsByOptions\" :key=\"target.id\">\r\n        <v-expansion-panel-title>\r\n            <v-checkbox-btn :model-value=\"allSelected(optionsByTargetId(target.id).map((e) => {return e.id}))\" \r\n                                        density=\"compact\" \r\n                                        @click=\"toggleOptions(optionsByTargetId(target.id).map((e) => {return e.id}))\"                                        \r\n                                        ></v-checkbox-btn>\r\n            <span class=\"truncate\" style=\"width: 10%\">{{target.id}}</span>\r\n            <span class=\"truncate\" style=\"width: 85%\">{{target.label}}</span>    \r\n            <span class=\"truncate\" style=\"width: 10%; float: right;\">{{target.total_wrong}}</span>    \r\n        </v-expansion-panel-title>\r\n        <v-expansion-panel-text>\r\n            <!-- to remove a self update crash -->\r\n            <v-expansion-panels variant=\"accordion\">\r\n                <v-expansion-panel v-for=\"(question, index) in questionsByTarget(target.id)\" :key=\"index\">\r\n                    <v-expansion-panel-title>\r\n                        <v-checkbox-btn :model-value=\"allSelected(optionsByQuestionId(question.id).map((e) => {if (e)return e.id}))\" \r\n                                        density=\"compact\" \r\n                                        @click=\"toggleOptions(optionsByQuestionId(question.id).map((e) => {return e.id}))\"                                        \r\n                                        ></v-checkbox-btn>\r\n                        <span class=\"truncate\" style=\"width: 15%\">{{question.id}}</span>\r\n                        <span class=\"truncate\" style=\"width: 85%\">{{question.label}}</span>    \r\n                        <span class=\"truncate\" style=\"width: 10%; float: right;\">{{question.total_wrong}}</span>    \r\n                    </v-expansion-panel-title>\r\n                    <v-expansion-panel-text>\r\n                        <OptionTable :options=\"optionsByQuestionId(question.id)\" />\r\n                    </v-expansion-panel-text>\r\n                </v-expansion-panel>\r\n            </v-expansion-panels>\r\n\r\n        </v-expansion-panel-text>\r\n    </v-expansion-panel>\r\n</v-expansion-panels>\r\n</template>\r\n\r\n<script>\r\nimport OptionTable from './OptionTable'\r\n\r\nexport default {\r\n    name: 'TargetPanels',\r\n    components:{\r\n        OptionTable\r\n    },\r\n    props: {\r\n        options: Array,\r\n    },\r\n    data(){\r\n        return {\r\n        }\r\n    },\r\n    computed:{\r\n        questionsByOptions(){\r\n            var questions = []\r\n            this.options.forEach((option) => {\r\n                var question = this.$store.getters.questionDataFromId(option.question_id)\r\n                if (!questions.includes(question)){\r\n                    question['total_wrong'] = option.amount\r\n                    questions.push(question)\r\n                } else {\r\n                    const index = questions.indexOf(question)\r\n                    questions[index].total_wrong += option.amount\r\n                }\r\n            })\r\n            return questions.sort(\r\n                function(a,b){\r\n                    return b.total_wrong - a.total_wrong\r\n                }\r\n            )\r\n        },\r\n        targetsByOptions(){\r\n            const targets = []\r\n            this.options.forEach((option) => {\r\n                var target = this.$store.getters.targetDataFromId(option.target_id)\r\n\r\n                if (!targets.includes(target)){\r\n                    target['total_wrong'] = option.amount\r\n                    targets.push(target)\r\n                } else {\r\n                    const index = targets.indexOf(target)\r\n                    targets[index].total_wrong += option.amount\r\n                }\r\n            })\r\n            return targets.sort(\r\n                function(a,b){\r\n                    return b.total_wrong - a.total_wrong\r\n                }\r\n            )\r\n        },\r\n\r\n    },\r\n    methods: {\r\n        questionsByTarget(target_id){\r\n            return this.questionsByOptions.filter((e) => {\r\n                return e.target_id == target_id\r\n            })\r\n        },\r\n        allSelected: function(ids) {\r\n            return ids.every((e) => {\r\n                return this.$store.state.vrijwilliger.selected_options.ids.includes(e)\r\n            })\r\n        },\r\n        optionsByQuestionId: function(question_id){\r\n            return this.options.filter((e) => {\r\n                return e.question_id == question_id                \r\n            })\r\n        },    \r\n        optionsByTargetId: function(target_id){\r\n            return this.options.filter((e) => {\r\n                return e.target_id == target_id                \r\n            })\r\n        },\r\n        toggleOptions(ids){\r\n            if (this.allSelected(ids) == true){\r\n                const current_selected = this.$store.state.vrijwilliger.selected_options.ids\r\n                this.$store.commit('setSelectedOptions', current_selected.filter((e) => {\r\n                    return !ids.includes(e)\r\n                }))\r\n            } else {\r\n                const new_selected_options = this.$store.state.vrijwilliger.selected_options.ids\r\n                ids.forEach((e) => {\r\n                    if (this.$store.state.vrijwilliger.selected_options.ids.indexOf(e) == -1){\r\n                        new_selected_options.push(e)\r\n                    }\r\n                })\r\n                this.$store.commit('setSelectedOptions', new_selected_options)\r\n            }\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import { render } from \"./TargetPanels.vue?vue&type=template&id=fc3aff5a\"\nimport script from \"./TargetPanels.vue?vue&type=script&lang=js\"\nexport * from \"./TargetPanels.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Vrijwilliger.vue?vue&type=template&id=1f910913\"\nimport script from \"./Vrijwilliger.vue?vue&type=script&lang=js\"\nexport * from \"./Vrijwilliger.vue?vue&type=script&lang=js\"\n\nimport \"./Vrijwilliger.vue?vue&type=style&index=0&id=1f910913&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<v-row>\r\n        <v-col cols=\"12\" md=\"4\" sm=\"12\">\r\n            <v-card variant=\"outlined\" class=\"ma-2\">\r\n                <v-card-text class=\"pa-0\">\r\n                    <v-toolbar density=\"compact\" color=\"#dcdcdc\" class=\"ma-0\" fixed>\r\n                        <v-toolbar-title>Fotos</v-toolbar-title>\r\n                        <template v-slot:extension>\r\n                            <div style=\"margin-bottom: 10px\">\r\n                            <v-tabs align-with-title v-model=\"image_tab\" style=\"height: min-content;\" show-arrows centered center-active>\r\n                                <v-tab v-for=\"(photo, index) in image_previews\" \r\n                                        :key=\"index\"\r\n                                        :value=\"image_list[index].name\">\r\n                                    <span class=\"truncate\" style=\"width: 105px; font-size: smaller;\">{{image_list[index].name}}</span>\r\n                                    <v-icon right @click=\"removePhoto(index)\" color=\"red\" large>mdi-close</v-icon>\r\n                                </v-tab>\r\n                            </v-tabs>\r\n                        </div>\r\n                        </template>\r\n                    </v-toolbar>\r\n\r\n                    <!-- Image -->\r\n                    <v-card class=\"overflow-y-auto\">\r\n                        <v-card-text>\r\n                            <v-window v-model=\"image_tab\">\r\n                                <v-window-item v-for=\"(photo, index) in image_previews\"\r\n                                                :key=\"index\"\r\n                                                :value=\"image_list[index].name\">\r\n                                    <img :src=\"photo\" \r\n                                        :alt=\"image_list[index].name\" \r\n                                        \r\n                                        >\r\n                                </v-window-item>\r\n                            </v-window>\r\n                        </v-card-text>\r\n\r\n                    </v-card>\r\n\r\n                </v-card-text>\r\n\r\n            </v-card>\r\n            <v-row>\r\n                <v-col cols=\"8\">\r\n                    <v-file-input \r\n                    accept=\"image/*\" \r\n                    label=\"Upload Image\"\r\n                    class=\"ma-1 pa-0\"\r\n                    prepend-icon=\"mdi-camera\"\r\n                    variant=\"outlined\"\r\n                    multiple\r\n                    v-model=\"uploaded_photos\"\r\n                    @change=\"filesUploaded\"\r\n                    type=\"file\"\r\n                    ></v-file-input>\r\n                </v-col>\r\n                <v-col cols=\"4\">\r\n                    <v-btn :disabled=\"image_list.length == 0\" @click=\"removeAllPhotos\" class=\"ma-1 float-right\"><span>Remove All</span></v-btn>\r\n                </v-col>\r\n            </v-row>\r\n            <v-btn @click=\"requestImageData(imageFileFromName(image_tab))\"  class=\"ma-2 pa-0\"><span>Vraag Data Opniew Op</span></v-btn>\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" md=\"8\" sm=\"12\">\r\n            <v-card class=\"fill-height ma-2\"  variant=\"outlined\">\r\n                <v-toolbar fixed density=\"compact\">\r\n                    <v-toolbar-title><span>{{image_tab}}</span></v-toolbar-title>\r\n                    <!-- <template v-slot:extension>\r\n                        <div style=\"margin-bottom: 3px;\">\r\n                            <v-tabs v-model=\"image_info_tab\" centered center-active show-arrows align-with-title>\r\n                                <v-tab v-for=\"(key, index) in Object.keys(returned_image_data)\" :key=\"index\" :value=\"key\">\r\n                                    <span class=\"truncate\" style=\"width: 110px;font-size: smaller;\">{{key}}</span>\r\n                                </v-tab>\r\n                            </v-tabs>\r\n                        </div>\r\n                    </template> -->\r\n                </v-toolbar>\r\n                <v-card-text class=\"pa-2\">\r\n                    <!-- <v-window v-model=\"image_info_tab\">\r\n                    <v-window-item v-for=\"(key, index) in Object.keys(returned_image_data)\" \r\n                                    :key=\"index\" \r\n                                    :value=\"key\"> -->\r\n                        <v-row class=\"fill-height\">\r\n                            <div v-if=\"Object.keys(returned_image_data).length !== 0\" >\r\n                            <!-- <v-col cols=\"4\">\r\n                                    <img :src=\"image_previews[Object.keys(returned_image_data).indexOf(image_tab)]\" :alt=\"returned_image_data[image_tab]\">\r\n\r\n                            </v-col> -->\r\n                            <v-col cols=\"12\">\r\n\r\n                                <v-card  class=\"overflow-y-auto\">\r\n                                    <v-progress-circular v-if=\"Object.keys(returned_image_data[image_tab]).length === 0\" indeterminate></v-progress-circular>\r\n                                    <v-list v-else class=\"overflow-y-auto\">\r\n                                        <v-expansion-panels multiple variant=\"accordion\" v-model=\"opened_image_panels\">\r\n                                            <!-- targets id -->\r\n                                            <v-expansion-panel value=\"target_ids\">\r\n                                                <v-expansion-panel-title>\r\n                                                    <span class=\"truncate\">Bijbehorende Leerdoelen</span>\r\n                                                </v-expansion-panel-title>\r\n                                                <v-expansion-panel-text>\r\n                                                    <v-expansion-panels>\r\n                                                        <v-table>\r\n                                                            <thead>\r\n                                                                <tr>\r\n                                                                    <th class=\"text-left\">\r\n                                                                        <span>Leerdoel ID</span>\r\n                                                                    </th>\r\n                                                                    <th class=\"text-left\">\r\n                                                                        <span>Label</span>\r\n                                                                    </th>   \r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                <tr v-for=\"(target_id, index) in returned_image_data[image_tab].top_k_id\" :key=\"index\">\r\n                                                                    <td>\r\n                                                                        <span>{{target_id}}</span>\r\n                                                                    </td>\r\n                                                                    <td>\r\n                                                                        <span>{{this.$store.getters.targetDataFromId(target_id).label}}</span>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </v-table>\r\n                                                    </v-expansion-panels>\r\n                                                </v-expansion-panel-text>\r\n                                            </v-expansion-panel>\r\n                                            <!-- Original Text -->\r\n                                            <v-expansion-panel  value=\"original_text\">\r\n                                                <v-expansion-panel-title>\r\n                                                    <span class=\"truncate\">Originele Tekst</span>\r\n                                                </v-expansion-panel-title>\r\n                                                <v-expansion-panel-text>\r\n                                                    <span class=\"truncate\">{{returned_image_data[image_tab].original_text}}</span>\r\n                                                </v-expansion-panel-text>\r\n                                            </v-expansion-panel>\r\n                                            <!-- Questions -->\r\n                                            <v-expansion-panel value=\"questions\">\r\n                                                <v-expansion-panel-title>\r\n                                                    <span class=\"truncate\">Bijbehorende Vragen</span>\r\n                                                </v-expansion-panel-title>\r\n                                                <v-expansion-panel-text>\r\n                                                    <v-expansion-panels>\r\n                                                        <v-expansion-panel v-for=\"(title, index) in returned_image_data[image_tab].top_k_question\" :key=\"index\">\r\n                                                            <v-expansion-panel-title>\r\n                                                                <span>{{title}}</span>\r\n                                                            </v-expansion-panel-title>\r\n                                                            <v-expansion-panel-text>\r\n                                                                <span>{{title}} <br> data</span>\r\n                                                            </v-expansion-panel-text>\r\n                                                        </v-expansion-panel>\r\n                                                        <!-- <QuestionPanel  v-for=\"(id, index) in returned_image_data[key].top_k_question\" :key=\"index\" :id=\"id\"></QuestionPanel> -->\r\n                                                    </v-expansion-panels>\r\n                                                </v-expansion-panel-text>\r\n                                            </v-expansion-panel>\r\n                                            <!-- targets -->\r\n                                            <v-expansion-panel value=\"targets\">\r\n                                                <v-expansion-panel-title>\r\n                                                    <span class=\"truncate\">Bijbehorende Leerdoelen</span>\r\n                                                </v-expansion-panel-title>\r\n                                                <v-expansion-panel-text>\r\n                                                    <v-expansion-panels>\r\n                                                        <TargetPanel v-for=\"(id, index) in noDuplicateArray(returned_image_data[image_tab].top_k_id)\" :key=\"index\" :id=\"id\"></TargetPanel>\r\n\r\n                                                    </v-expansion-panels>\r\n                                                </v-expansion-panel-text>\r\n                                            </v-expansion-panel>\r\n                                            <!-- top_k_documents -->\r\n                                            <v-expansion-panel value=\"tok_k_documents\">\r\n                                                <v-expansion-panel-title>\r\n                                                    <span class=\"truncate\">Top Documents</span>\r\n                                                </v-expansion-panel-title>\r\n                                                <v-expansion-panel-text>\r\n                                                    <span>{{returned_image_data[image_tab].top_k_documents}}</span>\r\n                                                </v-expansion-panel-text>\r\n                                            </v-expansion-panel>\r\n                                            <!-- data -->\r\n                                            <v-expansion-panel value=\"data\">\r\n                                                <v-expansion-panel-title>\r\n                                                    <span class=\"truncate\">Data</span>\r\n                                                </v-expansion-panel-title>\r\n                                                <v-expansion-panel-text>\r\n                                                    <span>{{returned_image_data[image_tab]}}</span>\r\n                                                </v-expansion-panel-text>\r\n                                            </v-expansion-panel>\r\n                                        </v-expansion-panels>\r\n                                    </v-list>\r\n\r\n                                </v-card>\r\n\r\n                            </v-col>\r\n                        </div>\r\n\r\n                        </v-row>\r\n                    <!-- </v-window-item>\r\n                </v-window>\r\n                 -->\r\n                </v-card-text>\r\n\r\n\r\n            </v-card>\r\n        </v-col>\r\n    </v-row>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport QuestionPanel from './components/QuestionPanel'\r\nimport TargetPanel from './components/TargetPanel'\r\nexport default {\r\n    name: 'FotoInfo',\r\n    components: {\r\n        QuestionPanel,\r\n        TargetPanel\r\n    },\r\n    data (){\r\n        return {\r\n            image_previews: [],\r\n            image_list: [],\r\n            uploaded_photos: [],\r\n            image_tab: '',\r\n            image_info_tab: '',\r\n            opened_image_panels: ['target_ids'],\r\n            returned_image_data: {},\r\n        }\r\n    },\r\n    methods: {\r\n        filesUploaded: function(event) {\r\n            var input = event.target;\r\n            var count = input.files.length;\r\n            var index = 0;\r\n            if (input.files) {\r\n                while(count --) {\r\n                var reader = new FileReader();\r\n                if (!this.imageNames.includes(input.files[index].name)){\r\n                    reader.onload = (e) => {\r\n                    this.image_previews.push(e.target.result);\r\n                    }\r\n                    this.image_list.push(input.files[index]);\r\n                    this.returned_image_data[input.files[index].name] = {}\r\n                    this.requestImageData(input.files[index])\r\n                    reader.readAsDataURL(input.files[index]);\r\n                }\r\n\r\n                index ++;\r\n                }\r\n            }\r\n            this.uploaded_photos = []\r\n            this.image_tab = this.image_info_tab = input.files[input.files.length - 1].name\r\n        },\r\n        removePhoto: function(index){\r\n            if (index != -1){\r\n                this.image_previews.splice(index, 1)\r\n                this.image_list.splice(index, 1)\r\n            }\r\n        }, \r\n        removeAllPhotos: function(){\r\n            this.image_list = [];\r\n            this.preview_list = [];\r\n        } ,\r\n        requestImageData: function(file){\r\n            var formData = new FormData()\r\n            var imagefile = file\r\n            formData.append(\"image\", imagefile)\r\n            console.log('sending >> formatData >> ', formData)\r\n            axios.post('https://leerlevels-opdrachtscan.herokuapp.com/', \r\n                    formData, \r\n                    {\r\n                        headers: {\r\n                            'Content-Type': 'multipart/form-data'\r\n                        }\r\n                    }).then((response) => {\r\n                        console.log('Image Response: ',response)\r\n                        this.returned_image_data[file.name] = response.data\r\n                    }).catch((error) => {console.log(error)})\r\n\r\n        },\r\n        imageFileFromName(name){\r\n            const index = this.imageNames.indexOf(name)\r\n            if (index != -1){\r\n                return this.image_list[index]\r\n            }\r\n        },\r\n        noDuplicateArray: function(array){\r\n            return array.filter(function(item, pos) {\r\n                return array.indexOf(item) == pos;\r\n            })\r\n        } \r\n    },\r\n    computed: {\r\n        imageNames (){\r\n            return this.image_list.map(e => e.name)\r\n        },\r\n\r\n    },\r\n    watch:{\r\n        image_tab: function(new_value, old_value) {\r\n            this.opened_image_panels = ['target_ids']\r\n\r\n        }\r\n    },\r\n    mounted() {\r\n        this.$store.dispatch('loadTargets')\r\n        this.$store.dispatch('loadMcqs')\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\nspan {\r\n    display: inline-block;\r\n    overflow:hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: pre-line;\r\n    font-size: 93%;\r\n}\r\n</style>","<template>\r\n<v-expansion-panel style=\"width: 100%\">\r\n    <v-expansion-panel-title>\r\n        <v-row>\r\n            <v-col cols=\"1\" class=\"ma-0 px-0 text-right\">\r\n                <label >{{mcq_data.id}}</label>\r\n            </v-col>\r\n            <v-col>\r\n                {{mcq_data.question_text}}\r\n            </v-col>\r\n\r\n        </v-row>\r\n\r\n    </v-expansion-panel-title>    \r\n    <v-expansion-panel-text>\r\n        <v-expansion-panels>\r\n            <!-- leerdoel id -->\r\n            <v-expansion-panel>\r\n                <v-expansion-panel-title class=\"ma-0\">\r\n                    <p>Leerdoel Id:</p>\r\n                </v-expansion-panel-title>\r\n                <v-expansion-panel-text >\r\n                    <p class=\"box\">{{mcq_data.target_id}}</p>\r\n                </v-expansion-panel-text >\r\n            </v-expansion-panel>\r\n            <!-- options -->\r\n            <v-expansion-panel v-if=\"Object.keys(mcq_data).includes('answer_options')\">\r\n                <v-expansion-panel-title class=\"ma-0\">\r\n                    <p>Keuzes:</p>\r\n                </v-expansion-panel-title>\r\n                <v-expansion-panel-text >\r\n                    <v-table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"left-text\">\r\n                                    #\r\n                                </th>\r\n                                <th class=\"left-text\">\r\n                                    Option\r\n                                </th>\r\n                                <th class=\"left-text\" v-if=\"Object.keys(mcq_data).includes('answer_distribution')\">\r\n                                Aantal\r\n                                </th>\r\n                                <th class=\"left-text\" v-if=\"Object.keys(mcq_data).includes('answer_distribution')\">\r\n                                    %\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(option, index) in mcq_data.answer_options\" :key=\"index\" :style=\"{'background-color': option.is_correct ? '#afff7d': 'white'}\">\r\n                                    <td>\r\n                                        <span>{{option.id}}</span>\r\n                                    </td>\r\n                                    <td>{{option.text}}</td>\r\n                                    <td v-if=\"Object.keys(mcq_data).includes('answer_distribution')\">\r\n                                        <span>{{mcq_data.answer_distribution[option.id]}}</span>\r\n                                    </td>\r\n                                    <td v-if=\"Object.keys(mcq_data).includes('answer_distribution')\">\r\n                                        <span class=\"text-right\">{{Math.round(mcq_data.answer_distribution[option.id] / totalAnswerDistribution(mcq_data.answer_distribution) * 100)}}</span>\r\n                                    </td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </v-table>\r\n                </v-expansion-panel-text >\r\n            </v-expansion-panel>\r\n            <!-- tijd data -->\r\n            <v-expansion-panel v-if=\"Object.keys(mcq_data).includes('time_estimate')\">\r\n                <v-expansion-panel-title class=\"ma-0\">\r\n                    <p>Tijd Data</p>\r\n                </v-expansion-panel-title>\r\n                <v-expansion-panel-text>\r\n                    <v-table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"left-text\">\r\n                                    <p>Type</p>\r\n                                </th>\r\n                                <th class=\"left-text\">\r\n                                    <p>Data</p>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <!-- <div v-if=\"'time_estimate' in mcq_data.description\"> -->\r\n                                <tr v-for=\"(key, index) in Object.keys(mcq_data.time_estimate)\" :key=\"index\">\r\n                                    <td>{{key}}</td>\r\n                                    <td>{{parseFloat(mcq_data.time_estimate[key]).toFixed(2)}}s</td>\r\n                                </tr>\r\n                            <!-- </div> -->\r\n                        </tbody>\r\n                    </v-table>\r\n                </v-expansion-panel-text>\r\n            </v-expansion-panel>\r\n            <!-- target -->\r\n            <v-expansion-panel v-if=\"!no_target\">\r\n                <v-expansion-panel-title class=\"ma-0\">\r\n                    <p>Leerdoel</p>\r\n                </v-expansion-panel-title>\r\n                <v-expansion-panel-text >\r\n                    <v-expansion-panels>\r\n                        <TargetPanel :id=\"item_obj.target_id\" />\r\n                    </v-expansion-panels>\r\n                </v-expansion-panel-text >\r\n            </v-expansion-panel>\r\n        </v-expansion-panels>\r\n\r\n    </v-expansion-panel-text>\r\n</v-expansion-panel>\r\n</template>\r\n\r\n<script>\r\nimport TargetPanel from './TargetPanel'\r\n\r\nexport default {\r\n    name: 'QuestionPanel',\r\n    props: {\r\n        id: Number,\r\n        no_target: {type: Boolean, default: false}\r\n    },\r\n    components: {\r\n        TargetPanel\r\n    },\r\n    computed: {\r\n        mcq_data() {\r\n            return this.$store.getters.mcqDataFromId(this.id)\r\n        }\r\n    },\r\n    methods: {\r\n        totalAnswerDistribution: function(answer_distribution){\r\n            var total = 0\r\n            Object.values(answer_distribution).forEach((e) => {\r\n                total = total + Number(e)\r\n            })\r\n            return total\r\n        }\r\n    },\r\n    mounted() {\r\n        this.$store.dispatch('getMcqDataFromArray', [this.id])\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","<template>\r\n<v-expansion-panel style=\"width: 100%\">\r\n    <v-expansion-panel-title>\r\n        <v-row>\r\n            <v-col cols=\"1\" class=\"ma-0 px-0 text-right\">\r\n                <label >{{target_data.id}}</label>\r\n            </v-col>\r\n            <v-col>\r\n                {{target_data.label}}\r\n            </v-col>\r\n\r\n        </v-row>\r\n\r\n    </v-expansion-panel-title>    \r\n    <v-expansion-panel-text>\r\n        <div>\r\n            <!-- if description is an string, show the string, if it's an obj sort and format the obj and show it nicer -->\r\n                <v-expansion-panels>\r\n                    <!-- description -->\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Beschrijving</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <p class=\"box\" >{{target_data.description}}</p>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- vraag ids -->\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Vraag Ids</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <p class=\"box\" >{{target_data.mcqs.toString()}}</p>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- Youtube video -->\r\n                    <v-expansion-panel v-if=\"Object.keys(target_data).includes('youtube_id')\">\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Video</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text >\r\n                            <iframe :src=\"'https://www.youtube.com/embed/' + target_data.youtube_id\"  \r\n                                    allow=\"accelerometer; \r\n                                            autoplay; \r\n                                            encrypted-media; \r\n                                            gyroscope; \r\n                                            picture-in-picture\" \r\n                                    style=\"display: block; height:480px\"\r\n                                    width=\"100%\"\r\n                                    \r\n                                    allowfullscreen></iframe>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- Slide -->\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Slide</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <div v-if=\"Object.keys(target_data).includes('img_url_large')\">\r\n                                <img :src=\"target_data.img_url_large\" alt=\"Target Photo\" width=\"300\">\r\n                            </div>\r\n                            <v-row  v-if=\"Object.keys(target_data).includes('slide_title')\">\r\n                                <v-col cols=\"2\">\r\n                                    <span class=\"pa-0 ma-0\">Slide Titel: </span>\r\n                                </v-col>\r\n                                <v-col cols=\"10\">\r\n                                    <span class=\"pa-0 ma-0\">{{target_data.slide_title}}</span>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <hr  v-if=\"Object.keys(target_data).includes('slide_title') && Object.keys(target_data).includes('slide_text')\">\r\n                            <v-row v-if=\"Object.keys(target_data).includes('slide_text')\">\r\n                                <v-col cols=\"2\">\r\n                                    <span class=\"pa-0 ma-0\">Slide Text: </span>\r\n                                </v-col>\r\n                                <v-col cols=\"10\">\r\n                                    <span class=\"pa-0 ma-0\">{{target_data.slide_text}}</span>\r\n                                </v-col>\r\n                            </v-row>\r\n\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- Questions Data -->\r\n                    <v-expansion-panel v-if=\"Object.keys(target_data).includes('mcqs')\">\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Vragen</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <v-expansion-panels>\r\n                                <QuestionPanel v-for=\"(mcqid, index) in target_data.mcqs\" :key=\"index\" :id=\"mcqid\" :no_target=\"true\" />\r\n                            </v-expansion-panels>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- Tijd Data -->\r\n                    <v-expansion-panel v-if=\"Object.keys(target_data).includes('mcqs')\">\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Tijd Data</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <v-table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"left-text\">\r\n                                            <p>Type</p>\r\n                                        </th>\r\n                                        <th class=\"left-text\">\r\n                                            <p>Data</p>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <!-- <div v-if=\"'time_estimate' in target_data.description\"> -->\r\n                                        <tr v-for=\"(key, index) in Object.keys(time_data)\" :key=\"index\">\r\n                                            <td>{{key}}</td>\r\n                                            <td>{{parseFloat(time_data[key]).toFixed(2)}}s</td>\r\n                                        </tr>\r\n                                    <!-- </div> -->\r\n                                </tbody>\r\n                            </v-table>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                </v-expansion-panels>\r\n\r\n            </div>\r\n    </v-expansion-panel-text>\r\n</v-expansion-panel>\r\n</template>\r\n\r\n<script>\r\nimport QuestionPanel from './QuestionPanel.vue'\r\n\r\nexport default {\r\n    name: 'TargetPanel',\r\n    components: {\r\n        QuestionPanel\r\n    },\r\n    props: {\r\n        id: Number,\r\n    },\r\n    computed: {\r\n        target_data() {\r\n            return this.$store.getters.targetDataFromId(this.id)\r\n        },\r\n        time_data(){\r\n            var time_data = {}\r\n            this.target_data.mcqs.forEach((e) => {\r\n                if (Object.keys(e).includes('time_estimate')){\r\n                    Object.keys(e.time_estimate).forEach((time_key) => {\r\n                    if (!Object.keys(time_data).includes(time_key)){\r\n                        time_data[time_key] = 0\r\n                    }\r\n\r\n                    time_data[time_key] = time_data[time_key] + Math.round(e.time_estimate[time_key])\r\n                    })\r\n                }\r\n\r\n            });\r\n            return time_data\r\n        }\r\n    },\r\n    methods: {\r\n\r\n    },  \r\n    created() {\r\n        this.$store.dispatch('getTargetDataFromArray', [this.id])\r\n        this.$store.dispatch('getMcqDataFromArray', this.target_data.mcqs)\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import { render } from \"./TargetPanel.vue?vue&type=template&id=99d7ba24\"\nimport script from \"./TargetPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TargetPanel.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./QuestionPanel.vue?vue&type=template&id=4666ad1b\"\nimport script from \"./QuestionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./QuestionPanel.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./FotoInfo.vue?vue&type=template&id=12512894\"\nimport script from \"./FotoInfo.vue?vue&type=script&lang=js\"\nexport * from \"./FotoInfo.vue?vue&type=script&lang=js\"\n\nimport \"./FotoInfo.vue?vue&type=style&index=0&id=12512894&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div v-if=\"dataLoaded == false\">\r\n        <v-progress-circular indeterminate></v-progress-circular>\r\n    </div>\r\n    <div v-else>\r\n    <v-row class=\"ma-5\">\r\n        <v-col cols=\"6\">\r\n            <v-text-field variant=\"outlined\"\r\n                        persistent-hint\r\n                        v-on:keydown.enter=\"clickItem(filteredList[0])\" \r\n                        label=\"Doorzoek Lijst...\" \r\n                        v-model=\"search\" \r\n                        hint=\"Voeg meerdere filters toe met een komma, enter om bovenste te selecteren\"></v-text-field>\r\n            <v-btn @click=\"getLLSearch(search)\">Request Data</v-btn>\r\n            <div>\r\n                send string: \r\n            {{last_requested}}\r\n            </div>\r\n            Items: \r\n            <v-list class=\"box list scrollable\">\r\n                <v-list-item v-for=\"(item, index) in item_data\" :key=\"index\"  @click=\"selectItem(item)\">\r\n                    <v-list-item-title v-if=\"item.type == 'target'\">\r\n                        <v-row>\r\n                            <v-col cols=\"1\">\r\n                                <span>T{{item.data.id}}</span>\r\n                            </v-col>\r\n                            <v-col>\r\n                                <span>  {{item.data.label}}</span>\r\n\r\n                            </v-col>\r\n                        </v-row>\r\n                    </v-list-item-title>\r\n                    <v-list-item-title v-else>\r\n                        <v-row>\r\n                            <v-col cols=\"1\">\r\n                                <span>Q{{item.data.id}}</span>\r\n                            </v-col>\r\n                            <v-col>\r\n                                <span>  {{item.data.question_text}}</span>\r\n\r\n                            </v-col>\r\n                        </v-row>\r\n                    </v-list-item-title>\r\n                </v-list-item>\r\n            </v-list>\r\n\r\n\r\n        </v-col>\r\n        <v-col cols=\"6\">\r\n            <v-card>\r\n                <div v-if=\"selected.type != ''\">\r\n                    <div v-if=\"selected.type == 'target'\">\r\n                        <v-expansion-panels v-model=\"panel\">\r\n                            <TargetPanel :id=\"selected.id\" />\r\n\r\n                        </v-expansion-panels>\r\n                    </div>\r\n                    <div v-else>\r\n                        <v-expansion-panels v-model=\"panel\">\r\n                            <QuestionPanel :id=\"selected.id\" />\r\n                        </v-expansion-panels>\r\n                    </div>\r\n                </div>\r\n            </v-card>\r\n        </v-col>\r\n\r\n    </v-row>\r\n</div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport QuestionPanel from './components/QuestionPanel'\r\nimport TargetPanel from './components/TargetPanel'\r\n\r\nexport default {\r\n    name: 'SearchItems',\r\n    components: {\r\n    QuestionPanel,\r\n    TargetPanel,\r\n    TargetPanel,\r\n    QuestionPanel\r\n},\r\n    data (){\r\n        return {\r\n\r\n            search: 'test',\r\n            response: {\"status\": false, \"query\": \"\", \"top_k_id\": []},\r\n            last_requested: '',\r\n            selected: {\r\n                'id': '',\r\n                'type': ''\r\n            },\r\n            panel: [0]\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        item_data(){\r\n            const data = []\r\n            this.response.top_k_id.forEach((e) => {\r\n                if (this.splitId(e).type == 'target'){\r\n                    data.push({\r\n                        'type': 'target', \r\n                        'data': this.$store.getters.targetDataFromId(this.splitId(e).id)\r\n                    })\r\n                }\r\n                if (this.splitId(e).type == 'question'){\r\n                    data.push({\r\n                        'type': 'question', \r\n                        'data': this.$store.getters.mcqDataFromId(this.splitId(e).id)\r\n                    })\r\n                }\r\n            })\r\n            return data\r\n        },\r\n        dataLoaded(){\r\n            return  [Object.keys(this.$store.state.datapagina_module.targets).length != 0, \r\n                    Object.keys(this.$store.state.datapagina_module.mcqs).length != 0].every(e => e === true)\r\n        },\r\n\r\n    },\r\n    methods: {\r\n        getLLSearch: async function(string){\r\n            const data = {\r\n                \"query\": string.toString()\r\n            }\r\n            console.log('Sending: ', string, '\\n', 'to: ', 'https://leerlevels-opdrachtscan.herokuapp.com/LL_search_engine')\r\n            const response = axios.post('https://leerlevels-opdrachtscan.herokuapp.com/LL_search_engine', data).then((response) => {\r\n                console.log(response)\r\n                this.response = response.data\r\n                this.last_requested = string\r\n                return response\r\n            })\r\n            return response\r\n        },\r\n        splitId: function(id){\r\n            const data ={}\r\n            data.type = id.slice(0,1) == 'T' ? 'target' : 'question'\r\n            data.id = id.slice(1)\r\n            return data\r\n        },\r\n\r\n        selectItem: function(item){\r\n            this.selected = {'id':item.data.id, 'type': item.type}\r\n        }\r\n    },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.scrollable{\r\n  overflow-y: scroll;\r\n}\r\n.list{\r\n  border: 1px solid steelblue;\r\n  padding: 5px;\r\n  margin: 2px;  \r\n}\r\n.box {\r\n    border: solid;\r\n    outline-color: gray;\r\n    border-width: 1px;\r\n    padding: 3px;\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n    font-size: smaller;\r\n}\r\nspan {\r\n    display: inline-block;\r\n    overflow:hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: pre-line;\r\n    font-size: 93%;\r\n}\r\n</style>","import { render } from \"./SearchItems.vue?vue&type=template&id=0a656c18\"\nimport script from \"./SearchItems.vue?vue&type=script&lang=js\"\nexport * from \"./SearchItems.vue?vue&type=script&lang=js\"\n\nimport \"./SearchItems.vue?vue&type=style&index=0&id=0a656c18&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Site.vue?vue&type=template&id=458f151b\"\nimport script from \"./Site.vue?vue&type=script&lang=js\"\nexport * from \"./Site.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport Site from '../views/Site.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Site',\n    component: Site\n  },\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","import { createStore } from 'vuex'\nimport axios from 'axios'\n\nconst datapagina_module = {\n    state: () => ({\n        // all target data\n        targets: {},\n        // all mcq data\n        mcqs: {},\n        // what items are selected\n        selected_item_ids:{\n            'target': [],\n            'mcq': []\n        },\n        // if something (most often a commit) changed the selected items, \n        // used in: SelectionList.vue\n        selected_items_updated:{\n            'target': false,\n            'mcq': false\n        },\n        endpoint: 'https://leerlevels-data.herokuapp.com/',\n        query_objects: [\n            {\n                path: \"similar_targets\",\n                returns: 'target_list',\n                endpoint: \"\",\n                input: \"target\",\n                request_input: \"set\",\n                input_description: \"Lijst van leerdoel id's\",\n                value: [18,19,2], \n                value_type: \"integer_array\",\n                title: \"Vergelijkbare leerdoelen\",\n                response: [],\n                sending: false,\n                send_ids: [],\n                shown: true,\n                is_request: true,\n            },\n            {\n                path: \"question_list_rank\",\n                returns: 'mcq_list',\n                endpoint: \"\",\n                input: \"question\",\n                request_input: \"question_list\",\n                input_description: \"Lijst van vraag id's\",\n                value: [76,77,78,79], \n                value_type: \"integer_array\",\n                title: \"Sorteren op moeilijkheid\",\n                response: [],\n                sending: false,\n                send_ids: [],\n                shown: true,\n                is_request: true,\n            },\n            {\n                path: \"most_difficult_question\",\n                returns: 'mcq',\n                endpoint: \"\",\n                input: \"target\",\n                request_input: \"target\",\n                input_description: \"Leerdoel id\",\n                value: \"374\", \n                value_type: \"integer\",\n                title: \"Moeilijkste vraag\",\n                response: [],\n                sending: false,\n                send_ids: [],\n                shown: true,\n                is_request: true,\n            },\n            {\n                path: \"answer_distribution\",\n                returns: 'object_list',\n                endpoint: \"\",\n                input: \"mcq\",\n                request_input: \"question_list\",\n                input_description: \"Question Id's\",\n                value: [], \n                value_type: \"integer_array\",\n                title: \"Question distribution by id list\",\n                response: [],\n                sending: false,\n                send_ids: [],\n                shown: false,\n                is_request: true,\n            },\n            {\n                path: \"time_estimate\",\n                returns: '',\n                endpoint: \"\",\n                input: \"mcq\",\n                request_input: \"question_list\",\n                input_description: \"mcq Id's\",\n                value: [], \n                value_type: \"integer_array\",\n                title: \"Get the time a question takes to make\",\n                response: [],\n                sending: false,\n                send_ids: [],\n                shown: false,\n                is_request: true,\n            },\n            {\n                path: \"get_question_data\",\n                returns: 'mcq_list',\n                endpoint: \"\",\n                input: \"mcq\",\n                request_input: \"question_list\",\n                input_description: \"mcq Id's\",\n                value: [], \n                value_type: \"integer_array\",\n                title: \"Vragen Data\",\n                response: [],\n                sending: false,\n                send_ids: [],\n                shown: true,\n                is_request: false,\n                command: function(state, getters) {\n                    this.response = this.value\n                },\n            },\n            {\n                path: \"get_target_data\",\n                returns: 'target_list',\n                endpoint: \"\",\n                input: \"target\",\n                request_input: \"target_list\",\n                input_description: \"Target Id's\",\n                value: [], \n                value_type: \"integer_array\",\n                title: \"Leerdoel Data\",\n                response: [],\n                sending: false,\n                send_ids: [],\n                shown: true,\n                is_request: false,\n                command: function(state, getters) {\n                    this.response = this.value\n                },\n            },\n            {\n                path: \"all_questions_from_targets\",\n                returns: \"mcq_list\",\n                endpoint: \"\",\n                input: \"target\",\n                request_input: \"target_list\",\n                input_description: \"Leerdoel ids\",\n                value: \"\", \n                value_type: \"integer_array\",\n                title: \"Alle Vragen\",\n                response: [],\n                sending: false,\n                send_ids: [],\n                shown: true,\n                is_request: false,\n                command: function(state, getters) {\n                    const all_targets_from_input = this.value.map((e) => {return getters.targetDataFromId(e)})\n                    var mcqs = []\n                    all_targets_from_input.forEach((e) => {\n                        e.mcqs.forEach((e) => {\n                            if (!mcqs.includes(e)){\n                                mcqs.push(e)\n                            }\n                        })\n                    })\n                    this.response = mcqs\n                },\n            },\n            {\n                path: \"all_targets_from_questions\",\n                returns: \"target_list\",\n                endpoint: \"\",\n                input: \"mcq\",\n                request_input: \"mcq_list\",\n                input_description: \"mcq id's\",\n                value: \"\", \n                value_type: \"integer_array\",\n                title: \"Alle Leerdoelen\",\n                response: [],\n                sending: false,\n                send_ids: [],\n                shown: true,\n                is_request: false,\n                command: function(state, getters) {\n                    const all_questions_from_input = this.value.map((e) => {return getters.mcqDataFromId(e)})\n                    var target_ids = []\n                    all_questions_from_input.forEach((e) => {\n                        if (!target_ids.includes(e.target_id)){\n                            target_ids.push(e.target_id)\n                        }\n                    })\n                    this.response = target_ids\n                },\n\n            },\n\n        ],\n        last_clicked_query_object_path: 'similar_targets',\n        selected_tab_path: 'similar_targets',\n        returns: {\n            'mcq': ['mcq', 'mcq_list'],\n            'target': ['target', 'target_list']\n        },\n    }),\n    getters: {\n        // return a list of objects from target or question _data\n        // used in: selectionList, selectors, vuex store\n        selectedItems: (state, getters, commit) => {\n            const data = {\n                'target': state.selected_item_ids['target'].map((id) => {return getters.targetDataFromId(id)}),\n                'mcq': state.selected_item_ids['mcq'].map((id) => {return getters.mcqDataFromId(id)})\n            }\n\n            return data\n        },\n        // returns mcq data from mcq\n        // used in: selectedItems, OutputListTarget, vuex store, QueryOutputTab\n        mcqDataFromId: (state) => (id) => {\n            // const index = state.question_ids.indexOf(Number(id)) // [1, 3, 5, 8]\n            try {\n                return state.mcqs[id]\n            } catch {\n                const return_question = {} //state.empty_question\n                return_question.id = id\n                return return_question\n            }\n        },\n        // returns target data from targets\n        // used in: selectedItems, OutputListTarget, vuex store, QueryOutputTab\n        targetDataFromId: (state) => (id) => {\n            // const index = state.target_ids.indexOf(Number(id))\n            try {\n                return state.targets[id]\n            } catch {\n                return state.empty_target\n            }\n        },\n        // all the ids {'target': [ids], 'mcq': [ids]}\n        // used in: setSelectedItemIds (commit)\n        availableIds: (state) => {\n            return {\n                'target': Object.keys(state.targets),\n                'mcq': Object.keys(state.mcqs)\n            }\n        },\n\n\n        // data = {'value' : value that should be formatted, 'value_type': how the value should be formatted}\n        // used in: postAnswer\n        formatData: () => (data) => {\n            if(data.value_type == 'integer'){\n                return parseInt(data.value[0])\n            } else if (data.value_type == 'integer_array'){\n                if (data.value instanceof Array){\n                    return data.value\n                } else {\n                    return [data.value]\n                }\n            } else {\n                throw(\"Invalid query_type type: \" + data.value_type)\n            }\n        },\n        // returns object of the selected tab query\n        // used in: Selectors\n        selectedTabQueryObj: (state) => {\n            const index = state.query_objects.map((e) => {return e.path}).indexOf(state.selected_tab_path)\n            if (index != -1) {\n                return state.query_objects[index]\n            }\n            else {\n                return undefined\n            }\n        }\n    },\n    mutations: {\n        // used in: vuex store\n        setTargetsData(state, value){\n            state.targets = JSON.parse(JSON.stringify(value))\n        },\n        // used in: vuex store\n        setMcqsData(state, value){\n            state.mcqs = JSON.parse(JSON.stringify(value))\n        },\n        // sets the selected items updated\n        // used in: Selection List\n        setSelectedItemsUpdated: function(state, {value, type}){\n            state.selected_items_updated[type] = value\n        },\n        // sets the selected items\n        // used in: SelectionList: selectionList, Selectors, vuex store\n        setSelectedItemIds: function({state, getters}, {value, type}){\n            value = value.map((e) => {return e.toString()})\n                        .filter((e) => { return this.getters.availableIds[type].includes(e)})\n                        //counter dublicates\n            value = value.filter(function(item, pos) {return value.indexOf(item) == pos;})\n\n            this.state.datapagina_module.selected_item_ids[type] = value\n            this.state.datapagina_module.selected_items_updated[type] = true\n        },\n        // sets the selected items, and does not update the selected items updated\n        // used in: SelectionList: inputbox\n        setSelectedItemIdsFromInputBox: function({state, getters}, {value, type}){\n            value = value.filter((e) => { return this.getters.availableIds[type].includes(e)})\n\n            this.state.datapagina_module.selected_item_ids[type] = value\n        },\n        // adds or removed selected item\n        // used in; SelectionList\n        clickItem: function(state, {id, type}){\n            var index = state.selected_item_ids[type].indexOf(id)\n            if (index != -1) {\n                state.selected_item_ids[type].splice(index, 1)\n            } else {\n                state.selected_item_ids[type].push(id)\n            }\n            state.selected_items_updated[type] = true\n        },\n        // selects all items in ids\n        // used in; SelectionList\n        selectAll: function(state, {ids, type}) {\n            ids.forEach((id) => {\n                // if id is selected and has to be removed or if not selected and has to be added\n                // if (state.selected_item_ids[type].indexOf(id) == -1) {\n                    state.selected_item_ids[type].push(id)\n                // }\n            })\n            state.selected_items_updated[type] = true\n        }, \n        // removed all ids from selected\n        // used in; SelectionList\n        clearAll: function(state, {ids, type}) {\n\n            //new ids = ids of selected items if item is not removed \n            state.selected_item_ids[type] = state.selected_item_ids[type].filter((id) => !ids.includes(id))\n\n            state.selected_items_updated[type] = true\n        },\n\n\n\n        // sets the query\n        // used in; Requesters: sendRequest, vuex store, Requesters\n        setQueryData: function(state, {obj ,name, value}) {\n            const index = state.query_objects.indexOf(obj)\n            if (index != -1) {\n                state.query_objects[index][name] = value\n            }\n        },\n        // sets setLastClickedQueryObjectPath, used for the output tab\n        // used in: submitObj \n        setLastClickedQueryObjectPath: function(state, path){\n            state.last_clicked_query_object_path = path\n        },\n        // add or modify the mcq data from the id\n        // used in: vuex store\n        addMcqDataFromId: function(state, {id, data}){\n            Object.keys(data).forEach((key) => {\n                state.mcqs[id][key] = data[key]\n            })\n        },\n        // add or modify the target data from the id\n        // used in: vuex store\n        addTargetDataFromId: function(state, {id, data}){\n            Object.keys(data).forEach((key) => {\n                state.targets[id][key] = data[key]\n            })\n        },\n\n\n        // sets the selected tab path\n        // used in: ResponseOutput, QueryOutputTab, vuex store\n        setSelectedTabPath: function(state, value){\n            state.selected_tab_path = value\n        },\n\n    },\n    actions: {\n        // load simple data for targets\n        // used in: datapagina \n        loadTargets: async function({dispatch, commit, state, getters}){\n            const request_config = getters.createRequestConfig('simple_target_data')\n            const id = await dispatch('getResponseId', {name: 'simple_target_data', request_config: request_config}).then(response => {return response})\n\n            const response = await dispatch('dataServerRequestApi', {config: request_config, name: 'simple_target_data', id: id})\n            var data = {}\n            response.forEach((e) => {\n                data[e.id.toString()] = e\n            })\n\n\n            commit('setTargetsData', data)\n            return data\n        },\n        // load simple data for mcqs\n        // used in datapagina\n        loadMcqs: async function({dispatch, commit, state, getters}){\n            const request_config = getters.createRequestConfig('simple_mcq_data')\n            const id = await dispatch('getResponseId', {name: 'simple_mcq_data', request_config: request_config}).then(response => {return response})\n\n            const response = await dispatch('dataServerRequestApi', {config: request_config, name: 'simple_mcq_data', id: id})\n            var data = {}\n            response.forEach((e) => {\n                data[e.id.toString()] = e\n            })\n            commit('setMcqsData', data)\n            return data\n        },\n        // send a reuqest from a query obj, and the endpoint\n        // used in: vuex store\n        postAnswer: function({commit, getters, state}, obj){\n            var endpoint = state.endpoint + obj.path\n            var post_object = {}\n            post_object[obj.request_input] = getters.formatData({'value': obj.value, 'value_type': obj.value_type})\n            console.log(\"Sending: \",post_object, \"\\n\",\"to: \",endpoint)\n            return axios.post(endpoint, post_object).then(function(response){\n                console.log(\"Response of : \" + obj.path, '\\n', 'response Data: ', response.data)\n                commit('setQueryData', {'obj': obj, 'name': 'response', 'value': response.data})\n            })\n            .catch(function(error){\n                var full_error = \"Verstuurde data: \"+JSON.stringify(post_object) +\"\\n\\n\"+error\n                commit('setQueryData', {'obj': obj, 'name': 'response', 'value': full_error})\n            })\n        },\n        // sumbit an object (most likely from button)\n        // used in: requesters, requesters\n        submitObj: async function({commit, dispatch, state, getters}, obj){\n            var index = state.query_objects.indexOf(obj)\n            if (index != -1) {\n                commit('setQueryData', {'obj': state.query_objects[index], 'name': 'sending', 'value': true})\n            \n                \n                if (obj.is_request == true){\n                    await dispatch('postAnswer', state.query_objects[index])\n                } else {\n                    obj.command(state, getters)\n                }\n                \n                commit('setLastClickedQueryObjectPath', obj.path)\n\n                // so send_ids doesn't become a pointer to obj.value\n                const value = []\n                const objvalue = obj.value\n                if (objvalue instanceof Number) {\n                    objvalue = [objvalue]\n                }\n                objvalue.forEach((e) => {value.push(e)})\n\n                commit('setQueryData', {'obj':state.query_objects[index], 'name': 'send_ids', 'value': objvalue})\n                \n                if (state.returns.mcq.includes(state.query_objects[index].returns)) {\n                    // if the most difficult question is called\n                    if (state.query_objects[index].response.hasOwnProperty('Question_ID')) {\n                        var responseArray = [Number(state.query_objects[index].response.Question_ID)]\n                    } else\n                    if (state.query_objects[index].response instanceof Array) {\n                        var responseArray = state.query_objects[index].response.map((e) => {return Number(e)})\n                    } else {\n                        var responseArray = [state.query_objects[index].response].map((e) => {return Number(e)})\n                    } \n\n                    await dispatch('getMcqDataFromArray', responseArray)\n                } else if (state.returns.target.includes(state.query_objects[index].returns)){\n                    if (state.query_objects[index].response instanceof Array) {\n                        var responseArray = state.query_objects[index].response.map((e) => {return Number(e)})\n                    } else {\n                        var responseArray = [state.query_objects[index].response].map((e) => {return Number(e)})\n                    } \n                    await dispatch('getTargetDataFromArray', responseArray)\n                }\n\n                commit('setQueryData', {'obj': state.query_objects[index], 'name': 'sending', 'value': false})\n\n            }\n        },\n        // request the input data from the query object, that call the api server\n        // used in: getMcqDataFromArray, getTargetDataFromArray\n        apiRequest: async function({getters, dispatch},{name, input}){\n            const request_config = this.getters.createRequestConfig(name, input)\n            \n            const id = await dispatch('getResponseId', {name, request_config}).then(response => {return response})\n            \n            const data = await dispatch('dataServerRequestApi', {config: request_config, name: name, id: id})\n            \n            return data\n        },\n        // get more data for each question of the returned object that returns questions\n        // used in: postObj, OutputListTarget\n        getMcqDataFromArray: async function({commit, getters, dispatch, state}, responseArray){\n            responseArray = responseArray.map((e) => {return Number(e)})\n            // answer distribution\n            const distribution_obj_index = state.query_objects.findIndex((e) => {return e.path == 'answer_distribution'})\n            commit('setQueryData', {'obj': state.query_objects[distribution_obj_index], 'name': 'value', 'value': responseArray})\n            console.log(state.query_objects[distribution_obj_index])\n\n            const distribution_promise = await dispatch('postAnswer', state.query_objects[distribution_obj_index]).then(function(){\n                state.query_objects[distribution_obj_index].response.forEach((e) => {\n                    if (e.answer_distribution != 'No distribution for this id'){\n                        commit('addMcqDataFromId', {id: e.question_id, data: {'answer_distribution': e.answer_distribution}})\n                    }\n                })\n            })\n\n            // time estimate data\n            const time_estimate_obj_index = state.query_objects.findIndex((e) => {return e.path == 'time_estimate'})\n            commit('setQueryData', {'obj': state.query_objects[time_estimate_obj_index], 'name': 'value', 'value': responseArray})\n\n            const time_estimate_promise = await dispatch('postAnswer', state.query_objects[time_estimate_obj_index]).then(function(){\n                if (state.query_objects[time_estimate_obj_index].response.lenth != 0){\n                    state.query_objects[time_estimate_obj_index].response.forEach((e) => {\n                        const id = e.id\n                        delete e.id\n                        commit('addMcqDataFromId', {id: id, data: {'time_estimate': e}})\n                    })\n                }\n\n            })\n\n            // more data\n            const more_mcq_data = await dispatch('apiRequest', {name: 'mcqs_from_array',input: responseArray}).then(function(response){\n                response.forEach((e) => {\n                    commit('addMcqDataFromId', {id: e.id, data: e})\n                })\n            })\n\n            return Promise.all([distribution_promise, time_estimate_promise, more_mcq_data])\n        },\n        // get more data for each target of the returned object that returns targets\n        // used in: postObj, vuex store\n        getTargetDataFromArray: async function({commit, getters, dispatch, state}, responseArray){\n            responseArray = responseArray.map((e) => {return Number(e)})\n\n            // more data\n            const more_mcq_data = await dispatch('apiRequest', {name: 'targets_from_array',input: responseArray}).then(function(response){\n                response.forEach((e) => {\n                    commit('addTargetDataFromId', {id: e.id, data: e})\n                })\n            })\n\n            return Promise.all([more_mcq_data])\n        },\n    },\n}\n\nconst vrijwilliger_module = {\n    state: () => ({\n        endpoint: 'https://leerlevels-data.herokuapp.com/',\n        query_objects: [\n            {\n                path: \"answer_distribution\",\n                returns: 'object_list',\n                endpoint: \"\",\n                input: \"mcq\",\n                request_input: \"question_list\",\n                input_description: \"Question Id's\",\n                value: [], \n                value_type: \"integer_array\",\n                title: \"Question distribution by id list\",\n                response: [],\n                sending: false,\n                send_ids: [],\n                shown: false,\n                is_request: true,\n            },\n            {\n                path: \"time_estimate\",\n                returns: '',\n                endpoint: \"\",\n                input: \"mcq\",\n                request_input: \"question_list\",\n                input_description: \"mcq Id's\",\n                value: [], \n                value_type: \"integer_array\",\n                title: \"Get the time a question takes to make\",\n                response: [],\n                sending: false,\n                send_ids: [],\n                shown: false,\n                is_request: true,\n            },\n        ],\n        selected_options: {\n            text: 'options',\n            ids: ['365C']\n        }\n    }),\n    getters: {\n        // // returns mcq data from mcq\n        // // used in: selectedItems, OutputListTarget, vuex store, QueryOutputTab\n        // mcqDataFromId: (state) => (id) => {\n        //     // const index = state.question_ids.indexOf(Number(id)) // [1, 3, 5, 8]\n        //     try {\n        //         return state.mcqs[id]\n        //     } catch {\n        //         const return_question = {} //state.empty_question\n        //         return_question.id = id\n        //         return return_question\n        //     }\n        // },\n        // // returns target data from targets\n        // // used in: selectedItems, OutputListTarget, vuex store, QueryOutputTab\n        // targetDataFromId: (state) => (id) => {\n        //     // const index = state.target_ids.indexOf(Number(id))\n        //     try {\n        //         return state.targets[id]\n        //     } catch {\n        //         return state.empty_target\n        //     }\n        // },\n        // // all the ids {'target': [ids], 'mcq': [ids]}\n        // // used in: setSelectedItemIds (commit)\n        // availableIds: (state) => {\n        //     return {\n        //         'target': Object.keys(state.targets),\n        //         'mcq': Object.keys(state.mcqs)\n        //     }\n        // },\n\n\n        // // data = {'value' : value that should be formatted, 'value_type': how the value should be formatted}\n        // // used in: postAnswer\n        // formatData: () => (data) => {\n        //     if(data.value_type == 'integer'){\n        //         return parseInt(data.value[0])\n        //     } else if (data.value_type == 'integer_array'){\n        //         return data.value\n        //     } else {\n        //         throw(\"Invalid query_type type: \" + data.value_type)\n        //     }\n        // },\n\n    },\n    mutations: {\n        setSelectedOptions (state, value){\n            state.selected_options.ids = value\n        },\n        clickOption (state, id){\n            const index = state.selected_options.ids.indexOf(id)\n            if (index == -1){\n                state.selected_options.ids.push(id)\n            } else {\n                state.selected_options.ids.splice(index, 1)\n            }\n        }\n        // // used in: vuex store\n        // setTargetsData(state, value){\n        //     state.targets = JSON.parse(JSON.stringify(value))\n        // },\n        // // used in: vuex store\n        // setMcqsData(state, value){\n        //     state.mcqs = JSON.parse(JSON.stringify(value))\n        // },\n        // // add or modify the mcq data from the id\n        // // used in: vuex store\n        // addMcqDataFromId: function(state, {id, data}){\n        //     Object.keys(data).forEach((key) => {\n        //         state.mcqs[id][key] = data[key]\n        //     })\n        // },\n        // // add or modify the target data from the id\n        // // used in: vuex store\n        // addTargetDataFromId: function(state, {id, data}){\n        //     Object.keys(data).forEach((key) => {\n        //         state.targets[id][key] = data[key]\n        //     })\n        // },\n        // // sets the query\n        // // used in; Requesters: sendRequest, vuex store, Requesters\n        // setQueryData: function(state, {obj ,name, value}) {\n        //     const index = state.query_objects.indexOf(obj)\n        //     if (index != -1) {\n        //         state.query_objects[index][name] = value\n        //     }\n        // },\n        // sets the selected items\n        // used in: SelectionList: selectionList, Selectors, vuex store\n        // setSelectedItemIds: function({state, getters}, {value, type}){\n        //     value = value.map((e) => {return e.toString()})\n        //                 .filter((e) => { return this.getters.availableIds[type].includes(e)})\n        //                 //counter dublicates\n        //     value = value.filter(function(item, pos) {return value.indexOf(item) == pos;})\n\n        //     this.state.fotoinfo_module.selected_item_ids[type] = value\n        //     this.state.fotoinfo_module.selected_items_updated[type] = true\n        // },\n    },\n    actions: {\n//         // load simple data for targets\n//         // used in: datapagina \n//         loadTargets: async function({dispatch, commit, state, getters}){\n//             const request_config = getters.createRequestConfig('simple_target_data')\n//             const id = await dispatch('getResponseId', {name: 'simple_target_data', request_config: request_config}).then(response => {return response})\n\n//             const response = await dispatch('dataServerRequestApi', {config: request_config, name: 'simple_target_data', id: id})\n//             var data = {}\n//             response.forEach((e) => {\n//                 data[e.id.toString()] = e\n//             })\n\n\n//             commit('setTargetsData', data)\n//             return data\n//         },\n//         // load simple data for mcqs\n//         // used in datapagina\n//         loadMcqs: async function({dispatch, commit, state, getters}){\n//             const request_config = getters.createRequestConfig('simple_mcq_data')\n//             const id = await dispatch('getResponseId', {name: 'simple_mcq_data', request_config: request_config}).then(response => {return response})\n\n//             const response = await dispatch('dataServerRequestApi', {config: request_config, name: 'simple_mcq_data', id: id})\n//             var data = {}\n//             response.forEach((e) => {\n//                 data[e.id.toString()] = e\n//             })\n//             commit('setMcqsData', data)\n//             return data\n//         },\n//         // send a reuqest from a query obj, and the endpoint\n//         // used in: vuex store\n//         postAnswer: function({commit, getters, state}, obj){\n//             var endpoint = state.endpoint + obj.path\n//             var post_object = {}\n//             post_object[obj.request_input] = getters.formatData({'value': obj.value, 'value_type': obj.value_type})\n//             console.log(\"Sending: \",post_object, \"\\n\",\"to: \",endpoint)\n//             return axios.post(endpoint, post_object).then(function(response){\n//                 console.log(\"Response of : \" + obj.path, '\\n', 'response Data: ', response.data)\n//                 commit('setQueryData', {'obj': obj, 'name': 'response', 'value': response.data})\n//             })\n//             .catch(function(error){\n//                 var full_error = \"Verstuurde data: \"+JSON.stringify(post_object) +\"\\n\\n\"+error\n//                 commit('setQueryData', {'obj': obj, 'name': 'response', 'value': full_error})\n//             })\n//         },\n//         // sumbit an object (most likely from button)\n//         // used in: requesters, requesters\n//         submitObj: async function({commit, dispatch, state, getters}, obj){\n//             var index = state.query_objects.indexOf(obj)\n//             if (index != -1) {\n//                 commit('setQueryData', {'obj': state.query_objects[index], 'name': 'sending', 'value': true})\n            \n                \n//                 if (obj.is_request == true){\n//                     await dispatch('postAnswer', state.query_objects[index])\n//                 } else {\n//                     obj.command(state, getters)\n//                 }\n                \n//                 commit('setLastClickedQueryObjectPath', obj.path)\n\n//                 // so send_ids doesn't become a pointer to obj.value\n//                 const value = []\n//                 const objvalue = obj.value\n//                 if (objvalue instanceof Number) {\n//                     objvalue = [objvalue]\n//                 }\n//                 objvalue.forEach((e) => {value.push(e)})\n\n//                 commit('setQueryData', {'obj':state.query_objects[index], 'name': 'send_ids', 'value': objvalue})\n                \n//                 if (state.returns.mcq.includes(state.query_objects[index].returns)) {\n//                     // if the most difficult question is called\n//                     if (state.query_objects[index].response.hasOwnProperty('Question_ID')) {\n//                         var responseArray = [Number(state.query_objects[index].response.Question_ID)]\n//                     } else\n//                     if (state.query_objects[index].response instanceof Array) {\n//                         var responseArray = state.query_objects[index].response.map((e) => {return Number(e)})\n//                     } else {\n//                         var responseArray = [state.query_objects[index].response].map((e) => {return Number(e)})\n//                     } \n\n//                     await dispatch('getMcqDataFromArray', responseArray)\n//                 } else if (state.returns.target.includes(state.query_objects[index].returns)){\n//                     if (state.query_objects[index].response instanceof Array) {\n//                         var responseArray = state.query_objects[index].response.map((e) => {return Number(e)})\n//                     } else {\n//                         var responseArray = [state.query_objects[index].response].map((e) => {return Number(e)})\n//                     } \n//                     await dispatch('getTargetDataFromArray', responseArray)\n//                 }\n\n//                 commit('setQueryData', {'obj': state.query_objects[index], 'name': 'sending', 'value': false})\n\n//             }\n//         },\n//         // request the input data from the query object, that call the api server\n//         // used in: getMcqDataFromArray, getTargetDataFromArray\n//         apiRequest: async function({getters, dispatch},{name, input}){\n//             const request_config = this.getters.createRequestConfig(name, input)\n            \n//             const id = await dispatch('getResponseId', {name, request_config}).then(response => {return response})\n            \n//             const data = await dispatch('dataServerRequestApi', {config: request_config, name: name, id: id})\n            \n//             return data\n//         },\n//         // get more data for each question of the returned object that returns questions\n//         // used in: postObj, OutputListTarget\n//         getMcqDataFromArray: async function({commit, getters, dispatch, state}, responseArray){\n//             responseArray = responseArray.map((e) => {return Number(e)})\n//             // answer distribution\n//             const distribution_obj_index = state.query_objects.findIndex((e) => {return e.path == 'answer_distribution'})\n//             commit('setQueryData', {'obj': state.query_objects[distribution_obj_index], 'name': 'value', 'value': responseArray})\n//             console.log(state.query_objects[distribution_obj_index])\n\n//             const distribution_promise = await dispatch('postAnswer', state.query_objects[distribution_obj_index]).then(function(){\n//                 state.query_objects[distribution_obj_index].response.forEach((e) => {\n//                     if (e.answer_distribution != 'No distribution for this id'){\n//                         commit('addMcqDataFromId', {id: e.question_id, data: {'answer_distribution': e.answer_distribution}})\n//                     }\n//                 })\n//             })\n\n//             // time estimate data\n//             const time_estimate_obj_index = state.query_objects.findIndex((e) => {return e.path == 'time_estimate'})\n//             commit('setQueryData', {'obj': state.query_objects[time_estimate_obj_index], 'name': 'value', 'value': responseArray})\n\n//             const time_estimate_promise = await dispatch('postAnswer', state.query_objects[time_estimate_obj_index]).then(function(){\n//                 if (state.query_objects[time_estimate_obj_index].response.lenth != 0){\n//                     state.query_objects[time_estimate_obj_index].response.forEach((e) => {\n//                         const id = e.id\n//                         delete e.id\n//                         commit('addMcqDataFromId', {id: id, data: {'time_estimate': e}})\n//                     })\n//                 }\n\n//             })\n\n//             // more data\n//             const more_mcq_data = await dispatch('apiRequest', {name: 'mcqs_from_array',input: responseArray}).then(function(response){\n//                 response.forEach((e) => {\n//                     commit('addMcqDataFromId', {id: e.id, data: e})\n//                 })\n//             })\n\n//             return Promise.all([distribution_promise, time_estimate_promise, more_mcq_data])\n//         },\n//         // get more data for each target of the returned object that returns targets\n//         // used in: postObj, vuex store\n//         getTargetDataFromArray: async function({commit, getters, dispatch, state}, responseArray){\n//             responseArray = responseArray.map((e) => {return Number(e)})\n\n//             // more data\n//             const more_mcq_data = await dispatch('apiRequest', {name: 'targets_from_array',input: responseArray}).then(function(response){\n//                 response.forEach((e) => {\n//                     commit('addTargetDataFromId', {id: e.id, data: e})\n//                 })\n//             })\n\n//             return Promise.all([more_mcq_data])\n//         },\n    }\n}\nconst fotoinfo_module = {\n    state: () => ({\n\n    }),\n    getters: {\n\n    },\n    mutations: {\n\n    },\n    actions: {\n        \n    }\n}\n\nconst api_module = {\n    state: () => ({\n        query_objects: {\n            'simple_target_data':   {\n                                        'id': 1,\n                                        'name': 'simple_all_target_data',\n                                        //what type should the input be: String\n                                        'input_type': \"None\",\n                                        // Name used by function to know how to call the send var\n                                        'input_name': \"None\",\n                                        //idk\n                                        'response_type': 'list of targets with: id, label, description, mcq_ids',\n                                        //return if there was an error (so the site doesn't crash)\n                                        'empty_response':   [{\n                                                                \"id\": \"0\",\n                                                                \"label\": \"No Label\",\n                                                                \"description\": \"No Description\",\n                                                                \"mcqs\": [\"0\"]\n                                                            }],\n                                                            \n                                        // for the response objects\n                                        // every different request through this object gets it's own response object, so components don't change other's data\n                                        //\n                                        // every response is formatted like '1':{'loading': if the request is still loading, used for loading circle on screen\n                                        //                                       'input'  : The data that was send to the server, used to know if this request was already called, then it just updates the old one\n                                        //                                       'data'   : The data.data that the server returned}\n                                        'response': {},\n                                        //send with the graphQl server, variables do not currently work\n                                        'request_data': {\"query\":`query Target {\n                                                                    targets {\n                                                                        id,\n                                                                        label,\n                                                                        description,\n                                                                        mcqs {\n                                                                            id\n                                                                        }}\n                                                                    }`,\n                                                        \"variables\":{\n\n                                                        }},\n                                        // used to give every new request a unique id\n                                        'current_request_id': 0,\n                                        // the returned data goes throught this function before going to the response, if you want to move some data around for performance or efficiecy\n                                        format_reponse_data: function(data) {\n                                            try {\n                                                data.targets.forEach((e) => {\n                                                    e.mcqs = e.mcqs.map((e) => {return e.id})\n                                                })\n                                                return data.targets\n                                            } catch (error) {\n                                                return data.targets\n                                            }\n                                        }\n                                        },\n            'simple_mcq_data':   {\n                                        'id': 2,\n                                        'name': 'simple_mcq_data',\n                                        //what type should the input be: String\n                                        'input_type': \"None\",\n                                        // Name used by function to know how to call the send var\n                                        'input_name': \"None\",\n                                        //idk\n                                        'response_type': 'list of questions with: id, text and target_id',\n                                        //return if there was an error (so the site doesn't crash)\n                                        'empty_response':   [{\n                                                                \"id\": \"0\",\n                                                                \"question_text\": \"No Question Found\",\n                                                                \"target_id\": \"0\"\n                                                            }],\n                                        // for the response objects\n                                        // every different request through this object gets it's own response object, so components don't change other's data\n                                        //\n                                        // every response is formatted like '1':{'loading': if the request is still loading, used for loading circle on screen\n                                        //                                       'input'  : The data that was send to the server, used to know if this request was already called, then it just updates the old one\n                                        //                                       'data'   : The data.data that the server returned}\n                                        'response': {},\n                                        //send with the graphQl server, variables do not currently work\n                                        'request_data': {\"query\":`query mcqs {\n                                                                        mcqs {\n                                                                        id,\n                                                                        question_text,\n                                                                        target_id,\n                                                                        }\n                                                                    }`,\n                                                        \"variables\":{\n\n                                                        }},\n                                        // used to give every new request a unique id\n                                        'current_request_id': 0,\n                                        // the returned data goes throught this function before going to the response, if you want to move some data around for performance or efficiecy\n                                        format_reponse_data: function(data) {\n                                            try {\n                                                return data.mcqs\n                                            } catch (error) {\n                                                return data.mcqs\n                                            }\n                                        }\n                                    },\n            'targets_from_array':   {\n                                        'id': 3,\n                                        'name': 'targets_from_array',\n                                        //what type should the input be: String\n                                        'input_type': Array,\n                                        // Name used by function to know how to call the send var\n                                        'input_name': \"idArray\",\n                                        //idk\n                                        'response_type': 'list of targets with: id, label, description, mcq_ids, img_url_large, youtube_id, slide_text, slide_title',\n                                        //return if there was an error (so the site doesn't crash)\n                                        'empty_response':   [\n                                                                {\n                                                                \"id\": \"0\",\n                                                                \"label\": \"No Target Found\",\n                                                                \"description\": \"No Description\",\n                                                                \"img_url_large\": \"\",\n                                                                \"mcqs\": [\"0\"],\n                                                                \"youtube_id\": \"dQw4w9WgXcQ\",\n                                                                \"slide_text\": \"No Slide Text\",\n                                                                \"slide_title\": \"No Slide Title\"\n                                                                }\n                                                            ],\n                                        // for the response objects\n                                        // every different request through this object gets it's own response object, so components don't change other's data\n                                        //\n                                        // every response is formatted like '1':{'loading': if the request is still loading, used for loading circle on screen\n                                        //                                       'input'  : The data that was send to the server, used to know if this request was already called, then it just updates the old one\n                                        //                                       'data'   : The data.data that the server returned}\n                                        'response': {},\n                                        //send with the graphQl server, variables do not currently work\n                                        'request_data': {\"query\":`query targets_from_id_array($idArray: [ID]!) {\n                                                                        targets_by_id_array(id_array: $idArray) {\n                                                                        id,\n                                                                        label,\n                                                                        description,\n                                                                        img_url_large,\n                                                                        mcqs {\n                                                                            id\n                                                                        },\n                                                                        youtube_id,\n                                                                        slide_text,\n                                                                        slide_title\n                                                                        }\n                                                                    }`,\n                                                        \"variables\":{\n\n                                                        }},\n                                        // used to give every new request a unique id\n                                        'current_request_id': 0,\n                                        // the returned data goes throught this function before going to the response, if you want to move some data around for performance or efficiecy\n                                        format_reponse_data: function(data) {\n                                            try {\n                                                data.targets_by_id_array.forEach((e) => {\n                                                    e.mcqs = e.mcqs.map((e) => {return e.id})\n                                                });\n                                                return data.targets_by_id_array\n                                            } catch (error) {\n                                                return data.targets_by_id_array\n                                            }\n                                        }\n                                    },\n            'mcqs_from_array':   {\n                                        'id': 4,\n                                        'name': 'mcqs_from_array',\n                                        //what type should the input be: String\n                                        'input_type': Array,\n                                        // Name used by function to know how to call the send var\n                                        'input_name': \"idArray\",\n                                        //idk\n                                        'response_type': 'list of questions with: id, target_id, question_text and answer_options with id, index, text, is_correct, feedback',\n                                        //return if there was an error (so the site doesn't crash)\n                                        'empty_response':   [\n                                                                {\n                                                                \"id\": \"0\",\n                                                                \"target_id\": \"0\",\n                                                                \"question_text\": \"No Question Text Found\",\n                                                                \"answer_options\": [\n                                                                    {\n                                                                    \"feedback\": \"\",\n                                                                    \"is_correct\": true,\n                                                                    \"text\": \"No Option Found\",\n                                                                    \"index\": 0,\n                                                                    \"id\": \"0A\"\n                                                                    },\n                                                                    {\n                                                                    \"feedback\": \"\",\n                                                                    \"is_correct\": false,\n                                                                    \"text\": \"No Option Found\",\n                                                                    \"index\": 1,\n                                                                    \"id\": \"0B\"\n                                                                    },\n                                                                    {\n                                                                    \"feedback\": \"\",\n                                                                    \"is_correct\": false,\n                                                                    \"text\": \"No Option Found\",\n                                                                    \"index\": 2,\n                                                                    \"id\": \"0C\"\n                                                                    },\n                                                                    {\n                                                                    \"feedback\": \"\",\n                                                                    \"is_correct\": false,\n                                                                    \"text\": \"No Option Found\",\n                                                                    \"index\": 3,\n                                                                    \"id\": \"0D\"\n                                                                    }\n                                                                ]\n                                                                }\n                                                            ],\n                                        // for the response objects\n                                        // every different request through this object gets it's own response object, so components don't change other's data\n                                        //\n                                        // every response is formatted like '1':{'loading': if the request is still loading, used for loading circle on screen\n                                        //                                       'input'  : The data that was send to the server, used to know if this request was already called, then it just updates the old one\n                                        //                                       'data'   : The data.data that the server returned}\n                                        'response': {},\n                                        //send with the graphQl server, variables do not currently work\n                                        'request_data': {\"query\":`query mcqs_by_id_array($idArray: [ID]!) {\n                                                                        mcqs_by_id_array(id_array: $idArray) {\n                                                                                id,\n                                                                                target_id,\n                                                                                question_text,\n                                                                                answer_options {\n                                                                                    id,\n                                                                                    index,\n                                                                                    text,\n                                                                                    is_correct,\n                                                                                    feedback,\n                                                                                }\n                                                                                }\n                                                                            }`,\n                                                        \"variables\":{\n\n                                                        }},\n                                        // used to give every new request a unique id\n                                        'current_request_id': 0,\n                                        // the returned data goes throught this function before going to the response, if you want to move some data around for performance or efficiecy\n                                        format_reponse_data: function(data) {\n                                            try {\n                                                data.mcqs_by_id_array.forEach((e) => {\n                                                    e.mcqs = e.mcqs.map((e) => {return e.id})\n                                                });\n                                                return data.mcqs_by_id_array\n                                            } catch (error) {\n                                                return data.mcqs_by_id_array\n                                            }\n                                        }\n                                    },\n\n        },\n        data_server_responses: {},\n    }),\n    getters: {\n        createRequestConfig: (state) => (name, input) => {\n            const url = 'https://leerlevels-data-server.herokuapp.com/'\n            const headers = { \n                'Authorization': 'Z-@rtN3dpaaa', \n                'Content-Type': 'application/json'\n            }\n            const request_data = state.query_objects[name].request_data\n            // const data = JSON.parse(request_data_string)\n            input = input || {}\n            if (!input instanceof Object) {\n                const input_type = state.query_objects[name].input_type\n                if (input instanceof input_type){\n                    if (input_type == Array) {\n                        input = [input]\n                    }\n                    if (input_type == Number) {\n                        input = Number(input)\n                    }\n                    if (input_type == String) {\n                        input = input.toString()\n                    }\n                }\n            }\n            const key_name = state.query_objects[name].input_name\n            request_data.variables[key_name] = input\n\n            return {\n                url: url,\n                method: 'post',\n                data: JSON.stringify(request_data),\n                headers: headers,\n            }\n        },\n        // used to know if you already send this request (so you will )\n        sendRequestsInput: (state) => (name) => {\n            return Object.keys(state.query_objects[name].response).map(id => state.query_objects[name].response[id].input)\n        },\n        responseKeys: (state) => (name) => {\n            return Object.keys(state.query_objects[name].response)\n        },\n        responseData: (state) => {\n            const data = {}\n            Object.keys(state.query_objects).forEach((e) => {\n                data[e] = {}\n                Object.keys(state.query_objects[e].response).forEach((j) => {\n                    data[e][j] = state.query_objects[e].response[j]\n                })\n            })\n            return data\n        }\n    },\n    mutations: {\n        setQueryObjectResponseData: function(state, {name, id, value}){\n            state.query_objects[name].response[id].data = value\n        },\n        setQueryObjectResponseLoading: function(state, {name, id, value}){\n            state.query_objects[name].response[id].loading = value\n        },\n        setQueryObjectResponseInput: function(state, {name, id, value}){\n            state.query_objects[name].response[id].input = value\n        },\n        \n        createEmptyResponse: function(state, {name, id}) {\n            state.query_objects[name].response[id] = {\n                input: {},\n                loading: false,\n                data: state.query_objects[name].empty_response\n            }\n        },\n        incrementQueryObjectRequestId: function(state, name){\n            state.query_objects[name].current_request_id = state.query_objects[name].current_request_id + 1\n        }\n\n\n    },\n    actions: {\n        getResponseId: function({state ,getters, commit},{name, request_config}) {\n            if (getters.sendRequestsInput(name).lenth == 0){\n                return 0\n            } else {\n                var index = getters.sendRequestsInput(name).indexOf(request_config.data)\n                if (index != -1) {\n                    return Object.keys(state.query_objects[name].response)[index]\n                } else {\n                    commit('incrementQueryObjectRequestId', name)\n                    const id = state.query_objects[name].current_request_id\n                    commit('createEmptyResponse', {name, id})\n                    \n                    return id\n                }\n            }\n        },\n        dataServerRequestApi: async function({state, commit}, {config, name, id}){\n            commit('setQueryObjectResponseLoading',{name:name, id:id, value:true})\n            commit('setQueryObjectResponseInput',{name:name, id:id, value: config.data})\n            console.log('sending: ', name, '\\n', ' input: ', JSON.parse(config.data))\n\n            const data = await axios(config).then(function(response){\n                console.log('Response: ', name, '\\n', ' stored at: ', id, '\\n', ' data: ', response.data.data)\n                const data = state.query_objects[name].format_reponse_data(response.data.data)\n                commit('setQueryObjectResponseData', {name:name, id:id, value:data})\n                commit('setQueryObjectResponseLoading', {name:name, id:id, value:false})\n                return data\n            })\n            return data\n        } \n    },\n    modules: {\n    }\n}\n\nexport default createStore({\n    modules: {\n        api_module: api_module,\n        datapagina_module: datapagina_module,\n        vrijwilliger_module: vrijwilliger_module,\n        fotoinfo_module: fotoinfo_module}\n})\n\n","// Styles\nimport '@mdi/font/css/materialdesignicons.css'\nimport 'vuetify/styles'\n\n// Vuetify\nimport { createVuetify } from 'vuetify'\n\nexport default createVuetify(\n  // https://vuetifyjs.com/en/introduction/why-vuetify/#feature-guides\n)\n","/**\n * plugins/webfontloader.js\n *\n * webfontloader documentation: https://github.com/typekit/webfontloader\n */\n\nexport async function loadFonts () {\n  const webFontLoader = await import(/* webpackChunkName: \"webfontloader\" */'webfontloader')\n\n  webFontLoader.load({\n    google: {\n      families: ['Roboto:100,300,400,500,700,900&display=swap'],\n    },\n  })\n}\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport vuetify from './plugins/vuetify'\r\nimport { loadFonts } from './plugins/webfontloader'\r\n\r\nloadFonts()\r\n\r\ncreateApp(App)\r\n  .use(router)\r\n  .use(store)\r\n  .use(vuetify)\r\n  .mount('#app')\r\n","<template>\r\n<v-expansion-panel style=\"width: 100%\" v-if=\"render\">\r\n    <v-expansion-panel-title>\r\n        <v-row>\r\n            <v-col cols=\"1\" class=\"ma-0 px-0 text-right\">\r\n                <label >{{mcq_data.id}}</label>\r\n            </v-col>\r\n            <v-col>\r\n                {{mcq_data.question_text}}\r\n            </v-col>\r\n\r\n        </v-row>\r\n\r\n    </v-expansion-panel-title>    \r\n    <v-expansion-panel-text>\r\n        <v-expansion-panels>\r\n            <!-- leerdoel id -->\r\n            <v-expansion-panel>\r\n                <v-expansion-panel-title class=\"ma-0\">\r\n                    <p>Leerdoel Id:</p>\r\n                </v-expansion-panel-title>\r\n                <v-expansion-panel-text >\r\n                    <p class=\"box\">{{mcq_data.target_id}}</p>\r\n                </v-expansion-panel-text >\r\n            </v-expansion-panel>\r\n            <!-- options -->\r\n            <v-expansion-panel v-if=\"Object.keys(mcq_data).includes('answer_options')\">\r\n                <v-expansion-panel-title class=\"ma-0\">\r\n                    <p>Keuzes:</p>\r\n                </v-expansion-panel-title>\r\n                <v-expansion-panel-text >\r\n                    <v-table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"left-text\">\r\n                                    #\r\n                                </th>\r\n                                <th class=\"left-text\">\r\n                                    Option\r\n                                </th>\r\n                                <th class=\"left-text\" v-if=\"Object.keys(mcq_data).includes('answer_distribution')\">\r\n                                Aantal\r\n                                </th>\r\n                                <th class=\"left-text\" v-if=\"Object.keys(mcq_data).includes('answer_distribution')\">\r\n                                    %\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(option, index) in mcq_data.answer_options\" :key=\"index\" :style=\"{'background-color': option.is_correct ? '#afff7d': 'white'}\">\r\n                                    <td>\r\n                                        <span>{{option.id}}</span>\r\n                                    </td>\r\n                                    <td>{{option.text}}</td>\r\n                                    <td v-if=\"Object.keys(mcq_data).includes('answer_distribution')\">\r\n                                        <span>{{mcq_data.answer_distribution[option.id]}}</span>\r\n                                    </td>\r\n                                    <td v-if=\"Object.keys(mcq_data).includes('answer_distribution')\">\r\n                                        <span class=\"text-right\">{{Math.round(mcq_data.answer_distribution[option.id] / totalAnswerDistribution(mcq_data.answer_distribution) * 100)}}</span>\r\n                                    </td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </v-table>\r\n                </v-expansion-panel-text >\r\n            </v-expansion-panel>\r\n            <!-- tijd data -->\r\n            <v-expansion-panel v-if=\"Object.keys(mcq_data).includes('time_estimate')\">\r\n                <v-expansion-panel-title class=\"ma-0\">\r\n                    <p>Tijd Data</p>\r\n                </v-expansion-panel-title>\r\n                <v-expansion-panel-text>\r\n                    <v-table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"left-text\">\r\n                                    <p>Type</p>\r\n                                </th>\r\n                                <th class=\"left-text\">\r\n                                    <p>Data</p>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <!-- <div v-if=\"'time_estimate' in mcq_data.description\"> -->\r\n                                <tr v-for=\"(key, index) in Object.keys(mcq_data.time_estimate)\" :key=\"index\">\r\n                                    <td>{{key}}</td>\r\n                                    <td>{{parseFloat(mcq_data.time_estimate[key]).toFixed(2)}}s</td>\r\n                                </tr>\r\n                            <!-- </div> -->\r\n                        </tbody>\r\n                    </v-table>\r\n                </v-expansion-panel-text>\r\n            </v-expansion-panel>\r\n            <!-- target -->\r\n            <v-expansion-panel v-if=\"!no_target\">\r\n                <v-expansion-panel-title class=\"ma-0\">\r\n                    <p>Leerdoel</p>\r\n                </v-expansion-panel-title>\r\n                <v-expansion-panel-text >\r\n                    <v-expansion-panels>\r\n                        <TargetPanel :id=\"mcq_data.target_id\" />\r\n                    </v-expansion-panels>\r\n                </v-expansion-panel-text >\r\n            </v-expansion-panel>\r\n        </v-expansion-panels>\r\n\r\n    </v-expansion-panel-text>\r\n</v-expansion-panel>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport {defineAsyncComponent} from 'vue' \r\n\r\nexport default {\r\n    name: 'QuestionPanel',\r\n    props: {\r\n        id: {type:[Number, String], default: 0},\r\n        obj: {type: Object, default: null},\r\n        no_target: {type: Boolean, default: false},\r\n    },\r\n    components: {\r\n        TargetPanel: defineAsyncComponent(() => import('./TargetPanel.vue'))\r\n    },\r\n    data (){\r\n        return {\r\n            render: true,\r\n            mcq_data: {},\r\n            query_objects: [\r\n                {\r\n                    path: \"answer_distribution\",\r\n                    returns: 'object_list',\r\n                    endpoint: \"\",\r\n                    input: \"mcq\",\r\n                    request_input: \"question_list\",\r\n                    input_description: \"Question Id's\",\r\n                    value: [], \r\n                    value_type: \"integer_array\",\r\n                    title: \"Question distribution by id list\",\r\n                    response: [],\r\n                    sending: false,\r\n                    send_ids: [],\r\n                    shown: false,\r\n                    is_request: true,\r\n                },\r\n                {\r\n                    path: \"time_estimate\",\r\n                    returns: '',\r\n                    endpoint: \"\",\r\n                    input: \"mcq\",\r\n                    request_input: \"question_list\",\r\n                    input_description: \"mcq Id's\",\r\n                    value: [], \r\n                    value_type: \"integer_array\",\r\n                    title: \"Get the time a question takes to make\",\r\n                    response: [],\r\n                    sending: false,\r\n                    send_ids: [],\r\n                    shown: false,\r\n                    is_request: true,\r\n                },\r\n                {\r\n                    'id': 4,\r\n                    'path': 'mcqs_from_array',\r\n                    //what type should the input be: String\r\n                    'input_type': Array,\r\n                    // Name used by function to know how to call the send var\r\n                    'input_name': \"idArray\",\r\n                    //idk\r\n                    'response_type': 'list of questions with: id, target_id, question_text and answer_options with id, index, text, is_correct, feedback',\r\n                    //return if there was an error (so the site doesn't crash)\r\n                    'empty_response':   [\r\n                                            {\r\n                                            \"id\": \"0\",\r\n                                            \"target_id\": \"0\",\r\n                                            \"question_text\": \"No Question Text Found\",\r\n                                            \"answer_options\": [\r\n                                                {\r\n                                                \"feedback\": \"\",\r\n                                                \"is_correct\": true,\r\n                                                \"text\": \"No Option Found\",\r\n                                                \"index\": 0,\r\n                                                \"id\": \"0A\"\r\n                                                },\r\n                                                {\r\n                                                \"feedback\": \"\",\r\n                                                \"is_correct\": false,\r\n                                                \"text\": \"No Option Found\",\r\n                                                \"index\": 1,\r\n                                                \"id\": \"0B\"\r\n                                                },\r\n                                                {\r\n                                                \"feedback\": \"\",\r\n                                                \"is_correct\": false,\r\n                                                \"text\": \"No Option Found\",\r\n                                                \"index\": 2,\r\n                                                \"id\": \"0C\"\r\n                                                },\r\n                                                {\r\n                                                \"feedback\": \"\",\r\n                                                \"is_correct\": false,\r\n                                                \"text\": \"No Option Found\",\r\n                                                \"index\": 3,\r\n                                                \"id\": \"0D\"\r\n                                                }\r\n                                            ]\r\n                                            }\r\n                                        ],\r\n                    // for the response objects\r\n                    // every different request through this object gets it's own response object, so components don't change other's data\r\n                    //\r\n                    // every response is formatted like '1':{'loading': if the request is still loading, used for loading circle on screen\r\n                    //                                       'input'  : The data that was send to the server, used to know if this request was already called, then it just updates the old one\r\n                    //                                       'data'   : The data.data that the server returned}\r\n                    'response': {},\r\n                    //send with the graphQl server, variables do not currently work\r\n                    'request_data': {\"query\":`query mcqs_by_id_array($idArray: [ID]!) {\r\n                                                    mcqs_by_id_array(id_array: $idArray) {\r\n                                                            id,\r\n                                                            target_id,\r\n                                                            question_text,\r\n                                                            answer_options {\r\n                                                                id,\r\n                                                                index,\r\n                                                                text,\r\n                                                                is_correct,\r\n                                                                feedback,\r\n                                                            }\r\n                                                            }\r\n                                                        }`,\r\n                                    \"variables\":{\r\n\r\n                                    }},\r\n                    // used to give every new request a unique id\r\n                    'current_request_id': 0,\r\n                    // the returned data goes throught this function before going to the response, if you want to move some data around for performance or efficiecy\r\n                    format_reponse_data: function(data) {\r\n                        try {\r\n                            data.mcqs_by_id_array.forEach((e) => {\r\n                                e.mcqs = e.mcqs.map((e) => {return e.id})\r\n                            });\r\n                            return data.mcqs_by_id_array\r\n                        } catch (error) {\r\n                            return data.mcqs_by_id_array\r\n                        }\r\n                    }\r\n                },\r\n            ],\r\n        }\r\n    },\r\n\r\n    computed: {\r\n    },\r\n    methods: {\r\n        forceRender: function(){\r\n            this.render = false;\r\n\r\n            this.$nextTick(() => {\r\n                this.render = true;\r\n            })\r\n        },\r\n        totalAnswerDistribution: function(answer_distribution){\r\n            var total = 0\r\n            Object.values(answer_distribution).forEach((e) => {\r\n                total = total + Number(e)\r\n            })\r\n            return total\r\n        },\r\n        // data = {'value' : value that should be formatted, 'value_type': how the value should be formatted}\r\n        // used in: postAnswer\r\n        formatData: function(data) {\r\n            if(data.value_type == 'integer'){\r\n                return parseInt(data.value[0])\r\n            } else if (data.value_type == 'integer_array'){\r\n                return data.value\r\n            } else {\r\n                throw(\"Invalid query_type type: \" + data.value_type)\r\n            }\r\n        },        \r\n        getResponseId: function(name, request_config) {\r\n            const index_of_obj = this.query_objects.findIndex((e) => {return e.path == name})\r\n\r\n            if (Object.keys(this.query_objects[index_of_obj].response).map(id => this.query_objects[index_of_obj].response[id].input).lenth == 0){\r\n                return 0\r\n            } else {\r\n                var index = Object.keys(this.query_objects[index_of_obj].response).map(id => this.query_objects[index_of_obj].response[id].input).indexOf(request_config.data)\r\n                if (index != -1) {\r\n                    return Object.keys(this.query_objects[index_of_obj].response)[index]\r\n                } else {\r\n                    this.query_objects[index_of_obj].current_request_id += 1\r\n                    const id = this.query_objects[index_of_obj].current_request_id\r\n                    this.query_objects[index_of_obj].response[id] = {\r\n                        input: {},\r\n                        loading: false,\r\n                        data: this.query_objects[index_of_obj].empty_response\r\n                    }\r\n                    \r\n                    return id\r\n                }\r\n            }\r\n        },\r\n        createRequestConfig: function(name, input) {\r\n            const index_of_obj = this.query_objects.findIndex((e) => {return e.path == name})\r\n\r\n            const url = 'https://leerlevels-data-server.herokuapp.com/'\r\n            const headers = { \r\n                'Authorization': 'Z-@rtN3dpaaa', \r\n                'Content-Type': 'application/json'\r\n            }\r\n\r\n            const request_data = this.query_objects[index_of_obj].request_data\r\n            // const data = JSON.parse(request_data_string)\r\n            input = input || {}\r\n            if (!input instanceof Object) {\r\n                const input_type = this.query_objects[index_of_obj].input_type\r\n                if (input instanceof input_type){\r\n                    if (input_type == Array) {\r\n                        input = [input]\r\n                    }\r\n                    if (input_type == Number) {\r\n                        input = Number(input)\r\n                    }\r\n                    if (input_type == String) {\r\n                        input = input.toString()\r\n                    }\r\n                }\r\n            }\r\n            const key_name = this.query_objects[index_of_obj].input_name\r\n            request_data.variables[key_name] = input\r\n\r\n            return {\r\n                url: url,\r\n                method: 'post',\r\n                data: JSON.stringify(request_data),\r\n                headers: headers,\r\n            }\r\n        },\r\n        dataServerRequestApi: async function(config, name, id){\r\n            var index_of_obj = this.query_objects.findIndex((e) => {return e.path == name})\r\n\r\n            this.query_objects[index_of_obj].response[id].loading = true\r\n            this.query_objects[index_of_obj].response[id].input = config.data\r\n            console.log('sending: ', name, '\\n', ' input: ', JSON.parse(config.data))\r\n\r\n\r\n            const data = await axios(config).then((response) => {\r\n                console.log('Response: ', name, '\\n', ' stored at: ', id, '\\n', ' data: ', response.data.data)\r\n                const data = this.query_objects[index_of_obj].format_reponse_data(response.data.data)\r\n                this.query_objects[index_of_obj].response[id].data = data\r\n\r\n                this.query_objects[index_of_obj].loading = false\r\n                return data\r\n            })\r\n            return data\r\n        },\r\n        // request the input data from the query object, that call the api server\r\n        // used in: getMcqDataFromArray, getTargetDataFromArray\r\n        apiRequest: async function(name, input){\r\n            const request_config = this.createRequestConfig(name, input)\r\n            \r\n            const id = await this.getResponseId(name, request_config)\r\n            \r\n            const data = await this.dataServerRequestApi(request_config, name, id)\r\n            \r\n            return data\r\n        },\r\n        // send a reuqest from a query obj, and the endpoint\r\n        // used in: vuex store\r\n        postAnswer: function(obj){\r\n            var index_of_obj = this.query_objects.indexOf(obj)\r\n\r\n            var endpoint = 'https://leerlevels-data.herokuapp.com/' + obj.path\r\n            var post_object = {}\r\n            post_object[obj.request_input] = this.formatData({'value': obj.value, 'value_type': obj.value_type})\r\n            console.log(\"Sending: \",post_object, \"\\n\",\"to: \",endpoint)\r\n            return axios.post(endpoint, post_object).then((response) => {\r\n                console.log(\"Response of : \" + obj.path, '\\n', 'response Data: ', response.data)\r\n                this.query_objects[index_of_obj].response = response.data\r\n                return response\r\n            })\r\n            .catch(function(error){\r\n                var full_error = \"Verstuurde data: \"+JSON.stringify(post_object) +\"\\n\\n\"+error\r\n            })\r\n        },\r\n        loadMcqDataFromArray: async function(responseArray){\r\n            responseArray = responseArray.map((e) => {return Number(e)})\r\n\r\n            // more data\r\n            const more_mcq_data = await this.apiRequest('mcqs_from_array', responseArray).then((response) => {\r\n                response.forEach((e) => {\r\n                    Object.keys(e).forEach((key) => {\r\n                        this.mcq_data[key] = e[key]\r\n                    })\r\n                })\r\n            })\r\n\r\n            // answer distribution\r\n            const distribution_obj_index = this.query_objects.findIndex((e) => {return e.path == 'answer_distribution'})\r\n            this.query_objects[distribution_obj_index].value = responseArray\r\n\r\n            const distribution_promise = await this.postAnswer(this.query_objects[distribution_obj_index]).then(() => {\r\n                this.query_objects[distribution_obj_index].response.forEach((e) => {\r\n                    if (e.answer_distribution != 'No distribution for this id'){\r\n                        this.mcq_data.answer_distribution = e.answer_distribution\r\n                    }\r\n                })\r\n            })\r\n\r\n            // time estimate data\r\n            const time_estimate_obj_index = this.query_objects.findIndex((e) => {return e.path == 'time_estimate'})\r\n            this.query_objects[time_estimate_obj_index].value = responseArray\r\n\r\n            const time_estimate_promise = await this.postAnswer(this.query_objects[time_estimate_obj_index]).then(() => {\r\n                if (this.query_objects[time_estimate_obj_index].response.lenth != 0){\r\n                    this.query_objects[time_estimate_obj_index].response.forEach((e) => {\r\n                        const id = e.id\r\n                        delete e.id\r\n                        this.mcq_data.time_estimate = e\r\n                    })\r\n                }\r\n\r\n            })\r\n\r\n            return Promise.all([more_mcq_data, distribution_promise, time_estimate_promise])\r\n        }\r\n\r\n    },\r\n    created() {\r\n        if (this.obj == null){\r\n            this.loadMcqDataFromArray([this.id]).then(()=>{this.forceRender})\r\n        } else {\r\n            this.mcq_data = this.obj\r\n        }\r\n    },\r\n    watch: {\r\n        obj (new_value){\r\n        this.mcq_data = new_value\r\n        },\r\n        id (){\r\n            this.loadMcqDataFromArray([this.id])\r\n        },\r\n\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import { render } from \"./QuestionPanel.vue?vue&type=template&id=2e869b6c\"\nimport script from \"./QuestionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./QuestionPanel.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<v-expansion-panel style=\"width: 100%\">\r\n    <v-expansion-panel-title>\r\n        <v-row>\r\n            <v-col cols=\"1\" class=\"ma-0 px-0 text-right\">\r\n                <label >{{target_data.id}}</label>\r\n            </v-col>\r\n            <v-col>\r\n                {{target_data.label}}\r\n            </v-col>\r\n\r\n        </v-row>\r\n\r\n    </v-expansion-panel-title>    \r\n    <v-expansion-panel-text>\r\n        <div>\r\n            <!-- if description is an string, show the string, if it's an obj sort and format the obj and show it nicer -->\r\n                <v-expansion-panels>\r\n                    <!-- description -->\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Beschrijving</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <p class=\"box\" >{{target_data.description}}</p>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- vraag ids -->\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Vraag Ids</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <p class=\"box\" >{{target_data.mcqs.toString()}}</p>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- Youtube video -->\r\n                    <v-expansion-panel v-if=\"Object.keys(target_data).includes('youtube_id')\">\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Video</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text >\r\n                            <iframe :src=\"'https://www.youtube.com/embed/' + target_data.youtube_id\"  \r\n                                    allow=\"accelerometer; \r\n                                            autoplay; \r\n                                            encrypted-media; \r\n                                            gyroscope; \r\n                                            picture-in-picture\" \r\n                                    style=\"display: block; height:480px\"\r\n                                    width=\"100%\"\r\n                                    \r\n                                    allowfullscreen></iframe>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- Slide -->\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Slide</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <div v-if=\"Object.keys(target_data).includes('img_url_large')\">\r\n                                <img :src=\"target_data.img_url_large\" alt=\"Target Photo\" width=\"300\">\r\n                            </div>\r\n                            <v-row  v-if=\"Object.keys(target_data).includes('slide_title')\">\r\n                                <v-col cols=\"2\">\r\n                                    <span class=\"pa-0 ma-0\">Slide Titel: </span>\r\n                                </v-col>\r\n                                <v-col cols=\"10\">\r\n                                    <span class=\"pa-0 ma-0\">{{target_data.slide_title}}</span>\r\n                                </v-col>\r\n                            </v-row>\r\n                            <hr  v-if=\"Object.keys(target_data).includes('slide_title') && Object.keys(target_data).includes('slide_text')\">\r\n                            <v-row v-if=\"Object.keys(target_data).includes('slide_text')\">\r\n                                <v-col cols=\"2\">\r\n                                    <span class=\"pa-0 ma-0\">Slide Text: </span>\r\n                                </v-col>\r\n                                <v-col cols=\"10\">\r\n                                    <span class=\"pa-0 ma-0\">{{target_data.slide_text}}</span>\r\n                                </v-col>\r\n                            </v-row>\r\n\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel >\r\n                    <!-- Questions Data -->\r\n                    <v-expansion-panel v-if=\"questions_loaded\">\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Vragen</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <v-expansion-panels>\r\n                                <div v-for=\"(mcq, index) in mcq_data\" :key=\"index\">\r\n                                    <QuestionPanel :obj=\"mcq\" :no_target=\"true\" />\r\n                                </div>\r\n                            </v-expansion-panels>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                    <!-- Tijd Data -->\r\n                    <v-expansion-panel v-if=\"Object.keys(target_data).includes('mcqs')\">\r\n                        <v-expansion-panel-title class=\"ma-0\">\r\n                            <p>Tijd Data</p>\r\n                        </v-expansion-panel-title>\r\n                        <v-expansion-panel-text>\r\n                            <v-table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"left-text\">\r\n                                            <p>Type</p>\r\n                                        </th>\r\n                                        <th class=\"left-text\">\r\n                                            <p>Data</p>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <!-- <div v-if=\"'time_estimate' in target_data.description\"> -->\r\n                                        <tr v-for=\"(key, index) in Object.keys(time_data)\" :key=\"index\">\r\n                                            <td>{{key}}</td>\r\n                                            <td>{{parseFloat(time_data[key]).toFixed(2)}}s</td>\r\n                                        </tr>\r\n                                    <!-- </div> -->\r\n                                </tbody>\r\n                            </v-table>\r\n                        </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                </v-expansion-panels>\r\n\r\n            </div>\r\n\r\n    </v-expansion-panel-text>\r\n</v-expansion-panel>\r\n</template>\r\n\r\n<script>\r\nimport {defineAsyncComponent} from 'vue' \r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'TargetPanel',\r\n    components: {\r\n        QuestionPanel: defineAsyncComponent(() => import('./QuestionPanel.vue')),\r\n    },\r\n    props: {\r\n        id: [Number, String],\r\n    },\r\n    data() {\r\n        return {\r\n            questions_loaded: false,\r\n            mcq_data: [],\r\n            target_data: {},\r\n            query_objects: [\r\n                {\r\n                    path: \"answer_distribution\",\r\n                    returns: 'object_list',\r\n                    endpoint: \"\",\r\n                    input: \"mcq\",\r\n                    request_input: \"question_list\",\r\n                    input_description: \"Question Id's\",\r\n                    value: [], \r\n                    value_type: \"integer_array\",\r\n                    title: \"Question distribution by id list\",\r\n                    response: [],\r\n                    sending: false,\r\n                    send_ids: [],\r\n                    shown: false,\r\n                    is_request: true,\r\n                },\r\n                {\r\n                    path: \"time_estimate\",\r\n                    returns: '',\r\n                    endpoint: \"\",\r\n                    input: \"mcq\",\r\n                    request_input: \"question_list\",\r\n                    input_description: \"mcq Id's\",\r\n                    value: [], \r\n                    value_type: \"integer_array\",\r\n                    title: \"Get the time a question takes to make\",\r\n                    response: [],\r\n                    sending: false,\r\n                    send_ids: [],\r\n                    shown: false,\r\n                    is_request: true,\r\n                },\r\n                {\r\n                    'id': 4,\r\n                    'path': 'mcqs_from_array',\r\n                    //what type should the input be: String\r\n                    'input_type': Array,\r\n                    // Name used by function to know how to call the send var\r\n                    'input_name': \"idArray\",\r\n                    //idk\r\n                    'response_type': 'list of questions with: id, target_id, question_text and answer_options with id, index, text, is_correct, feedback',\r\n                    //return if there was an error (so the site doesn't crash)\r\n                    'empty_response':   [\r\n                                            {\r\n                                            \"id\": \"0\",\r\n                                            \"target_id\": \"0\",\r\n                                            \"question_text\": \"No Question Text Found\",\r\n                                            \"answer_options\": [\r\n                                                {\r\n                                                \"feedback\": \"\",\r\n                                                \"is_correct\": true,\r\n                                                \"text\": \"No Option Found\",\r\n                                                \"index\": 0,\r\n                                                \"id\": \"0A\"\r\n                                                },\r\n                                                {\r\n                                                \"feedback\": \"\",\r\n                                                \"is_correct\": false,\r\n                                                \"text\": \"No Option Found\",\r\n                                                \"index\": 1,\r\n                                                \"id\": \"0B\"\r\n                                                },\r\n                                                {\r\n                                                \"feedback\": \"\",\r\n                                                \"is_correct\": false,\r\n                                                \"text\": \"No Option Found\",\r\n                                                \"index\": 2,\r\n                                                \"id\": \"0C\"\r\n                                                },\r\n                                                {\r\n                                                \"feedback\": \"\",\r\n                                                \"is_correct\": false,\r\n                                                \"text\": \"No Option Found\",\r\n                                                \"index\": 3,\r\n                                                \"id\": \"0D\"\r\n                                                }\r\n                                            ]\r\n                                            }\r\n                                        ],\r\n                    // for the response objects\r\n                    // every different request through this object gets it's own response object, so components don't change other's data\r\n                    //\r\n                    // every response is formatted like '1':{'loading': if the request is still loading, used for loading circle on screen\r\n                    //                                       'input'  : The data that was send to the server, used to know if this request was already called, then it just updates the old one\r\n                    //                                       'data'   : The data.data that the server returned}\r\n                    'response': {},\r\n                    //send with the graphQl server, variables do not currently work\r\n                    'request_data': {\"query\":`query mcqs_by_id_array($idArray: [ID]!) {\r\n                                                    mcqs_by_id_array(id_array: $idArray) {\r\n                                                            id,\r\n                                                            target_id,\r\n                                                            question_text,\r\n                                                            answer_options {\r\n                                                                id,\r\n                                                                index,\r\n                                                                text,\r\n                                                                is_correct,\r\n                                                                feedback,\r\n                                                            }\r\n                                                            }\r\n                                                        }`,\r\n                                    \"variables\":{\r\n\r\n                                    }},\r\n                    // used to give every new request a unique id\r\n                    'current_request_id': 0,\r\n                    // the returned data goes throught this function before going to the response, if you want to move some data around for performance or efficiecy\r\n                    format_reponse_data: function(data) {\r\n                        try {\r\n                            data.mcqs_by_id_array.forEach((e) => {\r\n                                e.mcqs = e.mcqs.map((e) => {return e.id})\r\n                            });\r\n                            return data.mcqs_by_id_array\r\n                        } catch (error) {\r\n                            return data.mcqs_by_id_array\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    'id': 3,\r\n                    'path': 'targets_from_array',\r\n                    //what type should the input be: String\r\n                    'input_type': Array,\r\n                    // Name used by function to know how to call the send var\r\n                    'input_name': \"idArray\",\r\n                    //idk\r\n                    'response_type': 'list of targets with: id, label, description, mcq_ids, img_url_large, youtube_id, slide_text, slide_title',\r\n                    //return if there was an error (so the site doesn't crash)\r\n                    'empty_response':   [\r\n                                            {\r\n                                            \"id\": \"0\",\r\n                                            \"label\": \"No Target Found\",\r\n                                            \"description\": \"No Description\",\r\n                                            \"img_url_large\": \"\",\r\n                                            \"mcqs\": [\"0\"],\r\n                                            \"youtube_id\": \"dQw4w9WgXcQ\",\r\n                                            \"slide_text\": \"No Slide Text\",\r\n                                            \"slide_title\": \"No Slide Title\"\r\n                                            }\r\n                                        ],\r\n                    // for the response objects\r\n                    // every different request through this object gets it's own response object, so components don't change other's data\r\n                    //\r\n                    // every response is formatted like '1':{'loading': if the request is still loading, used for loading circle on screen\r\n                    //                                       'input'  : The data that was send to the server, used to know if this request was already called, then it just updates the old one\r\n                    //                                       'data'   : The data.data that the server returned}\r\n                    'response': {},\r\n                    //send with the graphQl server, variables do not currently work\r\n                    'request_data': {\"query\":`query targets_from_id_array($idArray: [ID]!) {\r\n                                                    targets_by_id_array(id_array: $idArray) {\r\n                                                    id,\r\n                                                    label,\r\n                                                    description,\r\n                                                    img_url_large,\r\n                                                    mcqs {\r\n                                                        id\r\n                                                    },\r\n                                                    youtube_id,\r\n                                                    slide_text,\r\n                                                    slide_title\r\n                                                    }\r\n                                                }`,\r\n                                    \"variables\":{\r\n\r\n                                    }},\r\n                    // used to give every new request a unique id\r\n                    'current_request_id': 0,\r\n                    // the returned data goes throught this function before going to the response, if you want to move some data around for performance or efficiecy\r\n                    format_reponse_data: function(data) {\r\n                        try {\r\n                            data.targets_by_id_array.forEach((e) => {\r\n                                e.mcqs = e.mcqs.map((e) => {return e.id})\r\n                            });\r\n                            return data.targets_by_id_array\r\n                        } catch (error) {\r\n                            return data.targets_by_id_array\r\n                        }\r\n                    }\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    computed: {\r\n        time_data(){\r\n            var time_data = {}\r\n            this.mcq_data.forEach((e) => {\r\n                if (Object.keys(e).includes('time_estimate')){\r\n                    console.log('time estimate')\r\n                    Object.keys(e.time_estimate).forEach((time_key) => {\r\n                    if (!Object.keys(time_data).includes(time_key)){\r\n                        time_data[time_key] = 0\r\n                    }\r\n\r\n                    time_data[time_key] = time_data[time_key] + Math.round(e.time_estimate[time_key])\r\n                    })\r\n                }\r\n\r\n            });\r\n            return time_data\r\n        },\r\n\r\n\r\n    },\r\n    methods: {\r\n        forceQuestionReload: async function() {\r\n            this.questions_loaded = false;\r\n            this.$nextTick.then(() => {\r\n                console.log('forceQuestionReload')\r\n\r\n                this.questions_loaded = true;\r\n            })\r\n        },\r\n\r\n      \r\n        getResponseId: function(name, request_config) {\r\n            const index_of_obj = this.query_objects.findIndex((e) => {return e.path == name})\r\n\r\n            if (Object.keys(this.query_objects[index_of_obj].response).map(id => this.query_objects[index_of_obj].response[id].input).lenth == 0){\r\n                return 0\r\n            } else {\r\n                var index = Object.keys(this.query_objects[index_of_obj].response).map(id => this.query_objects[index_of_obj].response[id].input).indexOf(request_config.data)\r\n                if (index != -1) {\r\n                    return Object.keys(this.query_objects[index_of_obj].response)[index]\r\n                } else {\r\n                    this.query_objects[index_of_obj].current_request_id += 1\r\n                    const id = this.query_objects[index_of_obj].current_request_id\r\n                    this.query_objects[index_of_obj].response[id] = {\r\n                        input: {},\r\n                        loading: false,\r\n                        data: this.query_objects[index_of_obj].empty_response\r\n                    }\r\n                    \r\n                    return id\r\n                }\r\n            }\r\n        },\r\n        createRequestConfig: function(name, input) {\r\n            const index_of_obj = this.query_objects.findIndex((e) => {return e.path == name})\r\n\r\n            const url = 'https://leerlevels-data-server.herokuapp.com/'\r\n            const headers = { \r\n                'Authorization': 'Z-@rtN3dpaaa', \r\n                'Content-Type': 'application/json'\r\n            }\r\n\r\n            const request_data = this.query_objects[index_of_obj].request_data\r\n            // const data = JSON.parse(request_data_string)\r\n            input = input || {}\r\n            if (!input instanceof Object) {\r\n                const input_type = this.query_objects[index_of_obj].input_type\r\n                if (input instanceof input_type){\r\n                    if (input_type == Array) {\r\n                        input = [input]\r\n                    }\r\n                    if (input_type == Number) {\r\n                        input = Number(input)\r\n                    }\r\n                    if (input_type == String) {\r\n                        input = input.toString()\r\n                    }\r\n                }\r\n            }\r\n            const key_name = this.query_objects[index_of_obj].input_name\r\n            request_data.variables[key_name] = input\r\n\r\n            return {\r\n                url: url,\r\n                method: 'post',\r\n                data: JSON.stringify(request_data),\r\n                headers: headers,\r\n            }\r\n        },\r\n        dataServerRequestApi: async function(config, name, id){\r\n            var index_of_obj = this.query_objects.findIndex((e) => {return e.path == name})\r\n\r\n            this.query_objects[index_of_obj].response[id].loading = true\r\n            this.query_objects[index_of_obj].response[id].input = config.data\r\n            console.log('sending: ', name, '\\n', ' input: ', JSON.parse(config.data))\r\n\r\n\r\n            const data = await axios(config).then((response) => {\r\n                console.log('Response: ', name, '\\n', ' stored at: ', id, '\\n', ' data: ', response.data.data)\r\n                const data = this.query_objects[index_of_obj].format_reponse_data(response.data.data)\r\n                this.query_objects[index_of_obj].response[id].data = data\r\n\r\n                this.query_objects[index_of_obj].loading = false\r\n                return data\r\n            })\r\n            return data\r\n        },\r\n        // request the input data from the query object, that call the api server\r\n        // used in: getMcqDataFromArray, getTargetDataFromArray\r\n        apiRequest: async function(name, input){\r\n            const request_config = this.createRequestConfig(name, input)\r\n            \r\n            const id = await this.getResponseId(name, request_config)\r\n            \r\n            const data = await this.dataServerRequestApi(request_config, name, id)\r\n            \r\n            return data\r\n        },\r\n        formatData: function(data) {\r\n            if(data.value_type == 'integer'){\r\n                return parseInt(data.value[0])\r\n            } else if (data.value_type == 'integer_array'){\r\n                return data.value\r\n            } else {\r\n                throw(\"Invalid query_type type: \" + data.value_type)\r\n            }\r\n        },  \r\n        // send a reuqest from a query obj, and the endpoint\r\n        // used in: vuex store\r\n        postAnswer: function(obj){\r\n            var index_of_obj = this.query_objects.indexOf(obj)\r\n\r\n            var endpoint = 'https://leerlevels-data.herokuapp.com/' + obj.path\r\n            var post_object = {}\r\n            post_object[obj.request_input] = this.formatData({'value': obj.value, 'value_type': obj.value_type})\r\n            console.log(\"Sending: \",post_object, \"\\n\",\"to: \",endpoint)\r\n            return axios.post(endpoint, post_object).then((response) => {\r\n                console.log(\"Response of : \" + obj.path, '\\n', 'response Data: ', response.data)\r\n                this.query_objects[index_of_obj].response = response.data\r\n                return response\r\n            })\r\n            .catch(function(error){\r\n                var full_error = \"Verstuurde data: \"+JSON.stringify(post_object) +\"\\n\\n\"+error\r\n            })\r\n        },\r\n        loadMcqDataFromArray: async function(responseArray){\r\n            responseArray = responseArray.map((e) => {return Number(e)})\r\n\r\n            // more data\r\n            const more_mcq_data = await this.apiRequest('mcqs_from_array', responseArray).then((response) => {\r\n                response.forEach((e) => {\r\n                    if (!this.mcq_data.map((j) => {return j.id}).includes(e.id)){\r\n                        this.mcq_data.push(e)\r\n                    }\r\n                    const index = this.mcq_data.findIndex((i) => {return i.id == e.id})\r\n                    Object.keys(e).forEach((key) => {\r\n                        this.mcq_data[index][key] = e[key]\r\n                    })\r\n                })\r\n            })\r\n\r\n            // answer distribution\r\n            const distribution_obj_index =  this.query_objects.findIndex((e) => {return e.path == 'answer_distribution'})\r\n            this.query_objects[distribution_obj_index].value = responseArray\r\n\r\n            const distribution_promise = await this.postAnswer(this.query_objects[distribution_obj_index]).then(() => {\r\n                this.query_objects[distribution_obj_index].response.forEach((e) => {\r\n                    if (e.answer_distribution != 'No distribution for this id'){\r\n                        const index = this.mcq_data.findIndex((i) => {return i.id == e.question_id})\r\n\r\n                        this.mcq_data[index].answer_distribution = e.answer_distribution\r\n                    }\r\n                })\r\n            })\r\n\r\n            // time estimate data\r\n            const time_estimate_obj_index = this.query_objects.findIndex((e) => {return e.path == 'time_estimate'})\r\n            this.query_objects[time_estimate_obj_index].value = responseArray\r\n\r\n            const time_estimate_promise = await this.postAnswer(this.query_objects[time_estimate_obj_index]).then(() => {\r\n                if (this.query_objects[time_estimate_obj_index].response.lenth != 0){\r\n                    this.query_objects[time_estimate_obj_index].response.forEach((e) => {\r\n                        const id = e.id\r\n                        delete e.id\r\n                        const index = this.mcq_data.findIndex((i, index) => {\r\n                            if(Object.keys(e).includes('id')){\r\n                                return i.id == e.id\r\n                            } else {\r\n                                return i.id == this.query_objects[time_estimate_obj_index].value[index]\r\n                            }})\r\n                        if (index != -1){\r\n                            this.mcq_data[index].time_estimate = e\r\n                        }\r\n                    })\r\n                }\r\n\r\n            })\r\n        },\r\n        // get more data for each target of the returned object that returns targets\r\n        // used in: postObj, vuex store\r\n        getTargetDataFromArray: async function(responseArray){\r\n            responseArray = responseArray.map((e) => {return Number(e)})\r\n\r\n            // more data\r\n            const more_mcq_data = await this.apiRequest('targets_from_array', responseArray).then((response) => {\r\n                response.forEach((e) => {\r\n                    this.target_data = e\r\n                })\r\n            })\r\n        },\r\n\r\n    },  \r\n    created() {\r\n        this.getTargetDataFromArray([this.id]).then(() => {\r\n            this.loadMcqDataFromArray(this.target_data.mcqs).then(()=>{this.questions_loaded = true})\r\n        })\r\n\r\n    },\r\n    watch:{\r\n        id (new_value){\r\n            console.log('Selected: ', new_value)\r\n            this.questions_loaded = false\r\n            this.getTargetDataFromArray([this.id]).then(() => {\r\n                this.mcq_data = []\r\n                this.loadMcqDataFromArray(this.target_data.mcqs).then(()=>{this.questions_loaded = true})\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import { render } from \"./TargetPanel.vue?vue&type=template&id=afc0b256\"\nimport script from \"./TargetPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TargetPanel.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\joost\\\\Desktop\\\\leerlevels\\\\leerlevels_site_modules\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + \"webfontloader\" + \".\" + \"da05fa6d\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"leerlevels_site_modules:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkleerlevels_site_modules\"] = self[\"webpackChunkleerlevels_site_modules\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2634); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_v_app","_createVNode","_component_v_main","_component_router_view","name","data","__exports__","render","_component_v_navigation_drawer","$data","$event","rail","onClick","permanent","_component_v_list_item","title","nav","append","_component_v_btn","variant","icon","_component_v_divider","_component_v_list","density","_createElementBlock","_Fragment","_renderList","route_item","index","key","value","route","_hoisted_1","_component_Datapagina","_hoisted_2","_component_Vrijwilliger","_hoisted_3","_component_FotoInfo","_hoisted_4","_component_SearchItems","class","_createElementVNode","$options","_component_v_progress_circular","indeterminate","_component_v_container","_component_v_row","_component_v_col","cols","md","sm","_component_SelectionList","selection_type","_hoisted_5","_component_Requesters","request_type","_hoisted_7","_component_Selectors","_hoisted_8","_component_ResponseOutput","_hoisted_10","_hoisted_11","style","_component_v_text_field","onKeydown","label","hint","_component_v_card","map","e","id","color","_component_v_select","outlined","items","_component_v_checkbox_btn","_toDisplayString","$store","state","datapagina_module","selected_item_ids","$props","length","onScroll","size","filter","_component_v_list_item_action","start","readonly","_component_v_list_item_title","onInput","props","String","selected_items","search","input_box","list_length","sort_types","selected_sort_type","buttoncolor","computed","searchList","this","toLowerCase","split","listOfItemType","Object","values","targets","mcqs","filteredList","item","some","searchItem","itemText","includes","sortedFilteredList","sort","a","b","a_label","question_text","b_label","smallerSortedFilteredList","slice","allSelected","get","every","filtered_item","set","val","noneSelected","selectedItemIds","commit","type","updateInputBox","selectedItemsUpdated","selected_items_updated","selectedItems","getters","methods","updateSelectedItemsFromInputBox","toggleAll","ids","all_selected","selectAll","clearAll","clickItem","handleScrollInput","target","scrollTop","clientHeight","scrollHeight","getNewInputItems","watch","new_value","old_value","query_object","selectedItemsIdsLength","value_type","loading","sending","disabled","availableRequests","query_objects","input","shown","sendRequest","dispatch","_component_v_tabs","centered","query_obj","_component_v_tab","path","_component_v_window","_component_v_window_item","_component_QueryOutputTab","response","send_ids","_component_v_expansion_panels","multiple","_hoisted_6","listItem","returns","width","_component_OutputListTarget","item_obj","_component_OutputListMcq","_component_v_sheet","_component_v_expansion_panel","_component_v_expansion_panel_title","_component_v_expansion_panel_text","description","toString","keys","src","youtube_id","allow","allowfullscreen","img_url_large","alt","slide_title","_hoisted_12","_hoisted_13","slide_text","_hoisted_15","mcq","no_target","_hoisted_16","_component_v_table","_hoisted_17","parseFloat","toFixed","target_id","answer_options","option","is_correct","text","answer_distribution","_hoisted_9","Math","round","time_estimate","targetDataFromId","Boolean","default","components","OutputListTarget","totalAnswerDistribution","total","forEach","Number","OutputListMcq","sorted_description","view_more_label","mcqDataFromId","time_data","time_key","console","log","created","listItems","returned_target_data","returned_question_data","Question_ID","listIds","copyText","el","document","createElement","setAttribute","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","lastRequestedPath","selected_query_obj_path","QueryOutputTab","selectedQueryObj","indexOf","last_clicked_query_object_path","noshade","selectedTabResponseType","selectedTabQueryObj","selectedTabResponseArr","Array","new_selected","concat","selectReturnedData","outputListIds","selectQuestionsFromTargets","question_ids","prototype","push","apply","selectTargetsFromQuestions","target_ids","create","SelectionList","Requesters","Selectors","ResponseOutput","dataLoaded","mounted","_component_OptionTable","options","_component_QuestionPanels","_component_TargetPanels","amount","questionDataFromId","question_id","_component_v_textarea","rows","selectedOptions","vrijwilliger","selected_options","current_selected","OptionIds","new_selected_options","question","total_wrong","OptionTable","questionsByOptions","questions","optionByQuestionId","targetsByOptions","questionsByTarget","optionsByQuestionId","optionsByTargetId","toggleOptions","QuestionPanels","TargetPanels","without_feedback","returned_data","feedback","filteredItems","unsorted","unsorted_ids","sorted","optionsWithData","with_option_data","option_data","splitQuestionAndOption","option_text","vrijwilliger_module","question_data","selectedQuestions","getFrequentlyWrong","top_k","time_from","axios","then","rankingamount","rankingnofeedback","catch","error","string","charAt","charCodeAt","_component_v_card_text","_component_v_toolbar","fixed","extension","photo","_component_v_icon","right","large","_component_v_toolbar_title","_component_v_file_input","accept","onChange","top_k_id","original_text","top_k_question","_hoisted_14","_component_TargetPanel","top_k_documents","_hoisted_18","_ctx","mcqid","_component_QuestionPanel","QuestionPanel","target_data","TargetPanel","mcq_data","image_previews","image_list","uploaded_photos","image_tab","image_info_tab","opened_image_panels","returned_image_data","filesUploaded","event","count","files","reader","FileReader","imageNames","onload","result","requestImageData","readAsDataURL","removePhoto","splice","removeAllPhotos","preview_list","file","formData","FormData","imagefile","headers","imageFileFromName","noDuplicateArray","array","pos","last_requested","panel","item_data","splitId","getLLSearch","async","selectItem","Datapagina","Vrijwilliger","FotoInfo","SearchItems","route_items","drawer","selected_site","routes","component","Site","router","createRouter","history","createWebHistory","process","endpoint","request_input","input_description","is_request","command","all_targets_from_input","all_questions_from_input","selected_tab_path","return_question","empty_target","availableIds","formatData","parseInt","mutations","setTargetsData","JSON","parse","stringify","setMcqsData","setSelectedItemsUpdated","setSelectedItemIds","setSelectedItemIdsFromInputBox","setQueryData","obj","setLastClickedQueryObjectPath","addMcqDataFromId","addTargetDataFromId","setSelectedTabPath","actions","loadTargets","request_config","createRequestConfig","config","loadMcqs","postAnswer","post_object","full_error","submitObj","objvalue","hasOwnProperty","responseArray","apiRequest","getMcqDataFromArray","distribution_obj_index","findIndex","distribution_promise","time_estimate_obj_index","time_estimate_promise","lenth","more_mcq_data","Promise","all","getTargetDataFromArray","setSelectedOptions","clickOption","fotoinfo_module","api_module","format_reponse_data","targets_by_id_array","mcqs_by_id_array","data_server_responses","url","request_data","input_type","key_name","input_name","variables","method","sendRequestsInput","responseKeys","responseData","j","setQueryObjectResponseData","setQueryObjectResponseLoading","setQueryObjectResponseInput","createEmptyResponse","empty_response","incrementQueryObjectRequestId","current_request_id","getResponseId","dataServerRequestApi","modules","createStore","createVuetify","loadFonts","webFontLoader","load","google","families","createApp","App","use","store","vuetify","mount","defineAsyncComponent","forceRender","$nextTick","index_of_obj","loadMcqDataFromArray","questions_loaded","forceQuestionReload","i","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","__proto__","t","mode","ns","def","current","getOwnPropertyNames","definition","o","defineProperty","enumerable","f","chunkId","reduce","promises","u","miniCssF","g","globalThis","Function","window","prop","call","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","clearTimeout","doneFns","parentNode","setTimeout","bind","head","Symbol","toStringTag","p","installedChunks","installedChunkData","promise","resolve","reject","Error","loadingEnded","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}